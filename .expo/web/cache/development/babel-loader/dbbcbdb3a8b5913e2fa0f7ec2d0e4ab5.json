{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport { addWhitelistedNativeProps, addWhitelistedUIProps } from \"./ConfigHelper\";\nimport * as reanimated1 from \"./reanimated1\";\nimport ReanimatedComponents from \"./reanimated2/component\";\n\nvar Animated = _objectSpread(_objectSpread({}, ReanimatedComponents), {}, {\n  createAnimatedComponent: createAnimatedComponent,\n  addWhitelistedNativeProps: addWhitelistedNativeProps,\n  addWhitelistedUIProps: addWhitelistedUIProps\n}, reanimated1);\n\nexport * from \"./reanimated2\";\nexport * from \"./reanimated1\";\nexport default Animated;\nLogBox.ignoreLogs(['RCTBridge required dispatch_sync to load RNGestureHandlerModule. This may lead to deadlocks']);","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/Animated.js"],"names":["createAnimatedComponent","addWhitelistedNativeProps","addWhitelistedUIProps","reanimated1","ReanimatedComponents","Animated","LogBox","ignoreLogs"],"mappings":";;;;;;;AACA,OAAOA,uBAAP;AACA,SACEC,yBADF,EAEEC,qBAFF;AAIA,OAAO,KAAKC,WAAZ;AACA,OAAOC,oBAAP;;AAEA,IAAMC,QAAQ,mCAETD,oBAFS;AAGZJ,EAAAA,uBAAuB,EAAvBA,uBAHY;AAKZC,EAAAA,yBAAyB,EAAzBA,yBALY;AAMZC,EAAAA,qBAAqB,EAArBA;AANY,GAQTC,WARS,CAAd;;AAWA;AACA;AACA,eAAeE,QAAf;AAMAC,MAAM,CAACC,UAAP,CAAkB,CAChB,6FADgB,CAAlB","sourcesContent":["import { LogBox } from 'react-native';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport * as reanimated1 from './reanimated1';\nimport ReanimatedComponents from './reanimated2/component';\n\nconst Animated = {\n  // components\n  ...ReanimatedComponents,\n  createAnimatedComponent,\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n  // reanimated 1\n  ...reanimated1,\n};\n\nexport * from './reanimated2';\nexport * from './reanimated1';\nexport default Animated;\n\n// I think we can ignore this message as long as Gesture Handler doesn't\n// try to load the Reanimated module. I figured it should be here instead of\n// RNGH because this prevents the message from being displayed for all\n// versions of RNGH.\nLogBox.ignoreLogs([\n  'RCTBridge required dispatch_sync to load RNGestureHandlerModule. This may lead to deadlocks',\n]);\n"]},"metadata":{},"sourceType":"module"}