{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from \"../../modules/pick\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePressEvents from \"../../modules/usePressEvents\";\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n\n  var elementProps = _extends(supportedProps, pressEventHandlers);\n\n  return React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = React.memo(React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js"],"names":["React","useMemo","useRef","pick","useMergeRefs","usePressEvents","forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","pickProps","props","TouchableWithoutFeedback","forwardedRef","delayPressIn","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","pressConfig","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","element","Children","only","supportedProps","ref","elementProps","cloneElement","apply","concat","MemoedTouchableWithoutFeedback","memo","forwardRef","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;"]},"metadata":{},"sourceType":"module"}