{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport invariant from 'invariant';\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\n\nvar AnimatedBlock = function (_AnimatedNode) {\n  _inherits(AnimatedBlock, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedBlock);\n\n  function AnimatedBlock(array) {\n    var _this;\n\n    _classCallCheck(this, AnimatedBlock);\n\n    invariant(array.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _super.call(this, {\n      type: 'block',\n      block: array\n    }, array);\n    _this._array = array;\n    return _this;\n  }\n\n  _createClass(AnimatedBlock, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedBlock, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var result;\n\n      this._array.forEach(function (node) {\n        result = val(node);\n      });\n\n      return result;\n    }\n  }]);\n\n  return AnimatedBlock;\n}(AnimatedNode);\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v != null && v.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n\n    return v.__val;\n  }\n\n  return v instanceof AnimatedNode ? v : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v) ? new AnimatedBlock(v.map(function (node) {\n    return adapt(node);\n  })) : nodify(v);\n}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","array","every","el","type","block","_array","__nodeID","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,GAAT;AACA,OAAOC,YAAP;AACA,OAAOC,qBAAP;;IAEMC,a;;;;;AAGJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjBL,IAAAA,SAAS,CACPK,KAAK,CAACC,KAAN,CAAY,UAACC,EAAD;AAAA,aAAQA,EAAE,YAAYL,YAAtB;AAAA,KAAZ,CADO,8IAAT;AAIA,8BAAM;AAAEM,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAEJ;AAAxB,KAAN,EAAuCA,KAAvC;AACA,UAAKK,MAAL,GAAcL,KAAd;AANiB;AAOlB;;;;WAED,oBAAW;AACT,qCAA6B,KAAKM,QAAlC;AACD;;;WAED,wBAAe;AACb,UAAIC,MAAJ;;AACA,WAAKF,MAAL,CAAYG,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC5BF,QAAAA,MAAM,GAAGX,GAAG,CAACa,IAAD,CAAZ;AACD,OAFD;;AAGA,aAAOF,MAAP;AACD;;;;EAtByBV,Y;;AAyB5B,OAAO,SAASa,mBAAT,CAA6BC,KAA7B,EAAoC;AACzC,SAAOC,KAAK,CAACD,KAAD,CAAZ;AACD;;AAED,SAASE,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,MAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAzB,YAAyBA,CAAC,CAAEC,SAAhC,EAA2C;AACzC,QAAI,CAACD,CAAC,CAACE,KAAP,EAAc;AACZF,MAAAA,CAAC,CAACE,KAAF,GAAU,IAAIlB,qBAAJ,CAA0B,CAA1B,CAAV;AACD;;AACD,WAAOgB,CAAC,CAACE,KAAT;AACD;;AAED,SAAOF,CAAC,YAAYjB,YAAb,GACHiB,CADG,GAEHhB,qBAAqB,CAACmB,gBAAtB,CAAuCH,CAAvC,CAFJ;AAGD;;AAED,OAAO,SAASF,KAAT,CAAeE,CAAf,EAAkB;AACvB,SAAOI,KAAK,CAACC,OAAN,CAAcL,CAAd,IACH,IAAIf,aAAJ,CAAkBe,CAAC,CAACM,GAAF,CAAM,UAACX,IAAD;AAAA,WAAUG,KAAK,CAACH,IAAD,CAAf;AAAA,GAAN,CAAlB,CADG,GAEHI,MAAM,CAACC,CAAD,CAFV;AAGD","sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"]},"metadata":{},"sourceType":"module"}