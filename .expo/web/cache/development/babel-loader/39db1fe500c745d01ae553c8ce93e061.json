{"ast":null,"code":"'use strict';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar emptyFunction = function emptyFunction() {};\n\nfunction supportsPassiveEvents() {\n  var supported = false;\n\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get: function get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n\n  return supported;\n}\n\nvar canUsePassiveEvents = supportsPassiveEvents();\n\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\n\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n\n    var element = target;\n\n    if (listener != null) {\n      var compatListener = function compatListener(e) {\n        return listener(normalizeEvent(e));\n      };\n\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/modules/createEventHandle/index.js"],"names":["canUseDOM","emptyFunction","supportsPassiveEvents","supported","options","Object","defineProperty","get","window","addEventListener","removeEventListener","e","canUsePassiveEvents","getOptions","Boolean","capture","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","normalizeEvent","event","nativeEvent","persist","createEventHandle","type","opts","target","listener","Error","element","compatListener","removeListener"],"mappings":"AAQA;;AAEA,SAASA,SAAT,QAA0B,+BAA1B;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB,CAAE,CAA/C;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAIC,SAAS,GAAG,KAAhB;;AAGA,MAAIH,SAAJ,EAAe;AACb,QAAI;AACF,UAAII,OAAO,GAAG,EAAd;AACAC,MAAAA,MAAM,CAACC,cAAP,CAAsBF,OAAtB,EAA+B,SAA/B,EAA0C;AACxCG,QAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBJ,UAAAA,SAAS,GAAG,IAAZ;AACA,iBAAO,KAAP;AACD;AAJuC,OAA1C;AAMAK,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCL,OAAtC;AACAI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmC,IAAnC,EAAyCN,OAAzC;AACD,KAVD,CAUE,OAAOO,CAAP,EAAU,CAAE;AACf;;AAED,SAAOR,SAAP;AACD;;AAED,IAAIS,mBAAmB,GAAGV,qBAAqB,EAA/C;;AAEA,SAASW,UAAT,CAAoBT,OAApB,EAA6B;AAC3B,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,SAAOQ,mBAAmB,GAAGR,OAAH,GAAaU,OAAO,CAACV,OAAO,CAACW,OAAT,CAA9C;AACD;;AAQD,SAASC,oBAAT,GAAgC;AAC9B,SAAO,KAAKC,YAAZ;AACD;;AAED,SAASC,kBAAT,GAA8B;AAC5B,SAAO,KAAKC,gBAAZ;AACD;;AAED,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BA,EAAAA,KAAK,CAACC,WAAN,GAAoBD,KAApB;AACAA,EAAAA,KAAK,CAACE,OAAN,GAAgBtB,aAAhB;AACAoB,EAAAA,KAAK,CAACH,kBAAN,GAA2BA,kBAA3B;AACAG,EAAAA,KAAK,CAACL,oBAAN,GAA6BA,oBAA7B;AACA,SAAOK,KAAP;AACD;;AAMD,eAAe,SAASG,iBAAT,CAA2BC,IAA3B,EAAiCrB,OAAjC,EAA0C;AACvD,MAAIsB,IAAI,GAAGb,UAAU,CAACT,OAAD,CAArB;AACA,SAAO,UAAUuB,MAAV,EAAkBC,QAAlB,EAA4B;AACjC,QAAID,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAM,CAAClB,gBAAd,KAAmC,UAAzD,EAAqE;AACnE,YAAM,IAAIoB,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,QAAIC,OAAO,GAAGH,MAAd;;AAEA,QAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,UAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBpB,CAAxB,EAA2B;AAC9C,eAAOiB,QAAQ,CAACR,cAAc,CAACT,CAAD,CAAf,CAAf;AACD,OAFD;;AAIAmB,MAAAA,OAAO,CAACrB,gBAAR,CAAyBgB,IAAzB,EAA+BM,cAA/B,EAA+CL,IAA/C;AACA,aAAO,SAASM,cAAT,GAA0B;AAC/B,YAAIF,OAAO,IAAI,IAAf,EAAqB;AACnBA,UAAAA,OAAO,CAACpB,mBAAR,CAA4Be,IAA5B,EAAkCM,cAAlC,EAAkDL,IAAlD;AACD;AACF,OAJD;AAKD,KAXD,MAWO;AACL,aAAOzB,aAAP;AACD;AACF,GArBD;AAsBD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar emptyFunction = function emptyFunction() {};\n\nfunction supportsPassiveEvents() {\n  var supported = false; // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get: function get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n\n  return supported;\n}\n\nvar canUsePassiveEvents = supportsPassiveEvents();\n\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\n\n\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\n\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n/**\n *\n */\n\n\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n\n    var element = target;\n\n    if (listener != null) {\n      var compatListener = function compatListener(e) {\n        return listener(normalizeEvent(e));\n      };\n\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}