{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tension\", \"friction\"],\n    _excluded2 = [\"bounciness\", \"speed\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { cond, sub, divide, multiply, add, pow, lessOrEq, and, greaterThan } from \"./../base\";\nimport AnimatedValue from \"./../core/InternalAnimatedValue\";\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction stiffnessFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 30), 3.62), 194);\n}\n\nfunction dampingFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 8), 3), 25);\n}\n\nfunction makeConfigFromOrigamiTensionAndFriction(prevConfig) {\n  var tension = prevConfig.tension,\n      friction = prevConfig.friction,\n      rest = _objectWithoutProperties(prevConfig, _excluded);\n\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    stiffness: typeof tension === 'number' ? stiffnessFromOrigamiValue(tension) : stiffnessFromOrigamiNode(tension),\n    damping: typeof friction === 'number' ? dampingFromOrigamiValue(friction) : dampingFromOrigamiNode(friction)\n  });\n}\n\nfunction makeConfigFromBouncinessAndSpeed(prevConfig) {\n  var bounciness = prevConfig.bounciness,\n      speed = prevConfig.speed,\n      rest = _objectWithoutProperties(prevConfig, _excluded2);\n\n  if (typeof bounciness === 'number' && typeof speed === 'number') {\n    return fromBouncinessAndSpeedNumbers(bounciness, speed, rest);\n  }\n\n  return fromBouncinessAndSpeedNodes(bounciness, speed, rest);\n}\n\nfunction fromBouncinessAndSpeedNodes(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return divide(sub(value, startValue), sub(endValue, startValue));\n  }\n\n  function projectNormal(n, start, end) {\n    return add(start, multiply(n, sub(end, start)));\n  }\n\n  function linearInterpolation(t, start, end) {\n    return add(multiply(t, end), multiply(sub(1, t), start));\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(sub(multiply(2, t), multiply(t, t)), start, end);\n  }\n\n  function b3Friction1(x) {\n    return add(sub(multiply(0.0007, pow(x, 3)), multiply(0.031, pow(x, 2))), multiply(0.64, x), 1.28);\n  }\n\n  function b3Friction2(x) {\n    return add(sub(multiply(0.000044, pow(x, 3)), multiply(0.006, pow(x, 2))), multiply(0.36, x), 2);\n  }\n\n  function b3Friction3(x) {\n    return add(sub(multiply(0.00000045, pow(x, 3)), multiply(0.000332, pow(x, 2))), multiply(0.1078, x), 5.84);\n  }\n\n  function b3Nobounce(tension) {\n    return cond(lessOrEq(tension, 18), b3Friction1(tension), cond(and(greaterThan(tension, 18), lessOrEq(tension, 44)), b3Friction2(tension), b3Friction3(tension)));\n  }\n\n  var b = normalize(divide(bounciness, 1.7), 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(divide(speed, 1.7), 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    stiffness: stiffnessFromOrigamiNode(bouncyTension),\n    damping: dampingFromOrigamiNode(bouncyFriction)\n  });\n}\n\nfunction fromBouncinessAndSpeedNumbers(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  var b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(speed / 1.7, 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction)\n  });\n}\n\nfunction makeDefaultConfig() {\n  return {\n    stiffness: new AnimatedValue(100),\n    mass: new AnimatedValue(1),\n    damping: new AnimatedValue(10),\n    overshootClamping: false,\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n    toValue: new AnimatedValue(0)\n  };\n}\n\nexport default {\n  makeDefaultConfig: makeDefaultConfig,\n  makeConfigFromBouncinessAndSpeed: makeConfigFromBouncinessAndSpeed,\n  makeConfigFromOrigamiTensionAndFriction: makeConfigFromOrigamiTensionAndFriction\n};","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/animations/SpringUtils.js"],"names":["cond","sub","divide","multiply","add","pow","lessOrEq","and","greaterThan","AnimatedValue","stiffnessFromOrigamiValue","oValue","dampingFromOrigamiValue","stiffnessFromOrigamiNode","dampingFromOrigamiNode","makeConfigFromOrigamiTensionAndFriction","prevConfig","tension","friction","rest","stiffness","damping","makeConfigFromBouncinessAndSpeed","bounciness","speed","fromBouncinessAndSpeedNumbers","fromBouncinessAndSpeedNodes","normalize","value","startValue","endValue","projectNormal","n","start","end","linearInterpolation","t","quadraticOutInterpolation","b3Friction1","x","b3Friction2","b3Friction3","b3Nobounce","b","s","bouncyTension","bouncyFriction","Math","makeDefaultConfig","mass","overshootClamping","restSpeedThreshold","restDisplacementThreshold","toValue"],"mappings":"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","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  pow,\n  lessOrEq,\n  and,\n  greaterThan,\n} from './../base';\nimport AnimatedValue from './../core/InternalAnimatedValue';\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction stiffnessFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 30), 3.62), 194);\n}\n\nfunction dampingFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 8), 3), 25);\n}\n\nfunction makeConfigFromOrigamiTensionAndFriction(prevConfig) {\n  const { tension, friction, ...rest } = prevConfig;\n  return {\n    ...rest,\n    stiffness:\n      typeof tension === 'number'\n        ? stiffnessFromOrigamiValue(tension)\n        : stiffnessFromOrigamiNode(tension),\n    damping:\n      typeof friction === 'number'\n        ? dampingFromOrigamiValue(friction)\n        : dampingFromOrigamiNode(friction),\n  };\n}\n\nfunction makeConfigFromBouncinessAndSpeed(prevConfig) {\n  const { bounciness, speed, ...rest } = prevConfig;\n  if (typeof bounciness === 'number' && typeof speed === 'number') {\n    return fromBouncinessAndSpeedNumbers(bounciness, speed, rest);\n  }\n  return fromBouncinessAndSpeedNodes(bounciness, speed, rest);\n}\n\nfunction fromBouncinessAndSpeedNodes(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return divide(sub(value, startValue), sub(endValue, startValue));\n  }\n\n  function projectNormal(n, start, end) {\n    return add(start, multiply(n, sub(end, start)));\n  }\n\n  function linearInterpolation(t, start, end) {\n    return add(multiply(t, end), multiply(sub(1, t), start));\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(sub(multiply(2, t), multiply(t, t)), start, end);\n  }\n\n  function b3Friction1(x) {\n    return add(\n      sub(multiply(0.0007, pow(x, 3)), multiply(0.031, pow(x, 2))),\n      multiply(0.64, x),\n      1.28\n    );\n  }\n\n  function b3Friction2(x) {\n    return add(\n      sub(multiply(0.000044, pow(x, 3)), multiply(0.006, pow(x, 2))),\n      multiply(0.36, x),\n      2\n    );\n  }\n\n  function b3Friction3(x) {\n    return add(\n      sub(multiply(0.00000045, pow(x, 3)), multiply(0.000332, pow(x, 2))),\n      multiply(0.1078, x),\n      5.84\n    );\n  }\n\n  function b3Nobounce(tension) {\n    return cond(\n      lessOrEq(tension, 18),\n      b3Friction1(tension),\n      cond(\n        and(greaterThan(tension, 18), lessOrEq(tension, 44)),\n        b3Friction2(tension),\n        b3Friction3(tension)\n      )\n    );\n  }\n\n  let b = normalize(divide(bounciness, 1.7), 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  const s = normalize(divide(speed, 1.7), 0, 20);\n  const bouncyTension = projectNormal(s, 0.5, 200);\n  const bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n  return {\n    ...rest,\n    stiffness: stiffnessFromOrigamiNode(bouncyTension),\n    damping: dampingFromOrigamiNode(bouncyFriction),\n  };\n}\n\nfunction fromBouncinessAndSpeedNumbers(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return (\n      0.00000045 * Math.pow(x, 3) -\n      0.000332 * Math.pow(x, 2) +\n      0.1078 * x +\n      5.84\n    );\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  let b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  const s = normalize(speed / 1.7, 0, 20);\n  const bouncyTension = projectNormal(s, 0.5, 200);\n  const bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n\n  return {\n    ...rest,\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction),\n  };\n}\n\nfunction makeDefaultConfig() {\n  return {\n    stiffness: new AnimatedValue(100),\n    mass: new AnimatedValue(1),\n    damping: new AnimatedValue(10),\n    overshootClamping: false,\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n    toValue: new AnimatedValue(0),\n  };\n}\n\nexport default {\n  makeDefaultConfig,\n  makeConfigFromBouncinessAndSpeed,\n  makeConfigFromOrigamiTensionAndFriction,\n};\n"]},"metadata":{},"sourceType":"module"}