{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["NativeAnimatedHelper","startNativeAnimationNextId","Animation","_proto","prototype","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind","e","unsetWaitingForIdentifier"],"mappings":"AASA;;AAEA,OAAOA,oBAAP;AACA,IAAIC,0BAA0B,GAAG,CAAjC;;AAIA,IAAIC,SAAS,GAAgB,YAAY;AACvC,WAASA,SAAT,GAAqB,CAAE;;AAEvB,MAAIC,MAAM,GAAGD,SAAS,CAACE,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,KAAP,GAAe,SAASA,KAAT,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8DC,aAA9D,EAA6E,CAAE,CAA9F;;AAEAP,EAAAA,MAAM,CAACQ,IAAP,GAAc,SAASA,IAAT,GAAgB;AAC5B,QAAI,KAAKC,UAAT,EAAqB;AACnBZ,MAAAA,oBAAoB,CAACa,GAArB,CAAyBC,aAAzB,CAAuC,KAAKF,UAA5C;AACD;AACF,GAJD;;AAMAT,EAAAA,MAAM,CAACY,0BAAP,GAAoC,SAASA,0BAAT,GAAsC;AAGxE,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,GAJD;;AAOAb,EAAAA,MAAM,CAACc,gBAAP,GAA0B,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AAC1D,QAAIV,KAAK,GAAG,KAAKW,OAAjB;AACA,SAAKA,OAAL,GAAe,IAAf;AACAX,IAAAA,KAAK,IAAIA,KAAK,CAACU,MAAD,CAAd;AACD,GAJD;;AAMAf,EAAAA,MAAM,CAACiB,sBAAP,GAAgC,SAASA,sBAAT,CAAgCV,aAAhC,EAA+C;AAC7E,QAAIW,0BAA0B,GAAGpB,0BAA0B,GAAG,iBAA9D;AACAA,IAAAA,0BAA0B,IAAI,CAA9B;AACAD,IAAAA,oBAAoB,CAACa,GAArB,CAAyBS,uBAAzB,CAAiDD,0BAAjD;;AAEA,QAAI;AACFX,MAAAA,aAAa,CAACa,YAAd;;AAEA,WAAKX,UAAL,GAAkBZ,oBAAoB,CAACwB,sBAArB,EAAlB;AACAxB,MAAAA,oBAAoB,CAACa,GAArB,CAAyBY,kBAAzB,CAA4C,KAAKb,UAAjD,EAA6DF,aAAa,CAACgB,cAAd,EAA7D,EAA6F,KAAKX,0BAAL,EAA7F,EAAgI,KAAKE,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAhI;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACV,YAAMA,CAAN;AACD,KAPD,SAOU;AACR5B,MAAAA,oBAAoB,CAACa,GAArB,CAAyBgB,yBAAzB,CAAmDR,0BAAnD;AACD;AACF,GAfD;;AAiBA,SAAOnB,SAAP;AACD,CA5C4B,EAA7B;;AA8CA,eAAeA,SAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}