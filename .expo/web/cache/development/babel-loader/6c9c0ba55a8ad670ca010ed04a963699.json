{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { convertToHSVA, isColor, toRGBA } from \"../Colors\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nvar recognizePrefixSuffix = function () {\n  var _f = function _f(value) {\n    var _a;\n\n    if (typeof value === 'string') {\n      var match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n\n      if (!match) {\n        throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n      }\n\n      var prefix = match[1];\n      var suffix = match[4];\n      var number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n      return {\n        prefix: prefix,\n        suffix: suffix,\n        strippedValue: parseFloat(number)\n      };\n    } else {\n      return {\n        strippedValue: value\n      };\n    }\n  };\n\n  _f._closure = {};\n  _f.asString = \"function recognizePrefixSuffix(value){var _a;if(typeof value==='string'){const match=value.match(/([A-Za-z]*)(-?\\\\d*\\\\.?\\\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);if(!match){throw Error(\\\"Couldn't parse animation value. Check if there isn't any typo.\\\");}const prefix=match[1];const suffix=match[4];const number=match[2]+((_a=match[3])!==null&&_a!==void 0?_a:'');return{prefix:prefix,suffix:suffix,strippedValue:parseFloat(number)};}else{return{strippedValue:value};}}\";\n  _f.__workletHash = 9535837559464;\n  _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (11:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar decorateAnimation = function () {\n  var _f = function _f(animation) {\n    if (animation.isHigherOrder) {\n      return;\n    }\n\n    var baseOnStart = animation.onStart;\n    var baseOnFrame = animation.onFrame;\n\n    var animationCopy = _extends({}, animation);\n\n    delete animationCopy.callback;\n\n    var prefNumberSuffOnStart = function prefNumberSuffOnStart(animation, value, timestamp, previousAnimation) {\n      var _a, _b, _c, _d;\n\n      var _recognizePrefixSuffi = recognizePrefixSuffix(value),\n          prefix = _recognizePrefixSuffi.prefix,\n          suffix = _recognizePrefixSuffi.suffix,\n          strippedValue = _recognizePrefixSuffi.strippedValue;\n\n      animation.__prefix = prefix;\n      animation.__suffix = suffix;\n      animation.strippedCurrent = strippedValue;\n\n      var _recognizePrefixSuffi2 = recognizePrefixSuffix(animation.toValue),\n          strippedToValue = _recognizePrefixSuffi2.strippedValue;\n\n      animation.current = strippedValue;\n      animation.startValue = strippedValue;\n      animation.toValue = strippedToValue;\n\n      if (previousAnimation && previousAnimation !== animation) {\n        previousAnimation.current = previousAnimation.strippedCurrent;\n      }\n\n      baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n      animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n\n      if (previousAnimation && previousAnimation !== animation) {\n        previousAnimation.current = ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') + previousAnimation.current + ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n      }\n    };\n\n    var prefNumberSuffOnFrame = function prefNumberSuffOnFrame(animation, timestamp) {\n      var _a, _b;\n\n      animation.current = animation.strippedCurrent;\n      var res = baseOnFrame(animation, timestamp);\n      animation.strippedCurrent = animation.current;\n      animation.current = ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') + animation.current + ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n      return res;\n    };\n\n    var tab = ['H', 'S', 'V', 'A'];\n\n    var colorOnStart = function colorOnStart(animation, value, timestamp, previousAnimation) {\n      var HSVAValue;\n      var HSVACurrent;\n      var HSVAToValue;\n      var res = [];\n\n      if (isColor(value)) {\n        HSVACurrent = convertToHSVA(animation.current);\n        HSVAValue = convertToHSVA(value);\n\n        if (animation.toValue) {\n          HSVAToValue = convertToHSVA(animation.toValue);\n        }\n      }\n\n      tab.forEach(function (i, index) {\n        animation[i] = _extends({}, animationCopy);\n        animation[i].current = HSVACurrent[index];\n        animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n        animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n        res.push(animation[i].current);\n      });\n      animation.current = toRGBA(res);\n    };\n\n    var colorOnFrame = function colorOnFrame(animation, timestamp) {\n      var HSVACurrent = convertToHSVA(animation.current);\n      var res = [];\n      var finished = true;\n      tab.forEach(function (i, index) {\n        animation[i].current = HSVACurrent[index];\n        finished &= animation[i].onFrame(animation[i], timestamp);\n        res.push(animation[i].current);\n      });\n      animation.current = toRGBA(res);\n      return finished;\n    };\n\n    var arrayOnStart = function arrayOnStart(animation, value, timestamp, previousAnimation) {\n      value.forEach(function (v, i) {\n        animation[i] = _extends({}, animationCopy);\n        animation[i].current = v;\n        animation[i].toValue = animation.toValue[i];\n        animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      });\n      animation.current = value;\n    };\n\n    var arrayOnFrame = function arrayOnFrame(animation, timestamp) {\n      var finished = true;\n      animation.current.forEach(function (v, i) {\n        finished &= animation[i].onFrame(animation[i], timestamp);\n        animation.current[i] = animation[i].current;\n      });\n      return finished;\n    };\n\n    animation.onStart = function (animation, value, timestamp, previousAnimation) {\n      if (isColor(value)) {\n        colorOnStart(animation, value, timestamp, previousAnimation);\n        animation.onFrame = colorOnFrame;\n        return;\n      } else if (Array.isArray(value)) {\n        arrayOnStart(animation, value, timestamp, previousAnimation);\n        animation.onFrame = arrayOnFrame;\n        return;\n      } else if (typeof value === 'string') {\n        prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n        animation.onFrame = prefNumberSuffOnFrame;\n        return;\n      }\n\n      baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n  };\n\n  _f._closure = {\n    recognizePrefixSuffix: recognizePrefixSuffix,\n    isColor: isColor,\n    convertToHSVA: convertToHSVA,\n    toRGBA: toRGBA\n  };\n  _f.asString = \"function decorateAnimation(animation){const{recognizePrefixSuffix,isColor,convertToHSVA,toRGBA}=jsThis._closure;{if(animation.isHigherOrder){return;}const baseOnStart=animation.onStart;const baseOnFrame=animation.onFrame;const animationCopy=Object.assign({},animation);delete animationCopy.callback;const prefNumberSuffOnStart=function(animation,value,timestamp,previousAnimation){var _a,_b,_c,_d;const{prefix:prefix,suffix:suffix,strippedValue:strippedValue}=recognizePrefixSuffix(value);animation.__prefix=prefix;animation.__suffix=suffix;animation.strippedCurrent=strippedValue;const{strippedValue:strippedToValue}=recognizePrefixSuffix(animation.toValue);animation.current=strippedValue;animation.startValue=strippedValue;animation.toValue=strippedToValue;if(previousAnimation&&previousAnimation!==animation){previousAnimation.current=previousAnimation.strippedCurrent;}baseOnStart(animation,strippedValue,timestamp,previousAnimation);animation.current=((_a=animation.__prefix)!==null&&_a!==void 0?_a:'')+animation.current+((_b=animation.__suffix)!==null&&_b!==void 0?_b:'');if(previousAnimation&&previousAnimation!==animation){previousAnimation.current=((_c=previousAnimation.__prefix)!==null&&_c!==void 0?_c:'')+previousAnimation.current+((_d=previousAnimation.__suffix)!==null&&_d!==void 0?_d:'');}};const prefNumberSuffOnFrame=function(animation,timestamp){var _a,_b;animation.current=animation.strippedCurrent;const res=baseOnFrame(animation,timestamp);animation.strippedCurrent=animation.current;animation.current=((_a=animation.__prefix)!==null&&_a!==void 0?_a:'')+animation.current+((_b=animation.__suffix)!==null&&_b!==void 0?_b:'');return res;};const tab=['H','S','V','A'];const colorOnStart=function(animation,value,timestamp,previousAnimation){let HSVAValue;let HSVACurrent;let HSVAToValue;const res=[];if(isColor(value)){HSVACurrent=convertToHSVA(animation.current);HSVAValue=convertToHSVA(value);if(animation.toValue){HSVAToValue=convertToHSVA(animation.toValue);}}tab.forEach(function(i,index){animation[i]=Object.assign({},animationCopy);animation[i].current=HSVACurrent[index];animation[i].toValue=HSVAToValue?HSVAToValue[index]:undefined;animation[i].onStart(animation[i],HSVAValue[index],timestamp,previousAnimation?previousAnimation[i]:undefined);res.push(animation[i].current);});animation.current=toRGBA(res);};const colorOnFrame=function(animation,timestamp){const HSVACurrent=convertToHSVA(animation.current);const res=[];let finished=true;tab.forEach(function(i,index){animation[i].current=HSVACurrent[index];finished&=animation[i].onFrame(animation[i],timestamp);res.push(animation[i].current);});animation.current=toRGBA(res);return finished;};const arrayOnStart=function(animation,value,timestamp,previousAnimation){value.forEach(function(v,i){animation[i]=Object.assign({},animationCopy);animation[i].current=v;animation[i].toValue=animation.toValue[i];animation[i].onStart(animation[i],v,timestamp,previousAnimation?previousAnimation[i]:undefined);});animation.current=value;};const arrayOnFrame=function(animation,timestamp){let finished=true;animation.current.forEach(function(v,i){finished&=animation[i].onFrame(animation[i],timestamp);animation.current[i]=animation[i].current;});return finished;};animation.onStart=function(animation,value,timestamp,previousAnimation){if(isColor(value)){colorOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=colorOnFrame;return;}else if(Array.isArray(value)){arrayOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=arrayOnFrame;return;}else if(typeof value==='string'){prefNumberSuffOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=prefNumberSuffOnFrame;return;}baseOnStart(animation,value,timestamp,previousAnimation);};}}\";\n  _f.__workletHash = 6190664443126;\n  _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (29:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexport var defineAnimation = function () {\n  var _f = function _f(starting, factory) {\n    if (IN_STYLE_UPDATER) {\n      return starting;\n    }\n\n    var create = function () {\n      var _f = function _f() {\n        var animation = factory();\n        decorateAnimation(animation);\n        return animation;\n      };\n\n      _f._closure = {\n        factory: factory,\n        decorateAnimation: decorateAnimation\n      };\n      _f.asString = \"function _f(){const{factory,decorateAnimation}=jsThis._closure;{const animation=factory();decorateAnimation(animation);return animation;}}\";\n      _f.__workletHash = 2441595458132;\n      _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (152:19)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }();\n\n    if (_WORKLET || !NativeReanimatedModule.native) {\n      return create();\n    }\n\n    return create;\n  };\n\n  _f._closure = {\n    IN_STYLE_UPDATER: IN_STYLE_UPDATER,\n    decorateAnimation: decorateAnimation,\n    NativeReanimatedModule: {\n      native: NativeReanimatedModule.native\n    }\n  };\n  _f.asString = \"function defineAnimation(starting,factory){const{IN_STYLE_UPDATER,decorateAnimation,NativeReanimatedModule}=jsThis._closure;{if(IN_STYLE_UPDATER){return starting;}const create=function(){'worklet';const animation=factory();decorateAnimation(animation);return animation;};if(_WORKLET||!NativeReanimatedModule.native){return create();}return create;}}\";\n  _f.__workletHash = 4939784890886;\n  _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (147:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var cancelAnimation = function () {\n  var _f = function _f(sharedValue) {\n    sharedValue.value = sharedValue.value;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function cancelAnimation(sharedValue){sharedValue.value=sharedValue.value;}\";\n  _f.__workletHash = 15056882569526;\n  _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (164:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var withStartValue = function () {\n  var _f = function _f(startValue, animation) {\n    return defineAnimation(startValue, function () {\n      var _f = function _f() {\n        if (!_WORKLET && typeof animation === 'function') {\n          animation = animation();\n        }\n\n        animation.current = startValue;\n        return animation;\n      };\n\n      _f._closure = {\n        animation: animation,\n        startValue: startValue\n      };\n      _f.asString = \"function _f(){const{animation,startValue}=jsThis._closure;{if(!_WORKLET&&typeof animation==='function'){animation=animation();}animation.current=startValue;return animation;}}\";\n      _f.__workletHash = 5374403234008;\n      _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (172:39)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: defineAnimation\n  };\n  _f.asString = \"function withStartValue(startValue,animation){const{defineAnimation}=jsThis._closure;{return defineAnimation(startValue,function(){'worklet';if(!_WORKLET&&typeof animation==='function'){animation=animation();}animation.current=startValue;return animation;});}}\";\n  _f.__workletHash = 5100017907325;\n  _f.__location = \"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js (170:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/util.js"],"names":["convertToHSVA","isColor","toRGBA","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_a","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_b","_c","_d","__prefix","__suffix","strippedCurrent","toValue","strippedToValue","current","startValue","prefNumberSuffOnFrame","res","tab","colorOnStart","HSVAValue","HSVACurrent","HSVAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","Array","isArray","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withStartValue"],"mappings":"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","sourcesContent":["/* global _WORKLET */\nimport { convertToHSVA, isColor, toRGBA } from '../Colors';\nimport NativeReanimatedModule from '../NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n    IN_STYLE_UPDATER = true;\n    const result = updater();\n    IN_STYLE_UPDATER = false;\n    return result;\n}\nfunction recognizePrefixSuffix(value) {\n    'worklet';\n    var _a;\n    if (typeof value === 'string') {\n        const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n        if (!match) {\n            throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n        }\n        const prefix = match[1];\n        const suffix = match[4];\n        // number with scientific notation\n        const number = match[2] + ((_a = match[3]) !== null && _a !== void 0 ? _a : '');\n        return { prefix, suffix, strippedValue: parseFloat(number) };\n    }\n    else {\n        return { strippedValue: value };\n    }\n}\nfunction decorateAnimation(animation) {\n    'worklet';\n    if (animation.isHigherOrder) {\n        return;\n    }\n    const baseOnStart = animation.onStart;\n    const baseOnFrame = animation.onFrame;\n    const animationCopy = Object.assign({}, animation);\n    delete animationCopy.callback;\n    const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n        var _a, _b, _c, _d;\n        // recognize prefix, suffix, and updates stripped value on animation start\n        const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n        animation.__prefix = prefix;\n        animation.__suffix = suffix;\n        animation.strippedCurrent = strippedValue;\n        const { strippedValue: strippedToValue } = recognizePrefixSuffix(animation.toValue);\n        animation.current = strippedValue;\n        animation.startValue = strippedValue;\n        animation.toValue = strippedToValue;\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current = previousAnimation.strippedCurrent;\n        }\n        baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        if (previousAnimation && previousAnimation !== animation) {\n            previousAnimation.current =\n                ((_c = previousAnimation.__prefix) !== null && _c !== void 0 ? _c : '') +\n                    previousAnimation.current +\n                    ((_d = previousAnimation.__suffix) !== null && _d !== void 0 ? _d : '');\n        }\n    };\n    const prefNumberSuffOnFrame = (animation, timestamp) => {\n        var _a, _b;\n        animation.current = animation.strippedCurrent;\n        const res = baseOnFrame(animation, timestamp);\n        animation.strippedCurrent = animation.current;\n        animation.current =\n            ((_a = animation.__prefix) !== null && _a !== void 0 ? _a : '') +\n                animation.current +\n                ((_b = animation.__suffix) !== null && _b !== void 0 ? _b : '');\n        return res;\n    };\n    const tab = ['H', 'S', 'V', 'A'];\n    const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n        let HSVAValue;\n        let HSVACurrent;\n        let HSVAToValue;\n        const res = [];\n        if (isColor(value)) {\n            HSVACurrent = convertToHSVA(animation.current);\n            HSVAValue = convertToHSVA(value);\n            if (animation.toValue) {\n                HSVAToValue = convertToHSVA(animation.toValue);\n            }\n        }\n        tab.forEach((i, index) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = HSVACurrent[index];\n            animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n            animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n    };\n    const colorOnFrame = (animation, timestamp) => {\n        const HSVACurrent = convertToHSVA(animation.current);\n        const res = [];\n        let finished = true;\n        tab.forEach((i, index) => {\n            animation[i].current = HSVACurrent[index];\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            res.push(animation[i].current);\n        });\n        animation.current = toRGBA(res);\n        return finished;\n    };\n    const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n        value.forEach((v, i) => {\n            animation[i] = Object.assign({}, animationCopy);\n            animation[i].current = v;\n            animation[i].toValue = animation.toValue[i];\n            animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n        });\n        animation.current = value;\n    };\n    const arrayOnFrame = (animation, timestamp) => {\n        let finished = true;\n        animation.current.forEach((v, i) => {\n            // @ts-ignore: disable-next-line\n            finished &= animation[i].onFrame(animation[i], timestamp);\n            animation.current[i] = animation[i].current;\n        });\n        return finished;\n    };\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\n        if (isColor(value)) {\n            colorOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = colorOnFrame;\n            return;\n        }\n        else if (Array.isArray(value)) {\n            arrayOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = arrayOnFrame;\n            return;\n        }\n        else if (typeof value === 'string') {\n            prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n            animation.onFrame = prefNumberSuffOnFrame;\n            return;\n        }\n        baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n}\nexport function defineAnimation(starting, factory) {\n    'worklet';\n    if (IN_STYLE_UPDATER) {\n        return starting;\n    }\n    const create = () => {\n        'worklet';\n        const animation = factory();\n        decorateAnimation(animation);\n        return animation;\n    };\n    if (_WORKLET || !NativeReanimatedModule.native) {\n        return create();\n    }\n    // @ts-ignore: eslint-disable-line\n    return create;\n}\nexport function cancelAnimation(sharedValue) {\n    'worklet';\n    // setting the current value cancels the animation if one is currently running\n    sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n// TODO it should work only if there was no animation before.\nexport function withStartValue(startValue, animation) {\n    'worklet';\n    return defineAnimation(startValue, () => {\n        'worklet';\n        if (!_WORKLET && typeof animation === 'function') {\n            animation = animation();\n        }\n        animation.current = startValue;\n        return animation;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}