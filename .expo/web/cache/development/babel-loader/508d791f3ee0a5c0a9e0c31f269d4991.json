{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport { styles } from \"../Style\";\nimport Button from \"./Button\";\nimport { View as MotiView } from 'moti';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SplashscreenPreview = function SplashscreenPreview(_ref) {\n  var logo = _ref.logo,\n      onDownload = _ref.onDownload,\n      backgroundColor = _ref.backgroundColor;\n  return _jsxs(View, {\n    style: styles.preview,\n    children: [_jsx(Text, {\n      style: styles.previewTitle,\n      children: \"Your awesome SplashScreen\"\n    }), _jsx(MotiView, {\n      style: [styles.previewContainer],\n      from: {\n        scale: 0.3,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      transition: {\n        type: 'spring'\n      },\n      children: _jsx(LinearGradient, {\n        colors: typeof backgroundColor === \"object\" ? _toConsumableArray(backgroundColor) : [backgroundColor, \"transparent\"],\n        style: styles.linearGradient,\n        children: logo ? _jsx(Image, {\n          resizeMode: \"contain\",\n          source: {\n            uri: logo\n          },\n          style: styles.logo\n        }) : _jsx(View, {\n          style: styles.logoPlaceholder\n        })\n      })\n    }), _jsx(Button, {\n      style: {\n        marginTop: 40\n      },\n      title: \"Download SplashScreen\",\n      onPress: onDownload,\n      disabled: !logo\n    })]\n  });\n};\n\nexport default React.memo(SplashscreenPreview);","map":{"version":3,"names":["React","styles","Button","View","MotiView","LinearGradient","SplashscreenPreview","logo","onDownload","backgroundColor","preview","previewTitle","previewContainer","scale","opacity","type","linearGradient","uri","logoPlaceholder","marginTop","memo"],"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/components/SplashscreenPreview.js"],"sourcesContent":["import { Text, View, Image } from 'react-native';\nimport React from 'react';\nimport { styles } from '../Style';\nimport Button from './Button';\nimport { View as MotiView } from 'moti';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst SplashscreenPreview = ({ logo, onDownload, backgroundColor }) => {\n    return (\n        <View style={styles.preview}>\n            <Text style={styles.previewTitle}>Your awesome SplashScreen</Text>\n\n            <MotiView\n                style={[styles.previewContainer]}\n                from={{\n                    scale: 0.3,\n                    opacity: 0,\n                }}\n                animate={{\n                    scale: 1,\n                    opacity: 1,\n\n                }}\n\n                transition={{\n                    type: 'spring',\n                }}\n            >\n                <LinearGradient\n                    colors={typeof backgroundColor === \"object\" ? [...backgroundColor] : [backgroundColor, \"transparent\"]}\n                    style={styles.linearGradient}\n                >\n                {logo ? (\n                    <Image\n                        resizeMode=\"contain\"\n                        source={{ uri: logo }}\n                        style={styles.logo}\n                    />\n                ) : (\n                    <View style={styles.logoPlaceholder} />\n                )}\n                </LinearGradient>\n            </MotiView>\n\n            <Button\n                style={{ marginTop: 40 }}\n                title=\"Download SplashScreen\"\n                onPress={onDownload}\n                disabled={!logo}\n            />\n        </View>\n    );\n};\n\nexport default React.memo(SplashscreenPreview);\n"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,OAAOC,MAAP;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,MAAjC;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA2C;EAAA,IAAxCC,IAAwC,QAAxCA,IAAwC;EAAA,IAAlCC,UAAkC,QAAlCA,UAAkC;EAAA,IAAtBC,eAAsB,QAAtBA,eAAsB;EACnE,OACI,MAAC,IAAD;IAAM,KAAK,EAAER,MAAM,CAACS,OAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAET,MAAM,CAACU,YAApB;MAAA;IAAA,EADJ,EAGI,KAAC,QAAD;MACI,KAAK,EAAE,CAACV,MAAM,CAACW,gBAAR,CADX;MAEI,IAAI,EAAE;QACFC,KAAK,EAAE,GADL;QAEFC,OAAO,EAAE;MAFP,CAFV;MAMI,OAAO,EAAE;QACLD,KAAK,EAAE,CADF;QAELC,OAAO,EAAE;MAFJ,CANb;MAYI,UAAU,EAAE;QACRC,IAAI,EAAE;MADE,CAZhB;MAAA,UAgBI,KAAC,cAAD;QACI,MAAM,EAAE,OAAON,eAAP,KAA2B,QAA3B,sBAA0CA,eAA1C,IAA6D,CAACA,eAAD,EAAkB,aAAlB,CADzE;QAEI,KAAK,EAAER,MAAM,CAACe,cAFlB;QAAA,UAICT,IAAI,GACD,KAAC,KAAD;UACI,UAAU,EAAC,SADf;UAEI,MAAM,EAAE;YAAEU,GAAG,EAAEV;UAAP,CAFZ;UAGI,KAAK,EAAEN,MAAM,CAACM;QAHlB,EADC,GAOD,KAAC,IAAD;UAAM,KAAK,EAAEN,MAAM,CAACiB;QAApB;MAXJ;IAhBJ,EAHJ,EAmCI,KAAC,MAAD;MACI,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CADX;MAEI,KAAK,EAAC,uBAFV;MAGI,OAAO,EAAEX,UAHb;MAII,QAAQ,EAAE,CAACD;IAJf,EAnCJ;EAAA,EADJ;AA4CH,CA7CD;;AA+CA,eAAeP,KAAK,CAACoB,IAAN,CAAWd,mBAAX,CAAf"},"metadata":{},"sourceType":"module"}