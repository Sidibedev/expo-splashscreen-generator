{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isMobile\", \"onValueChanged\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tinycolor from \"tinycolor2\";\nimport { COLORPICKER_COLORS } from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var toState = function toState(data, oldHue) {\n  var color = data.hex ? tinycolor(data.hex) : tinycolor(data);\n  var hsl = color.toHsl();\n  var hsv = color.toHsv();\n  var rgb = color.toRgb();\n  var hex = color.toHex();\n\n  if (hsl.s === 0) {\n    hsl.h = oldHue || 0;\n    hsv.h = oldHue || 0;\n  }\n\n  var transparent = hex === \"000000\" && rgb.a === 0;\n  return {\n    hsl: hsl,\n    hex: transparent ? \"transparent\" : \"#\" + hex,\n    rgb: rgb,\n    hsv: hsv,\n    oldHue: data.h || oldHue || hsl.h,\n    source: data.source\n  };\n};\nexport var getContrastingColor = function getContrastingColor(data) {\n  if (!data) {\n    return \"#fff\";\n  }\n\n  var col = toState(data);\n\n  if (col.hex === \"transparent\") {\n    return \"rgba(0,0,0,0.4)\";\n  }\n\n  var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n  return yiq >= 128 ? \"#000\" : \"#fff\";\n};\nexport var isValidHex = function isValidHex(hex) {\n  if (hex === \"transparent\") {\n    return true;\n  }\n\n  var lh = String(hex).charAt(0) === \"#\" ? 1 : 0;\n  return hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor(hex).isValid();\n};\n\nfunction ColorView(_ref) {\n  var size = _ref.size,\n      color = _ref.color,\n      style = _ref.style;\n  return typeof color == \"array\" ? _jsx(Text, {\n    children: \"Linear\"\n  }) : _jsx(View, {\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: color\n    }, style]\n  });\n}\n\nexport function ColorPicker(_ref2) {\n  var isMobile = _ref2.isMobile,\n      onValueChanged = _ref2.onValueChanged,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _React$useState = React.useState(\"FFFFFF\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onTextChanged = _React$useState2[1];\n\n  var COLOR_SIZE = 24;\n  var PADDING = 12;\n  var SCROLL_HEIGHT = COLOR_SIZE + PADDING * 2;\n  var COLORS = React.useMemo(function () {\n    return COLORPICKER_COLORS.reverse();\n  }, []);\n  return _jsxs(ScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    style: [isMobile ? {\n      minHeight: SCROLL_HEIGHT,\n      maxHeight: SCROLL_HEIGHT\n    } : {\n      flexShrink: 1,\n      flexGrow: 0,\n      maxWidth: 300\n    }, props.style],\n    contentContainerStyle: [{\n      paddingVertical: PADDING\n    }, !isMobile && {\n      width: \"100%\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    }, props.contentContainerStyle],\n    horizontal: isMobile,\n    pagingEnabled: true,\n    children: [COLORS.map(function (color) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onValueChanged(color);\n        },\n        children: _jsx(ColorView, {\n          size: COLOR_SIZE,\n          color: color,\n          style: {\n            margin: isMobile ? 12 : 6\n          }\n        })\n      }, color);\n    }), _jsx(ColorPickerInput, {\n      size: COLOR_SIZE,\n      value: text,\n      onValueChanged: onTextChanged,\n      onSubmit: function onSubmit(value) {\n        onValueChanged(value);\n      }\n    })]\n  }));\n}\n\nfunction ColorPickerInput(_ref3) {\n  var size = _ref3.size,\n      value = _ref3.value,\n      onValueChanged = _ref3.onValueChanged,\n      onSubmit = _ref3.onSubmit;\n  return _jsxs(View, {\n    style: [{\n      height: size,\n      flex: 1,\n      minWidth: 275,\n      margin: 6,\n      borderRadius: size / 2,\n      borderWidth: 2,\n      flexDirection: \"row\",\n      overflow: \"hidden\"\n    }, {\n      borderColor: \"gray\",\n      backgroundColor: \"gray\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        width: size,\n        height: size - 4,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          alignSelf: \"center\",\n          color: \"#98A1A4\"\n        },\n        children: \"#\"\n      })\n    }), _jsx(TextInput, {\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      value: value.replace(\"#\", \"\"),\n      onChangeText: function onChangeText(value) {\n        onValueChanged(value);\n\n        if (isValidHex(value)) {\n          onSubmit(\"#\" + tinycolor(value).toHex());\n        }\n      },\n      style: {\n        flex: 1,\n        paddingHorizontal: 4,\n        color: \"#fff\",\n        outlineColor: \"transparent\"\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","tinycolor","COLORPICKER_COLORS","toState","data","oldHue","color","hex","hsl","toHsl","hsv","toHsv","rgb","toRgb","toHex","s","h","transparent","a","source","getContrastingColor","col","yiq","r","g","b","isValidHex","lh","String","charAt","length","isValid","ColorView","size","style","width","height","borderRadius","backgroundColor","ColorPicker","isMobile","onValueChanged","props","useState","text","onTextChanged","COLOR_SIZE","PADDING","SCROLL_HEIGHT","COLORS","useMemo","reverse","minHeight","maxHeight","flexShrink","flexGrow","maxWidth","paddingVertical","flexDirection","flexWrap","contentContainerStyle","map","margin","value","ColorPickerInput","onSubmit","flex","minWidth","borderWidth","overflow","borderColor","justifyContent","alignItems","alignSelf","replace","paddingHorizontal","outlineColor"],"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/components/ColorPicker.js"],"sourcesContent":["import React from \"react\";\nimport {\n    ScrollView,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    View,\n} from \"react-native\";\nimport tinycolor from \"tinycolor2\";\nimport { COLORPICKER_COLORS } from \"../constants/colors\";\n\nexport const toState = (data, oldHue) => {\n    const color = data.hex ? tinycolor(data.hex) : tinycolor(data);\n    const hsl = color.toHsl();\n    const hsv = color.toHsv();\n    const rgb = color.toRgb();\n    const hex = color.toHex();\n    if (hsl.s === 0) {\n        hsl.h = oldHue || 0;\n        hsv.h = oldHue || 0;\n    }\n    const transparent = hex === \"000000\" && rgb.a === 0;\n\n    return {\n        hsl,\n        hex: transparent ? \"transparent\" : `#${hex}`,\n        rgb,\n        hsv,\n        oldHue: data.h || oldHue || hsl.h,\n        source: data.source,\n    };\n};\n\nexport const getContrastingColor = (data) => {\n    if (!data) {\n        return \"#fff\";\n    }\n    const col = toState(data);\n    if (col.hex === \"transparent\") {\n        return \"rgba(0,0,0,0.4)\";\n    }\n    const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n    return yiq >= 128 ? \"#000\" : \"#fff\";\n};\n\nexport const isValidHex = (hex) => {\n    if (hex === \"transparent\") {\n        return true;\n    }\n    // disable hex4 and hex8\n    const lh = String(hex).charAt(0) === \"#\" ? 1 : 0;\n    return (\n        hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor(hex).isValid()\n    );\n};\n\nfunction ColorView({ size, color, style }) {\n    return (\n\n\n        typeof (color) == \"array\" ?\n\n            <Text>Linear</Text> : \n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    borderRadius: size / 2,\n                    backgroundColor: color,\n                },\n                style,\n            ]}\n        />\n\n    );\n}\n\nexport function ColorPicker({\n    isMobile,\n    onValueChanged,\n    ...props\n}) {\n\n    const [text, onTextChanged] = React.useState(\"FFFFFF\");\n    const COLOR_SIZE = 24;\n    const PADDING = 12;\n    const SCROLL_HEIGHT = COLOR_SIZE + PADDING * 2;\n    const COLORS = React.useMemo(() => COLORPICKER_COLORS.reverse(), []);\n    return (\n        <ScrollView\n            {...props}\n            style={[\n                isMobile\n                    ? { minHeight: SCROLL_HEIGHT, maxHeight: SCROLL_HEIGHT }\n                    : { flexShrink: 1, flexGrow: 0, maxWidth: 300 },\n                props.style,\n            ]}\n            contentContainerStyle={[\n                { paddingVertical: PADDING },\n                !isMobile && {\n                    width: \"100%\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                },\n                props.contentContainerStyle,\n            ]}\n            horizontal={isMobile}\n            pagingEnabled\n        >\n            {COLORS.map((color) => (\n                <TouchableOpacity key={color} onPress={() => onValueChanged(color)}>\n                    <ColorView\n                        size={COLOR_SIZE}\n                        color={color}\n                        style={{ margin: isMobile ? 12 : 6 }}\n                    />\n                </TouchableOpacity>\n            ))}\n            <ColorPickerInput\n                size={COLOR_SIZE}\n\n                value={text}\n                onValueChanged={onTextChanged}\n                onSubmit={(value) => {\n                    onValueChanged(value);\n                }}\n            />\n        </ScrollView>\n    );\n}\n\nfunction ColorPickerInput({ size, value, onValueChanged, onSubmit }) {\n    return (\n        <View\n            style={[\n                {\n                    height: size,\n                    flex: 1,\n                    minWidth: 275,\n                    margin: 6,\n                    borderRadius: size / 2,\n                    borderWidth: 2,\n                    flexDirection: \"row\",\n                    overflow: \"hidden\",\n                },\n                {\n                    borderColor: \"gray\",\n                    backgroundColor: \"gray\",\n                },\n            ]}\n        >\n            <View\n                style={{\n                    width: size,\n                    height: size - 4,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Text\n                    style={{ alignSelf: \"center\", color: \"#98A1A4\" }}\n                >\n                    #\n                </Text>\n            </View>\n            <TextInput\n                autoCapitalize={\"none\"}\n                autoCorrect={false}\n                value={value.replace(\"#\", \"\")}\n                onChangeText={(value) => {\n                    onValueChanged(value);\n\n                    if (isValidHex(value)) {\n                        onSubmit(\"#\" + tinycolor(value).toHex());\n                    }\n                }}\n                style={{\n                    flex: 1,\n                    paddingHorizontal: 4,\n                    color: \"#fff\",\n                    outlineColor: \"transparent\",\n                }}\n            />\n        </View>\n    );\n}\n\n\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT;;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,MAAP,EAAkB;EACrC,IAAMC,KAAK,GAAGF,IAAI,CAACG,GAAL,GAAWN,SAAS,CAACG,IAAI,CAACG,GAAN,CAApB,GAAiCN,SAAS,CAACG,IAAD,CAAxD;EACA,IAAMI,GAAG,GAAGF,KAAK,CAACG,KAAN,EAAZ;EACA,IAAMC,GAAG,GAAGJ,KAAK,CAACK,KAAN,EAAZ;EACA,IAAMC,GAAG,GAAGN,KAAK,CAACO,KAAN,EAAZ;EACA,IAAMN,GAAG,GAAGD,KAAK,CAACQ,KAAN,EAAZ;;EACA,IAAIN,GAAG,CAACO,CAAJ,KAAU,CAAd,EAAiB;IACbP,GAAG,CAACQ,CAAJ,GAAQX,MAAM,IAAI,CAAlB;IACAK,GAAG,CAACM,CAAJ,GAAQX,MAAM,IAAI,CAAlB;EACH;;EACD,IAAMY,WAAW,GAAGV,GAAG,KAAK,QAAR,IAAoBK,GAAG,CAACM,CAAJ,KAAU,CAAlD;EAEA,OAAO;IACHV,GAAG,EAAHA,GADG;IAEHD,GAAG,EAAEU,WAAW,GAAG,aAAH,SAAuBV,GAFpC;IAGHK,GAAG,EAAHA,GAHG;IAIHF,GAAG,EAAHA,GAJG;IAKHL,MAAM,EAAED,IAAI,CAACY,CAAL,IAAUX,MAAV,IAAoBG,GAAG,CAACQ,CAL7B;IAMHG,MAAM,EAAEf,IAAI,CAACe;EANV,CAAP;AAQH,CApBM;AAsBP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAChB,IAAD,EAAU;EACzC,IAAI,CAACA,IAAL,EAAW;IACP,OAAO,MAAP;EACH;;EACD,IAAMiB,GAAG,GAAGlB,OAAO,CAACC,IAAD,CAAnB;;EACA,IAAIiB,GAAG,CAACd,GAAJ,KAAY,aAAhB,EAA+B;IAC3B,OAAO,iBAAP;EACH;;EACD,IAAMe,GAAG,GAAG,CAACD,GAAG,CAACT,GAAJ,CAAQW,CAAR,GAAY,GAAZ,GAAkBF,GAAG,CAACT,GAAJ,CAAQY,CAAR,GAAY,GAA9B,GAAoCH,GAAG,CAACT,GAAJ,CAAQa,CAAR,GAAY,GAAjD,IAAwD,IAApE;EACA,OAAOH,GAAG,IAAI,GAAP,GAAa,MAAb,GAAsB,MAA7B;AACH,CAVM;AAYP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACnB,GAAD,EAAS;EAC/B,IAAIA,GAAG,KAAK,aAAZ,EAA2B;IACvB,OAAO,IAAP;EACH;;EAED,IAAMoB,EAAE,GAAGC,MAAM,CAACrB,GAAD,CAAN,CAAYsB,MAAZ,CAAmB,CAAnB,MAA0B,GAA1B,GAAgC,CAAhC,GAAoC,CAA/C;EACA,OACItB,GAAG,CAACuB,MAAJ,KAAe,IAAIH,EAAnB,IAAyBpB,GAAG,CAACuB,MAAJ,GAAa,IAAIH,EAA1C,IAAgD1B,SAAS,CAACM,GAAD,CAAT,CAAewB,OAAf,EADpD;AAGH,CATM;;AAWP,SAASC,SAAT,OAA2C;EAAA,IAAtBC,IAAsB,QAAtBA,IAAsB;EAAA,IAAhB3B,KAAgB,QAAhBA,KAAgB;EAAA,IAAT4B,KAAS,QAATA,KAAS;EACvC,OAGI,OAAQ5B,KAAR,IAAkB,OAAlB,GAEI,KAAC,IAAD;IAAA;EAAA,EAFJ,GAGA,KAAC,IAAD;IACI,KAAK,EAAE,CACH;MACI6B,KAAK,EAAEF,IADX;MAEIG,MAAM,EAAEH,IAFZ;MAGII,YAAY,EAAEJ,IAAI,GAAG,CAHzB;MAIIK,eAAe,EAAEhC;IAJrB,CADG,EAOH4B,KAPG;EADX,EANJ;AAmBH;;AAED,OAAO,SAASK,WAAT,QAIJ;EAAA,IAHCC,QAGD,SAHCA,QAGD;EAAA,IAFCC,cAED,SAFCA,cAED;EAAA,IADIC,KACJ;;EAEC,sBAA8B1C,KAAK,CAAC2C,QAAN,CAAe,QAAf,CAA9B;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,aAAb;;EACA,IAAMC,UAAU,GAAG,EAAnB;EACA,IAAMC,OAAO,GAAG,EAAhB;EACA,IAAMC,aAAa,GAAGF,UAAU,GAAGC,OAAO,GAAG,CAA7C;EACA,IAAME,MAAM,GAAGjD,KAAK,CAACkD,OAAN,CAAc;IAAA,OAAMhD,kBAAkB,CAACiD,OAAnB,EAAN;EAAA,CAAd,EAAkD,EAAlD,CAAf;EACA,OACI,MAAC,UAAD,kCACQT,KADR;IAEI,KAAK,EAAE,CACHF,QAAQ,GACF;MAAEY,SAAS,EAAEJ,aAAb;MAA4BK,SAAS,EAAEL;IAAvC,CADE,GAEF;MAAEM,UAAU,EAAE,CAAd;MAAiBC,QAAQ,EAAE,CAA3B;MAA8BC,QAAQ,EAAE;IAAxC,CAHH,EAIHd,KAAK,CAACR,KAJH,CAFX;IAQI,qBAAqB,EAAE,CACnB;MAAEuB,eAAe,EAAEV;IAAnB,CADmB,EAEnB,CAACP,QAAD,IAAa;MACTL,KAAK,EAAE,MADE;MAETuB,aAAa,EAAE,KAFN;MAGTC,QAAQ,EAAE;IAHD,CAFM,EAOnBjB,KAAK,CAACkB,qBAPa,CAR3B;IAiBI,UAAU,EAAEpB,QAjBhB;IAkBI,aAAa,MAlBjB;IAAA,WAoBKS,MAAM,CAACY,GAAP,CAAW,UAACvD,KAAD;MAAA,OACR,KAAC,gBAAD;QAA8B,OAAO,EAAE;UAAA,OAAMmC,cAAc,CAACnC,KAAD,CAApB;QAAA,CAAvC;QAAA,UACI,KAAC,SAAD;UACI,IAAI,EAAEwC,UADV;UAEI,KAAK,EAAExC,KAFX;UAGI,KAAK,EAAE;YAAEwD,MAAM,EAAEtB,QAAQ,GAAG,EAAH,GAAQ;UAA1B;QAHX;MADJ,GAAuBlC,KAAvB,CADQ;IAAA,CAAX,CApBL,EA6BI,KAAC,gBAAD;MACI,IAAI,EAAEwC,UADV;MAGI,KAAK,EAAEF,IAHX;MAII,cAAc,EAAEC,aAJpB;MAKI,QAAQ,EAAE,kBAACkB,KAAD,EAAW;QACjBtB,cAAc,CAACsB,KAAD,CAAd;MACH;IAPL,EA7BJ;EAAA,GADJ;AAyCH;;AAED,SAASC,gBAAT,QAAqE;EAAA,IAAzC/B,IAAyC,SAAzCA,IAAyC;EAAA,IAAnC8B,KAAmC,SAAnCA,KAAmC;EAAA,IAA5BtB,cAA4B,SAA5BA,cAA4B;EAAA,IAAZwB,QAAY,SAAZA,QAAY;EACjE,OACI,MAAC,IAAD;IACI,KAAK,EAAE,CACH;MACI7B,MAAM,EAAEH,IADZ;MAEIiC,IAAI,EAAE,CAFV;MAGIC,QAAQ,EAAE,GAHd;MAIIL,MAAM,EAAE,CAJZ;MAKIzB,YAAY,EAAEJ,IAAI,GAAG,CALzB;MAMImC,WAAW,EAAE,CANjB;MAOIV,aAAa,EAAE,KAPnB;MAQIW,QAAQ,EAAE;IARd,CADG,EAWH;MACIC,WAAW,EAAE,MADjB;MAEIhC,eAAe,EAAE;IAFrB,CAXG,CADX;IAAA,WAkBI,KAAC,IAAD;MACI,KAAK,EAAE;QACHH,KAAK,EAAEF,IADJ;QAEHG,MAAM,EAAEH,IAAI,GAAG,CAFZ;QAGHsC,cAAc,EAAE,QAHb;QAIHC,UAAU,EAAE;MAJT,CADX;MAAA,UAQI,KAAC,IAAD;QACI,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAb;UAAuBnE,KAAK,EAAE;QAA9B,CADX;QAAA;MAAA;IARJ,EAlBJ,EAgCI,KAAC,SAAD;MACI,cAAc,EAAE,MADpB;MAEI,WAAW,EAAE,KAFjB;MAGI,KAAK,EAAEyD,KAAK,CAACW,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAHX;MAII,YAAY,EAAE,sBAACX,KAAD,EAAW;QACrBtB,cAAc,CAACsB,KAAD,CAAd;;QAEA,IAAIrC,UAAU,CAACqC,KAAD,CAAd,EAAuB;UACnBE,QAAQ,CAAC,MAAMhE,SAAS,CAAC8D,KAAD,CAAT,CAAiBjD,KAAjB,EAAP,CAAR;QACH;MACJ,CAVL;MAWI,KAAK,EAAE;QACHoD,IAAI,EAAE,CADH;QAEHS,iBAAiB,EAAE,CAFhB;QAGHrE,KAAK,EAAE,MAHJ;QAIHsE,YAAY,EAAE;MAJX;IAXX,EAhCJ;EAAA,EADJ;AAqDH"},"metadata":{},"sourceType":"module"}