{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nexport default function createEventObjectProxyPolyfill() {\n  var nodesMap = {\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    layout: {\n      x: {},\n      y: {},\n      width: {},\n      height: {}\n    },\n    contentOffset: {\n      y: {},\n      x: {}\n    },\n    layoutMeasurement: {\n      width: {},\n      height: {}\n    },\n    contentSize: {\n      width: {},\n      height: {}\n    },\n    zoomScale: {},\n    contentInset: {\n      right: {},\n      top: {},\n      left: {},\n      bottom: {}\n    }\n  };\n\n  var traverse = function traverse(obj) {\n    for (var key in obj) {\n      traverse(obj[key]);\n\n      _extends(obj[key], {\n        __isProxy: true\n      });\n    }\n  };\n\n  traverse(nodesMap);\n  return nodesMap;\n}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/core/createEventObjectProxyPolyfill.js"],"names":["createEventObjectProxyPolyfill","nodesMap","translationX","translationY","state","oldState","absoluteX","absoluteY","x","y","velocityX","velocityY","scale","focalX","focalY","rotation","anchorX","anchorY","velocity","numberOfPointers","layout","width","height","contentOffset","layoutMeasurement","contentSize","zoomScale","contentInset","right","top","left","bottom","traverse","obj","key","__isProxy"],"mappings":";AAKA,eAAe,SAASA,8BAAT,GAA0C;AACvD,MAAMC,QAAQ,GAAG;AAEfC,IAAAA,YAAY,EAAE,EAFC;AAGfC,IAAAA,YAAY,EAAE,EAHC;AAIfC,IAAAA,KAAK,EAAE,EAJQ;AAKfC,IAAAA,QAAQ,EAAE,EALK;AAMfC,IAAAA,SAAS,EAAE,EANI;AAOfC,IAAAA,SAAS,EAAE,EAPI;AAQfC,IAAAA,CAAC,EAAE,EARY;AASfC,IAAAA,CAAC,EAAE,EATY;AAUfC,IAAAA,SAAS,EAAE,EAVI;AAWfC,IAAAA,SAAS,EAAE,EAXI;AAYfC,IAAAA,KAAK,EAAE,EAZQ;AAafC,IAAAA,MAAM,EAAE,EAbO;AAcfC,IAAAA,MAAM,EAAE,EAdO;AAefC,IAAAA,QAAQ,EAAE,EAfK;AAgBfC,IAAAA,OAAO,EAAE,EAhBM;AAiBfC,IAAAA,OAAO,EAAE,EAjBM;AAkBfC,IAAAA,QAAQ,EAAE,EAlBK;AAmBfC,IAAAA,gBAAgB,EAAE,EAnBH;AAqBfC,IAAAA,MAAM,EAAE;AAAEZ,MAAAA,CAAC,EAAE,EAAL;AAASC,MAAAA,CAAC,EAAE,EAAZ;AAAgBY,MAAAA,KAAK,EAAE,EAAvB;AAA2BC,MAAAA,MAAM,EAAE;AAAnC,KArBO;AAuBfC,IAAAA,aAAa,EAAE;AAAEd,MAAAA,CAAC,EAAE,EAAL;AAASD,MAAAA,CAAC,EAAE;AAAZ,KAvBA;AAwBfgB,IAAAA,iBAAiB,EAAE;AAAEH,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAxBJ;AAyBfG,IAAAA,WAAW,EAAE;AAAEJ,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAzBE;AA0BfI,IAAAA,SAAS,EAAE,EA1BI;AA2BfC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,GAAG,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC;AA3BC,GAAjB;;AA6BA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACxB,SAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACrBD,MAAAA,QAAQ,CAACC,GAAG,CAACC,GAAD,CAAJ,CAAR;;AACA,eAAcD,GAAG,CAACC,GAAD,CAAjB,EAAwB;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAxB;AACD;AACF,GALD;;AAMAH,EAAAA,QAAQ,CAAC/B,QAAD,CAAR;AACA,SAAOA,QAAP;AACD","sourcesContent":["// JSC on Android and iOS 8 & 9 does not support proxies.\n// The below workaround provides a proxy-like functionality for event data by\n// creating an object which contains predefined fields for the most commonly\n// used event attributes. If your app uses even attribute which is not listed\n// here please submit a PR to add that and we will merge it right away\nexport default function createEventObjectProxyPolyfill() {\n  const nodesMap = {\n    // Gesture handlers-related event\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    // onLayour-related event\n    layout: { x: {}, y: {}, width: {}, height: {} },\n    // ScrollView event\n    contentOffset: { y: {}, x: {} },\n    layoutMeasurement: { width: {}, height: {} },\n    contentSize: { width: {}, height: {} },\n    zoomScale: {},\n    contentInset: { right: {}, top: {}, left: {}, bottom: {} },\n  };\n  const traverse = (obj) => {\n    for (const key in obj) {\n      traverse(obj[key]);\n      Object.assign(obj[key], { __isProxy: true });\n    }\n  };\n  traverse(nodesMap);\n  return nodesMap;\n}\n"]},"metadata":{},"sourceType":"module"}