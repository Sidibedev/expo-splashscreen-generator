{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"isMobile\", \"onValueChanged\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tinycolor from \"tinycolor2\";\nimport { GRADIENT_COLORS, PLAIN_COLORS } from \"../constants/colors\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { isValidHex, toState } from \"../utils\";\nimport { FONTS } from \"../constants/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GradientView(_ref) {\n  var size = _ref.size,\n      color = _ref.color,\n      style = _ref.style;\n  return _jsx(LinearGradient, {\n    colors: _toConsumableArray(color),\n    start: {\n      x: 0.5,\n      y: 0.0\n    },\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: color\n    }, style]\n  });\n}\n\nfunction ColorView(_ref2) {\n  var size = _ref2.size,\n      color = _ref2.color,\n      style = _ref2.style;\n  return _jsx(View, {\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: color\n    }, style]\n  });\n}\n\nexport function ColorPicker(_ref3) {\n  var isMobile = _ref3.isMobile,\n      onValueChanged = _ref3.onValueChanged,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  var _React$useState = React.useState(\"FFFFFF\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onTextChanged = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      gradientMode = _React$useState4[0],\n      setGradientMode = _React$useState4[1];\n\n  var COLOR_SIZE = 24;\n  var PADDING = 12;\n  var SCROLL_HEIGHT = COLOR_SIZE + PADDING * 2;\n  var COLORS = React.useMemo(function () {\n    return gradientMode ? GRADIENT_COLORS : PLAIN_COLORS.reverse();\n  }, [gradientMode]);\n  return _jsxs(ScrollView, _objectSpread(_objectSpread({\n    showsVerticalScrollIndicator: false\n  }, props), {}, {\n    style: [isMobile ? {\n      minHeight: SCROLL_HEIGHT,\n      maxHeight: SCROLL_HEIGHT\n    } : {\n      flexShrink: 1,\n      flexGrow: 0,\n      maxWidth: 300\n    }, props.style],\n    contentContainerStyle: [{\n      paddingVertical: PADDING\n    }, !isMobile && {\n      width: \"100%\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    }, props.contentContainerStyle],\n    horizontal: isMobile,\n    pagingEnabled: true,\n    children: [COLORS.map(function (color) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onValueChanged(color);\n        },\n        children: gradientMode ? _jsx(GradientView, {\n          size: COLOR_SIZE,\n          color: color,\n          style: {\n            margin: isMobile ? 12 : 6\n          }\n        }) : _jsx(ColorView, {\n          size: COLOR_SIZE,\n          color: color,\n          style: {\n            margin: isMobile ? 12 : 6\n          }\n        })\n      }, color);\n    }), !gradientMode && _jsx(ColorPickerInput, {\n      size: COLOR_SIZE,\n      value: text,\n      onValueChanged: onTextChanged,\n      onSubmit: function onSubmit(value) {\n        onValueChanged(value);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setGradientMode(!gradientMode);\n      },\n      style: styles.useGradientButton,\n      children: gradientMode ? _jsx(Text, {\n        style: styles.useGradientButtonText,\n        children: \"Use plain colors\"\n      }) : _jsx(Text, {\n        style: styles.useGradientButtonText,\n        children: \"Use gradients colors\"\n      })\n    })]\n  }));\n}\n\nfunction ColorPickerInput(_ref4) {\n  var size = _ref4.size,\n      value = _ref4.value,\n      onValueChanged = _ref4.onValueChanged,\n      onSubmit = _ref4.onSubmit;\n  return _jsxs(View, {\n    style: [{\n      height: size,\n      flex: 1,\n      minWidth: 275,\n      margin: 10,\n      borderRadius: size / 2,\n      borderWidth: 2,\n      flexDirection: \"row\",\n      overflow: \"hidden\"\n    }, {\n      borderColor: \"gray\",\n      backgroundColor: \"gray\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        width: size,\n        height: size - 4,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          alignSelf: \"center\",\n          color: \"#98A1A4\"\n        },\n        children: \"#\"\n      })\n    }), _jsx(TextInput, {\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      value: value.replace(\"#\", \"\"),\n      onChangeText: function onChangeText(value) {\n        onValueChanged(value);\n\n        if (isValidHex(value)) {\n          onSubmit(\"#\" + tinycolor(value).toHex());\n        }\n      },\n      style: {\n        flex: 1,\n        paddingHorizontal: 4,\n        color: \"#fff\",\n        outlineColor: \"transparent\"\n      }\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  useGradientButton: {\n    marginVertical: 10,\n    width: \"100%\"\n  },\n  useGradientButtonText: {\n    textAlign: 'center',\n    fontFamily: FONTS.medium,\n    marginLeft: 10\n  }\n});","map":{"version":3,"names":["React","tinycolor","GRADIENT_COLORS","PLAIN_COLORS","LinearGradient","isValidHex","toState","FONTS","GradientView","size","color","style","x","y","width","height","borderRadius","backgroundColor","ColorView","ColorPicker","isMobile","onValueChanged","props","useState","text","onTextChanged","gradientMode","setGradientMode","COLOR_SIZE","PADDING","SCROLL_HEIGHT","COLORS","useMemo","reverse","minHeight","maxHeight","flexShrink","flexGrow","maxWidth","paddingVertical","flexDirection","flexWrap","contentContainerStyle","map","margin","value","styles","useGradientButton","useGradientButtonText","ColorPickerInput","onSubmit","flex","minWidth","borderWidth","overflow","borderColor","justifyContent","alignItems","alignSelf","replace","toHex","paddingHorizontal","outlineColor","StyleSheet","create","marginVertical","textAlign","fontFamily","medium","marginLeft"],"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/components/ColorPicker.js"],"sourcesContent":["import React from \"react\";\nimport {\n    ScrollView,\n    StyleSheet,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    View,\n} from \"react-native\";\nimport tinycolor from \"tinycolor2\";\nimport { GRADIENT_COLORS, PLAIN_COLORS } from \"../constants/colors\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { isValidHex, toState } from \"../utils\";\nimport { FONTS } from \"../constants/fonts\";\n\nfunction GradientView({ size, color, style }) {\n    return (\n        <LinearGradient\n            colors={[...color]}\n            start={{ x: 0.5, y: 0.0 }}\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    borderRadius: size / 2,\n                    backgroundColor: color,\n                },\n                style,\n            ]}\n        /> \n\n    );\n}\n\nfunction ColorView({ size, color, style }) {\n    return (\n\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    borderRadius: size / 2,\n                    backgroundColor: color,\n                },\n                style,\n            ]}\n        />\n\n    );\n}\n\nexport function ColorPicker({\n    isMobile,\n    onValueChanged,\n    ...props\n}) {\n\n    const [text, onTextChanged] = React.useState(\"FFFFFF\");\n    const [gradientMode, setGradientMode] = React.useState(false)\n    const COLOR_SIZE = 24;\n    const PADDING = 12;\n    const SCROLL_HEIGHT = COLOR_SIZE + PADDING * 2;\n    const COLORS = React.useMemo(() => gradientMode ? GRADIENT_COLORS : PLAIN_COLORS.reverse(), [gradientMode]);\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            {...props}\n            style={[\n                isMobile\n                    ? { minHeight: SCROLL_HEIGHT, maxHeight: SCROLL_HEIGHT }\n                    : { flexShrink: 1, flexGrow: 0, maxWidth: 300, },\n                props.style,\n\n            ]}\n            contentContainerStyle={[\n                { paddingVertical: PADDING },\n                !isMobile && {\n                    width: \"100%\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                },\n                props.contentContainerStyle,\n            ]}\n            horizontal={isMobile}\n            pagingEnabled\n        >\n            {COLORS.map((color) => (\n                <TouchableOpacity key={color} onPress={() => onValueChanged(color)}>\n                    {gradientMode ? <GradientView size={COLOR_SIZE}\n                        color={color}\n                        style={{ margin: isMobile ? 12 : 6 }} /> : \n                    <ColorView\n                        size={COLOR_SIZE}\n                        color={color}\n                        style={{ margin: isMobile ? 12 : 6 }}\n                        />}\n                </TouchableOpacity>\n            ))}\n\n            {!gradientMode &&\n            <ColorPickerInput\n                size={COLOR_SIZE}\n                value={text}\n                onValueChanged={onTextChanged}\n                onSubmit={(value) => {\n                    onValueChanged(value);\n                }}\n                />}\n\n            <TouchableOpacity onPress={() => setGradientMode(!gradientMode)} style={styles.useGradientButton}>\n                {gradientMode ?\n                    <Text style={styles.useGradientButtonText}>Use plain colors</Text> :\n                    <Text style={styles.useGradientButtonText}>Use gradients colors</Text>}\n            </TouchableOpacity>\n        </ScrollView>\n    );\n}\n\nfunction ColorPickerInput({ size, value, onValueChanged, onSubmit }) {\n    return (\n        <View\n            style={[\n                {\n                    height: size,\n                    flex: 1,\n                    minWidth: 275,\n                    margin: 10,\n                    borderRadius: size / 2,\n                    borderWidth: 2,\n                    flexDirection: \"row\",\n                    overflow: \"hidden\",\n                },\n                {\n                    borderColor: \"gray\",\n                    backgroundColor: \"gray\",\n                },\n            ]}\n        >\n            <View\n                style={{\n                    width: size,\n                    height: size - 4,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Text\n                    style={{ alignSelf: \"center\", color: \"#98A1A4\" }}\n                >\n                    #\n                </Text>\n            </View>\n            <TextInput\n                autoCapitalize={\"none\"}\n                autoCorrect={false}\n                value={value.replace(\"#\", \"\")}\n                onChangeText={(value) => {\n                    onValueChanged(value);\n\n                    if (isValidHex(value)) {\n                        onSubmit(\"#\" + tinycolor(value).toHex());\n                    }\n                }}\n                style={{\n                    flex: 1,\n                    paddingHorizontal: 4,\n                    color: \"#fff\",\n                    outlineColor: \"transparent\",\n                }}\n            />\n        </View>\n    );\n}\n\n\n\n\nconst styles = StyleSheet.create({\n    useGradientButton: {\n        marginVertical: 10,\n        width: \"100%\"\n    },\n    useGradientButtonText: {\n        textAlign: 'center',\n        fontFamily: FONTS.medium,\n        marginLeft: 10\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}