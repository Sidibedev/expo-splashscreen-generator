{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { styles } from \"../Style\";\nimport Button from \"./Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Tooltip from 'react-native-walkthrough-tooltip';\nimport { ColorPicker } from \"./ColorPicker\";\nimport Footer from \"./Footer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SplashscreenConfig = function SplashscreenConfig(_ref) {\n  var setColor = _ref.setColor,\n      setLogo = _ref.setLogo;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibleColorTooltip = _React$useState2[0],\n      setVisibleColorTooltip = _React$useState2[1];\n\n  var openCloseTooltip = function openCloseTooltip() {\n    return setVisibleColorTooltip(!visibleColorTooltip);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setLogo(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.configContainer,\n    children: _jsxs(View, {\n      style: styles.config,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Generate your Expo SplashScreen\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Upload your awesome logo, select your color and download your splashscreen in PNG format and with good dimensions\"\n        })]\n      }), _jsx(View, {\n        style: styles.uploadContainer,\n        children: _jsxs(View, {\n          style: [styles.row, {\n            justifyContent: 'space-between'\n          }],\n          children: [_jsxs(View, {\n            style: styles.row,\n            children: [_jsx(View, {\n              style: styles.dot\n            }), _jsx(Text, {\n              style: styles.subtitle,\n              children: \"Upload your logo\"\n            })]\n          }), _jsx(Button, {\n            title: \"Upload\",\n            onPress: pickImage\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.uploadContainer,\n        children: _jsxs(View, {\n          style: [styles.row, {\n            justifyContent: 'space-between'\n          }],\n          children: [_jsxs(View, {\n            style: styles.row,\n            children: [_jsx(View, {\n              style: styles.dot\n            }), _jsx(Text, {\n              style: styles.subtitle,\n              children: \"Select your background color\"\n            })]\n          }), _jsx(Tooltip, {\n            isVisible: visibleColorTooltip,\n            content: _jsx(ColorPicker, {\n              onValueChanged: setColor\n            }),\n            closeOnContentInteraction: false,\n            backgroundColor: \"rgba(0,0,0,0)\",\n            contentStyle: {\n              backgroundColor: '#F2F2F2',\n              marginTop: 10,\n              borderRadius: 20\n            },\n            animated: true,\n            arrowSize: {\n              width: 16,\n              height: 8\n            },\n            placement: \"bottom\",\n            showChildInTooltip: false,\n            onClose: openCloseTooltip,\n            children: _jsx(Button, {\n              title: \"Select color\",\n              onPress: openCloseTooltip\n            })\n          })]\n        })\n      }), _jsx(Footer, {})]\n    })\n  });\n};\n\nexport default React.memo(SplashscreenConfig);","map":{"version":3,"names":["React","styles","Button","ImagePicker","Tooltip","ColorPicker","Footer","SplashscreenConfig","setColor","setLogo","useState","visibleColorTooltip","setVisibleColorTooltip","openCloseTooltip","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","configContainer","config","header","title","subtitle","uploadContainer","row","justifyContent","dot","backgroundColor","marginTop","borderRadius","width","height","memo"],"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/components/SplashscreenConfig.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\nimport { styles } from '../Style';\nimport Button from './Button';\nimport * as ImagePicker from 'expo-image-picker';\nimport Tooltip from 'react-native-walkthrough-tooltip';\nimport { ColorPicker } from './ColorPicker';\nimport Footer from './Footer';\n\nconst SplashscreenConfig = ({ setColor, setLogo }) => {\n    const [visibleColorTooltip, setVisibleColorTooltip] = React.useState(false);\n    const openCloseTooltip = () => setVisibleColorTooltip(!visibleColorTooltip);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!result.cancelled) {\n            setLogo(result.uri);\n        }\n    };\n    return (\n        <View style={styles.configContainer}>\n            <View style={styles.config}>\n                <View style={styles.header}>\n                    <Text style={styles.title}>Generate your Expo SplashScreen</Text>\n                    <Text style={styles.subtitle}>\n                        Upload your awesome logo, select your color and download your\n                        splashscreen in PNG format and with good dimensions\n                    </Text>\n                </View>\n\n                <View style={styles.uploadContainer}>\n                    <View style={[styles.row, { justifyContent: 'space-between' }]}>\n                        <View style={styles.row}>\n                            <View style={styles.dot}></View>\n                            <Text style={styles.subtitle}>Upload your logo</Text>\n                        </View>\n                        <Button title=\"Upload\" onPress={pickImage} />\n                    </View>\n                </View>\n\n                <View style={styles.uploadContainer}>\n                    <View style={[styles.row, { justifyContent: 'space-between' }]}>\n                        <View style={styles.row}>\n                            <View style={styles.dot}></View>\n                            <Text style={styles.subtitle}>Select your background color</Text>\n                        </View>\n                        <Tooltip\n                            isVisible={visibleColorTooltip}\n                            content={<ColorPicker onValueChanged={setColor} />}\n                            closeOnContentInteraction={false}\n                            backgroundColor=\"rgba(0,0,0,0)\"\n                            contentStyle={{ backgroundColor: '#F2F2F2', marginTop: 10, borderRadius: 20 }}\n                            animated={true}\n                            arrowSize={{ width: 16, height: 8 }}\n                            placement=\"bottom\"\n                            showChildInTooltip={false}\n                            onClose={openCloseTooltip}\n                        >\n                            <Button\n                                title=\"Select color\"\n                                onPress={openCloseTooltip}\n                            />\n                        </Tooltip>\n                    </View>\n                </View>\n\n                <Footer />\n            </View>\n        </View>\n    );\n};\n\nexport default React.memo(SplashscreenConfig)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}