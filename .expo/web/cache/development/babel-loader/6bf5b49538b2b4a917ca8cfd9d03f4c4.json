{"ast":null,"code":"import rng from \"./rng.js\";\nimport bytesToUuid from \"./bytesToUuid.js\";\n\nvar _nodeId;\n\nvar _clockseq;\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n  msecs += 12219292800000;\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n  b[i++] = tmh >>> 24 & 0xf | 0x10;\n  b[i++] = tmh >>> 16 & 0xff;\n  b[i++] = clockseq >>> 8 | 0x80;\n  b[i++] = clockseq & 0xff;\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/v1.js"],"names":["rng","bytesToUuid","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","offset","i","b","node","clockseq","undefined","seedBytes","random","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n"],"mappings":"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","sourcesContent":["import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;"]},"metadata":{},"sourceType":"module"}