{"ast":null,"code":"import normalizeColor from 'normalize-css-color';\n\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  var int32Color = normalizeColor(color);\n\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\n\nexport default processColor;","map":{"version":3,"names":["normalizeColor","processColor","color","undefined","int32Color"],"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/src/exports/processColor/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from 'normalize-css-color';\n\nconst processColor = (color?: string | number): ?number => {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  // convert number and hex\n  let int32Color = normalizeColor(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  return int32Color;\n};\n\nexport default processColor;\n"],"mappings":"AAUA,OAAOA,cAAP,MAA2B,qBAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAsC;EACzD,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;IACzC,OAAOA,KAAP;EACD;;EAGD,IAAIE,UAAU,GAAGJ,cAAc,CAACE,KAAD,CAA/B;;EACA,IAAIE,UAAU,KAAKD,SAAf,IAA4BC,UAAU,KAAK,IAA/C,EAAqD;IACnD,OAAOD,SAAP;EACD;;EAEDC,UAAU,GAAG,CAAEA,UAAU,IAAI,EAAf,GAAsBA,UAAU,KAAK,CAAtC,MAA8C,CAA3D;EAEA,OAAOA,UAAP;AACD,CAdD;;AAgBA,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}