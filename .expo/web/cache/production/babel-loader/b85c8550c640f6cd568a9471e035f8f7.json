{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import{runOnUI}from\"../core\";import{withStyleAnimation}from\"../animation/styleAnimation\";import{ColorProperties}from\"../UpdateProps\";import{processColor}from\"../Colors\";runOnUI(function(){var _f=function _f(){var configs={};var enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function registerConfig(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function removeConfig(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function startAnimationForTag(tag,type,yogaValues){if(configs[tag]==null){return;}var style=configs[tag][type](yogaValues);var currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){var entryAniamtion=enteringAnimationForTag[tag].animations;var layoutAnimation=style.animations;currentAnimation={};for(var key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(var _key in layoutAnimation){currentAnimation[_key]=layoutAnimation[_key];}}var sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);var backupColor={};for(var _key2 in style.initialValues){if(ColorProperties.includes(_key2)){var value=style.initialValues[_key2];backupColor[_key2]=value;style.initialValues[_key2]=processColor(value);}}sv.value=_extends({},sv._value,style.initialValues);_stopObservingProgress(tag,false);var animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=_extends(_extends({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};};_f._closure={ColorProperties:ColorProperties,processColor:processColor,withStyleAnimation:withStyleAnimation};_f.asString=\"function _f(){const{ColorProperties,processColor,withStyleAnimation}=jsThis._closure;{const configs={};const enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function(tag,type,yogaValues){if(configs[tag]==null){return;}const style=configs[tag][type](yogaValues);let currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){const entryAniamtion=enteringAnimationForTag[tag].animations;const layoutAnimation=style.animations;currentAnimation={};for(const key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(const key in layoutAnimation){currentAnimation[key]=layoutAnimation[key];}}const sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);const backupColor={};for(const key in style.initialValues){if(ColorProperties.includes(key)){const value=style.initialValues[key];backupColor[key]=value;style.initialValues[key]=processColor(value);}}sv.value=Object.assign({},sv._value,style.initialValues);_stopObservingProgress(tag,false);const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=Object.assign(Object.assign({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};}}\";_f.__workletHash=15633326713685;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js (6:8)\";global.__reanimatedWorkletInit(_f);return _f;}())();","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js"],"names":["runOnUI","withStyleAnimation","ColorProperties","processColor","configs","enteringAnimationForTag","global","LayoutAnimationRepository","registerConfig","tag","config","removeConfig","startAnimationForTag","type","yogaValues","style","currentAnimation","animations","entryAniamtion","layoutAnimation","key","sv","_stopObservingProgress","_startObservingProgress","backupColor","initialValues","includes","value","_value","animation","callback","finished"],"mappings":"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","sourcesContent":["/* global _stopObservingProgress, _startObservingProgress */\nimport { runOnUI } from '../core';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\nrunOnUI(() => {\n    'worklet';\n    const configs = {};\n    const enteringAnimationForTag = {};\n    global.LayoutAnimationRepository = {\n        configs,\n        registerConfig(tag, config) {\n            configs[tag] = config;\n            enteringAnimationForTag[tag] = null;\n        },\n        removeConfig(tag) {\n            delete configs[tag];\n            delete enteringAnimationForTag[tag];\n        },\n        startAnimationForTag(tag, type, yogaValues) {\n            if (configs[tag] == null) {\n                return; // :(\n            }\n            const style = configs[tag][type](yogaValues);\n            let currentAnimation = style.animations;\n            if (type === 'entering') {\n                enteringAnimationForTag[tag] = style;\n            }\n            else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\n                const entryAniamtion = enteringAnimationForTag[tag].animations;\n                const layoutAnimation = style.animations;\n                currentAnimation = {};\n                for (const key in entryAniamtion) {\n                    currentAnimation[key] = entryAniamtion[key];\n                }\n                for (const key in layoutAnimation) {\n                    currentAnimation[key] = layoutAnimation[key];\n                }\n            }\n            const sv = configs[tag].sv;\n            _stopObservingProgress(tag, false);\n            _startObservingProgress(tag, sv);\n            const backupColor = {};\n            for (const key in style.initialValues) {\n                if (ColorProperties.includes(key)) {\n                    const value = style.initialValues[key];\n                    backupColor[key] = value;\n                    style.initialValues[key] = processColor(value);\n                }\n            }\n            sv.value = Object.assign({}, sv._value, style.initialValues);\n            _stopObservingProgress(tag, false);\n            const animation = withStyleAnimation(currentAnimation);\n            animation.callback = (finished) => {\n                if (finished) {\n                    _stopObservingProgress(tag, finished);\n                }\n                style.callback && style.callback(finished);\n            };\n            if (backupColor) {\n                configs[tag].sv._value = Object.assign(Object.assign({}, configs[tag].sv.value), backupColor);\n            }\n            configs[tag].sv.value = animation;\n            _startObservingProgress(tag, sv);\n        },\n    };\n})();\n"]},"metadata":{},"sourceType":"module"}