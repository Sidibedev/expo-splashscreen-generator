{"ast":null,"code":"'use strict';import _bezier from\"./bezier\";var _ease;var Easing=function(){function Easing(){}Easing.step0=function step0(n){return n>0?1:0;};Easing.step1=function step1(n){return n>=1?1:0;};Easing.linear=function linear(t){return t;};Easing.ease=function ease(t){if(!_ease){_ease=Easing.bezier(0.42,0,1,1);}return _ease(t);};Easing.quad=function quad(t){return t*t;};Easing.cubic=function cubic(t){return t*t*t;};Easing.poly=function poly(n){return function(t){return Math.pow(t,n);};};Easing.sin=function sin(t){return 1-Math.cos(t*Math.PI/2);};Easing.circle=function circle(t){return 1-Math.sqrt(1-t*t);};Easing.exp=function exp(t){return Math.pow(2,10*(t-1));};Easing.elastic=function elastic(bounciness){if(bounciness===void 0){bounciness=1;}var p=bounciness*Math.PI;return function(t){return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};};Easing.back=function back(s){if(s===void 0){s=1.70158;}return function(t){return t*t*((s+1)*t-s);};};Easing.bounce=function bounce(t){if(t<1/2.75){return 7.5625*t*t;}if(t<2/2.75){var _t=t-1.5/2.75;return 7.5625*_t*_t+0.75;}if(t<2.5/2.75){var _t2=t-2.25/2.75;return 7.5625*_t2*_t2+0.9375;}var t2=t-2.625/2.75;return 7.5625*t2*t2+0.984375;};Easing.bezier=function bezier(x1,y1,x2,y2){return _bezier(x1,y1,x2,y2);};Easing.in=function _in(easing){return easing;};Easing.out=function out(easing){return function(t){return 1-easing(1-t);};};Easing.inOut=function inOut(easing){return function(t){if(t<0.5){return easing(t*2)/2;}return 1-easing((1-t)*2)/2;};};return Easing;}();export default Easing;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/vendor/react-native/Animated/Easing.js"],"names":["_bezier","_ease","Easing","step0","n","step1","linear","t","ease","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","_t","_t2","t2","x1","y1","x2","y2","in","_in","easing","out","inOut"],"mappings":"AASA,aAEA,MAAOA,CAAAA,OAAP,gBAEA,GAAIC,CAAAA,KAAJ,CAgDA,GAAIC,CAAAA,MAAM,CAAgB,UAAY,CACpC,QAASA,CAAAA,MAAT,EAAkB,CAAE,CAKpBA,MAAM,CAACC,KAAP,CAAe,QAASA,CAAAA,KAAT,CAAeC,CAAf,CAAkB,CAC/B,MAAOA,CAAAA,CAAC,CAAG,CAAJ,CAAQ,CAAR,CAAY,CAAnB,CACD,CAFD,CAQAF,MAAM,CAACG,KAAP,CAAe,QAASA,CAAAA,KAAT,CAAeD,CAAf,CAAkB,CAC/B,MAAOA,CAAAA,CAAC,EAAI,CAAL,CAAS,CAAT,CAAa,CAApB,CACD,CAFD,CAWAF,MAAM,CAACI,MAAP,CAAgB,QAASA,CAAAA,MAAT,CAAgBC,CAAhB,CAAmB,CACjC,MAAOA,CAAAA,CAAP,CACD,CAFD,CAWAL,MAAM,CAACM,IAAP,CAAc,QAASA,CAAAA,IAAT,CAAcD,CAAd,CAAiB,CAC7B,GAAI,CAACN,KAAL,CAAY,CACVA,KAAK,CAAGC,MAAM,CAACO,MAAP,CAAc,IAAd,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAAR,CACD,CAED,MAAOR,CAAAA,KAAK,CAACM,CAAD,CAAZ,CACD,CAND,CAeAL,MAAM,CAACQ,IAAP,CAAc,QAASA,CAAAA,IAAT,CAAcH,CAAd,CAAiB,CAC7B,MAAOA,CAAAA,CAAC,CAAGA,CAAX,CACD,CAFD,CAWAL,MAAM,CAACS,KAAP,CAAe,QAASA,CAAAA,KAAT,CAAeJ,CAAf,CAAkB,CAC/B,MAAOA,CAAAA,CAAC,CAAGA,CAAJ,CAAQA,CAAf,CACD,CAFD,CAWAL,MAAM,CAACU,IAAP,CAAc,QAASA,CAAAA,IAAT,CAAcR,CAAd,CAAiB,CAC7B,MAAO,UAAUG,CAAV,CAAa,CAClB,MAAOM,CAAAA,IAAI,CAACC,GAAL,CAASP,CAAT,CAAYH,CAAZ,CAAP,CACD,CAFD,CAGD,CAJD,CAYAF,MAAM,CAACa,GAAP,CAAa,QAASA,CAAAA,GAAT,CAAaR,CAAb,CAAgB,CAC3B,MAAO,GAAIM,IAAI,CAACG,GAAL,CAAST,CAAC,CAAGM,IAAI,CAACI,EAAT,CAAc,CAAvB,CAAX,CACD,CAFD,CAUAf,MAAM,CAACgB,MAAP,CAAgB,QAASA,CAAAA,MAAT,CAAgBX,CAAhB,CAAmB,CACjC,MAAO,GAAIM,IAAI,CAACM,IAAL,CAAU,EAAIZ,CAAC,CAAGA,CAAlB,CAAX,CACD,CAFD,CAUAL,MAAM,CAACkB,GAAP,CAAa,QAASA,CAAAA,GAAT,CAAab,CAAb,CAAgB,CAC3B,MAAOM,CAAAA,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,IAAMP,CAAC,CAAG,CAAV,CAAZ,CAAP,CACD,CAFD,CAeAL,MAAM,CAACmB,OAAP,CAAiB,QAASA,CAAAA,OAAT,CAAiBC,UAAjB,CAA6B,CAC5C,GAAIA,UAAU,GAAK,IAAK,EAAxB,CAA2B,CACzBA,UAAU,CAAG,CAAb,CACD,CAED,GAAIC,CAAAA,CAAC,CAAGD,UAAU,CAAGT,IAAI,CAACI,EAA1B,CACA,MAAO,UAAUV,CAAV,CAAa,CAClB,MAAO,GAAIM,IAAI,CAACC,GAAL,CAASD,IAAI,CAACG,GAAL,CAAST,CAAC,CAAGM,IAAI,CAACI,EAAT,CAAc,CAAvB,CAAT,CAAoC,CAApC,EAAyCJ,IAAI,CAACG,GAAL,CAAST,CAAC,CAAGgB,CAAb,CAApD,CACD,CAFD,CAGD,CATD,CAoBArB,MAAM,CAACsB,IAAP,CAAc,QAASA,CAAAA,IAAT,CAAcC,CAAd,CAAiB,CAC7B,GAAIA,CAAC,GAAK,IAAK,EAAf,CAAkB,CAChBA,CAAC,CAAG,OAAJ,CACD,CAED,MAAO,UAAUlB,CAAV,CAAa,CAClB,MAAOA,CAAAA,CAAC,CAAGA,CAAJ,EAAS,CAACkB,CAAC,CAAG,CAAL,EAAUlB,CAAV,CAAckB,CAAvB,CAAP,CACD,CAFD,CAGD,CARD,CAgBAvB,MAAM,CAACwB,MAAP,CAAgB,QAASA,CAAAA,MAAT,CAAgBnB,CAAhB,CAAmB,CACjC,GAAIA,CAAC,CAAG,EAAI,IAAZ,CAAkB,CAChB,MAAO,QAASA,CAAT,CAAaA,CAApB,CACD,CAED,GAAIA,CAAC,CAAG,EAAI,IAAZ,CAAkB,CAChB,GAAIoB,CAAAA,EAAE,CAAGpB,CAAC,CAAG,IAAM,IAAnB,CAEA,MAAO,QAASoB,EAAT,CAAcA,EAAd,CAAmB,IAA1B,CACD,CAED,GAAIpB,CAAC,CAAG,IAAM,IAAd,CAAoB,CAClB,GAAIqB,CAAAA,GAAG,CAAGrB,CAAC,CAAG,KAAO,IAArB,CAEA,MAAO,QAASqB,GAAT,CAAeA,GAAf,CAAqB,MAA5B,CACD,CAED,GAAIC,CAAAA,EAAE,CAAGtB,CAAC,CAAG,MAAQ,IAArB,CACA,MAAO,QAASsB,EAAT,CAAcA,EAAd,CAAmB,QAA1B,CACD,CAnBD,CA6BA3B,MAAM,CAACO,MAAP,CAAgB,QAASA,CAAAA,MAAT,CAAgBqB,EAAhB,CAAoBC,EAApB,CAAwBC,EAAxB,CAA4BC,EAA5B,CAAgC,CAC9C,MAAOjC,CAAAA,OAAO,CAAC8B,EAAD,CAAKC,EAAL,CAASC,EAAT,CAAaC,EAAb,CAAd,CACD,CAFD,CAQA/B,MAAM,CAACgC,EAAP,CAAY,QAASC,CAAAA,GAAT,CAAaC,MAAb,CAAqB,CAC/B,MAAOA,CAAAA,MAAP,CACD,CAFD,CAQAlC,MAAM,CAACmC,GAAP,CAAa,QAASA,CAAAA,GAAT,CAAaD,MAAb,CAAqB,CAChC,MAAO,UAAU7B,CAAV,CAAa,CAClB,MAAO,GAAI6B,MAAM,CAAC,EAAI7B,CAAL,CAAjB,CACD,CAFD,CAGD,CAJD,CAYAL,MAAM,CAACoC,KAAP,CAAe,QAASA,CAAAA,KAAT,CAAeF,MAAf,CAAuB,CACpC,MAAO,UAAU7B,CAAV,CAAa,CAClB,GAAIA,CAAC,CAAG,GAAR,CAAa,CACX,MAAO6B,CAAAA,MAAM,CAAC7B,CAAC,CAAG,CAAL,CAAN,CAAgB,CAAvB,CACD,CAED,MAAO,GAAI6B,MAAM,CAAC,CAAC,EAAI7B,CAAL,EAAU,CAAX,CAAN,CAAsB,CAAjC,CACD,CAND,CAOD,CARD,CAUA,MAAOL,CAAAA,MAAP,CACD,CAhOyB,EAA1B,CAkOA,cAAeA,CAAAA,MAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport _bezier from './bezier';\n\nvar _ease;\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\n\nvar Easing = /*#__PURE__*/function () {\n  function Easing() {}\n\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  }\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  ;\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  }\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  ;\n\n  Easing.linear = function linear(t) {\n    return t;\n  }\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  ;\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n\n    return _ease(t);\n  }\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  ;\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  }\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  ;\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  }\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  ;\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  }\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  ;\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  ;\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  ;\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  ;\n\n  Easing.elastic = function elastic(bounciness) {\n    if (bounciness === void 0) {\n      bounciness = 1;\n    }\n\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  }\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * Wolfram Plot:\n   *\n   * - http://tiny.cc/back_default (s = 1.70158, default)\n   */\n  ;\n\n  Easing.back = function back(s) {\n    if (s === void 0) {\n      s = 1.70158;\n    }\n\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  ;\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  }\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  ;\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return _bezier(x1, y1, x2, y2);\n  }\n  /**\n   * Runs an easing function forwards.\n   */\n  ;\n\n  Easing.in = function _in(easing) {\n    return easing;\n  }\n  /**\n   * Runs an easing function backwards.\n   */\n  ;\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  }\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  ;\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n\n  return Easing;\n}();\n\nexport default Easing;"]},"metadata":{},"sourceType":"module"}