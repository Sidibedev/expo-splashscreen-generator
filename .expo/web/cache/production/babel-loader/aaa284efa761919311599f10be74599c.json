{"ast":null,"code":"'use strict';var deepDiffer=function deepDiffer(one,two,maxDepth){if(maxDepth===void 0){maxDepth=-1;}if(maxDepth===0){return true;}if(one===two){return false;}if(typeof one==='function'&&typeof two==='function'){return false;}if(typeof one!=='object'||one===null){return one!==two;}if(typeof two!=='object'||two===null){return true;}if(one.constructor!==two.constructor){return true;}if(Array.isArray(one)){var len=one.length;if(two.length!==len){return true;}for(var ii=0;ii<len;ii++){if(deepDiffer(one[ii],two[ii],maxDepth-1)){return true;}}}else{for(var key in one){if(deepDiffer(one[key],two[key],maxDepth-1)){return true;}}for(var twoKey in two){if(one[twoKey]===undefined&&two[twoKey]!==undefined){return true;}}}return false;};export default deepDiffer;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/vendor/react-native/deepDiffer/index.js"],"names":["deepDiffer","one","two","maxDepth","constructor","Array","isArray","len","length","ii","key","twoKey","undefined"],"mappings":"AASA,aAKA,GAAIA,CAAAA,UAAU,CAAG,QAASA,CAAAA,UAAT,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8BC,QAA9B,CAAwC,CACvD,GAAIA,QAAQ,GAAK,IAAK,EAAtB,CAAyB,CACvBA,QAAQ,CAAG,CAAC,CAAZ,CACD,CAED,GAAIA,QAAQ,GAAK,CAAjB,CAAoB,CAClB,MAAO,KAAP,CACD,CAED,GAAIF,GAAG,GAAKC,GAAZ,CAAiB,CAEf,MAAO,MAAP,CACD,CAED,GAAI,MAAOD,CAAAA,GAAP,GAAe,UAAf,EAA6B,MAAOC,CAAAA,GAAP,GAAe,UAAhD,CAA4D,CAE1D,MAAO,MAAP,CACD,CAED,GAAI,MAAOD,CAAAA,GAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,IAAvC,CAA6C,CAE3C,MAAOA,CAAAA,GAAG,GAAKC,GAAf,CACD,CAED,GAAI,MAAOA,CAAAA,GAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,IAAvC,CAA6C,CAG3C,MAAO,KAAP,CACD,CAED,GAAID,GAAG,CAACG,WAAJ,GAAoBF,GAAG,CAACE,WAA5B,CAAyC,CACvC,MAAO,KAAP,CACD,CAED,GAAIC,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAJ,CAAwB,CAEtB,GAAIM,CAAAA,GAAG,CAAGN,GAAG,CAACO,MAAd,CAEA,GAAIN,GAAG,CAACM,MAAJ,GAAeD,GAAnB,CAAwB,CACtB,MAAO,KAAP,CACD,CAED,IAAK,GAAIE,CAAAA,EAAE,CAAG,CAAd,CAAiBA,EAAE,CAAGF,GAAtB,CAA2BE,EAAE,EAA7B,CAAiC,CAC/B,GAAIT,UAAU,CAACC,GAAG,CAACQ,EAAD,CAAJ,CAAUP,GAAG,CAACO,EAAD,CAAb,CAAmBN,QAAQ,CAAG,CAA9B,CAAd,CAAgD,CAC9C,MAAO,KAAP,CACD,CACF,CACF,CAbD,IAaO,CACL,IAAK,GAAIO,CAAAA,GAAT,GAAgBT,CAAAA,GAAhB,CAAqB,CACnB,GAAID,UAAU,CAACC,GAAG,CAACS,GAAD,CAAJ,CAAWR,GAAG,CAACQ,GAAD,CAAd,CAAqBP,QAAQ,CAAG,CAAhC,CAAd,CAAkD,CAChD,MAAO,KAAP,CACD,CACF,CAED,IAAK,GAAIQ,CAAAA,MAAT,GAAmBT,CAAAA,GAAnB,CAAwB,CAGtB,GAAID,GAAG,CAACU,MAAD,CAAH,GAAgBC,SAAhB,EAA6BV,GAAG,CAACS,MAAD,CAAH,GAAgBC,SAAjD,CAA4D,CAC1D,MAAO,KAAP,CACD,CACF,CACF,CAED,MAAO,MAAP,CACD,CAhED,CAkEA,cAAeZ,CAAAA,UAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n/*\n * @returns {bool} true if different, false if equal\n */\n\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default deepDiffer;"]},"metadata":{},"sourceType":"module"}