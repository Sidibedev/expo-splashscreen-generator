{"ast":null,"code":"var slice=Array.prototype.slice;export default function createOrderedCSSStyleSheet(sheet){var groups={};var selectors={};if(sheet!=null){var group;slice.call(sheet.cssRules).forEach(function(cssRule,i){var cssText=cssRule.cssText;if(cssText.indexOf('stylesheet-group')>-1){group=decodeGroupRule(cssRule);groups[group]={start:i,rules:[cssText]};}else{var selectorText=getSelectorText(cssText);if(selectorText!=null){selectors[selectorText]=true;groups[group].rules.push(cssText);}}});}function sheetInsert(sheet,group,text){var orderedGroups=getOrderedGroups(groups);var groupIndex=orderedGroups.indexOf(group);var nextGroupIndex=groupIndex+1;var nextGroup=orderedGroups[nextGroupIndex];var position=nextGroup!=null&&groups[nextGroup].start!=null?groups[nextGroup].start:sheet.cssRules.length;var isInserted=insertRuleAt(sheet,text,position);if(isInserted){if(groups[group].start==null){groups[group].start=position;}for(var i=nextGroupIndex;i<orderedGroups.length;i+=1){var groupNumber=orderedGroups[i];var previousStart=groups[groupNumber].start||0;groups[groupNumber].start=previousStart+1;}}return isInserted;}var OrderedCSSStyleSheet={getTextContent:function getTextContent(){return getOrderedGroups(groups).map(function(group){var rules=groups[group].rules;return rules.join('\\n');}).join('\\n');},insert:function insert(cssText,groupValue){var group=Number(groupValue);if(groups[group]==null){var markerRule=encodeGroupRule(group);groups[group]={start:null,rules:[markerRule]};if(sheet!=null){sheetInsert(sheet,group,markerRule);}}var selectorText=getSelectorText(cssText);if(selectorText!=null&&selectors[selectorText]==null){selectors[selectorText]=true;groups[group].rules.push(cssText);if(sheet!=null){var isInserted=sheetInsert(sheet,group,cssText);if(!isInserted){groups[group].rules.pop();}}}}};return OrderedCSSStyleSheet;}function encodeGroupRule(group){return\"[stylesheet-group=\\\"\"+group+\"\\\"]{}\";}function decodeGroupRule(cssRule){return Number(cssRule.selectorText.split(/[\"']/)[1]);}function getOrderedGroups(obj){return Object.keys(obj).map(Number).sort(function(a,b){return a>b?1:-1;});}var pattern=/\\s*([,])\\s*/g;function getSelectorText(cssText){var selector=cssText.split('{')[0].trim();return selector!==''?selector.replace(pattern,'$1'):null;}function insertRuleAt(root,cssText,position){try{root.insertRule(cssText,position);return true;}catch(e){return false;}}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/exports/StyleSheet/createOrderedCSSStyleSheet.js"],"names":["slice","Array","prototype","createOrderedCSSStyleSheet","sheet","groups","selectors","group","call","cssRules","forEach","cssRule","i","cssText","indexOf","decodeGroupRule","start","rules","selectorText","getSelectorText","push","sheetInsert","text","orderedGroups","getOrderedGroups","groupIndex","nextGroupIndex","nextGroup","position","length","isInserted","insertRuleAt","groupNumber","previousStart","OrderedCSSStyleSheet","getTextContent","map","join","insert","groupValue","Number","markerRule","encodeGroupRule","pop","split","obj","Object","keys","sort","a","b","pattern","selector","trim","replace","root","insertRule","e"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar slice = Array.prototype.slice;\n/**\n * Order-based insertion of CSS.\n *\n * Each rule is associated with a numerically defined group.\n * Groups are ordered within the style sheet according to their number, with the\n * lowest first.\n *\n * Groups are implemented using marker rules. The selector of the first rule of\n * each group is used only to encode the group number for hydration. An\n * alternative implementation could rely on CSSMediaRule, allowing groups to be\n * treated as a sub-sheet, but the Edge implementation of CSSMediaRule is\n * broken.\n * https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule\n * https://gist.github.com/necolas/aa0c37846ad6bd3b05b727b959e82674\n */\n\nexport default function createOrderedCSSStyleSheet(sheet) {\n  var groups = {};\n  var selectors = {};\n  /**\n   * Hydrate approximate record from any existing rules in the sheet.\n   */\n\n  if (sheet != null) {\n    var group;\n    slice.call(sheet.cssRules).forEach(function (cssRule, i) {\n      var cssText = cssRule.cssText; // Create record of existing selectors and rules\n\n      if (cssText.indexOf('stylesheet-group') > -1) {\n        group = decodeGroupRule(cssRule);\n        groups[group] = {\n          start: i,\n          rules: [cssText]\n        };\n      } else {\n        var selectorText = getSelectorText(cssText);\n\n        if (selectorText != null) {\n          selectors[selectorText] = true;\n          groups[group].rules.push(cssText);\n        }\n      }\n    });\n  }\n\n  function sheetInsert(sheet, group, text) {\n    var orderedGroups = getOrderedGroups(groups);\n    var groupIndex = orderedGroups.indexOf(group);\n    var nextGroupIndex = groupIndex + 1;\n    var nextGroup = orderedGroups[nextGroupIndex]; // Insert rule before the next group, or at the end of the stylesheet\n\n    var position = nextGroup != null && groups[nextGroup].start != null ? groups[nextGroup].start : sheet.cssRules.length;\n    var isInserted = insertRuleAt(sheet, text, position);\n\n    if (isInserted) {\n      // Set the starting index of the new group\n      if (groups[group].start == null) {\n        groups[group].start = position;\n      } // Increment the starting index of all subsequent groups\n\n\n      for (var i = nextGroupIndex; i < orderedGroups.length; i += 1) {\n        var groupNumber = orderedGroups[i];\n        var previousStart = groups[groupNumber].start || 0;\n        groups[groupNumber].start = previousStart + 1;\n      }\n    }\n\n    return isInserted;\n  }\n\n  var OrderedCSSStyleSheet = {\n    /**\n     * The textContent of the style sheet.\n     */\n    getTextContent: function getTextContent() {\n      return getOrderedGroups(groups).map(function (group) {\n        var rules = groups[group].rules;\n        return rules.join('\\n');\n      }).join('\\n');\n    },\n\n    /**\n     * Insert a rule into the style sheet\n     */\n    insert: function insert(cssText, groupValue) {\n      var group = Number(groupValue); // Create a new group.\n\n      if (groups[group] == null) {\n        var markerRule = encodeGroupRule(group); // Create the internal record.\n\n        groups[group] = {\n          start: null,\n          rules: [markerRule]\n        }; // Update CSSOM.\n\n        if (sheet != null) {\n          sheetInsert(sheet, group, markerRule);\n        }\n      } // selectorText is more reliable than cssText for insertion checks. The\n      // browser excludes vendor-prefixed properties and rewrites certain values\n      // making cssText more likely to be different from what was inserted.\n\n\n      var selectorText = getSelectorText(cssText);\n\n      if (selectorText != null && selectors[selectorText] == null) {\n        // Update the internal records.\n        selectors[selectorText] = true;\n        groups[group].rules.push(cssText); // Update CSSOM.\n\n        if (sheet != null) {\n          var isInserted = sheetInsert(sheet, group, cssText);\n\n          if (!isInserted) {\n            // Revert internal record change if a rule was rejected (e.g.,\n            // unrecognized pseudo-selector)\n            groups[group].rules.pop();\n          }\n        }\n      }\n    }\n  };\n  return OrderedCSSStyleSheet;\n}\n/**\n * Helper functions\n */\n\nfunction encodeGroupRule(group) {\n  return \"[stylesheet-group=\\\"\" + group + \"\\\"]{}\";\n}\n\nfunction decodeGroupRule(cssRule) {\n  return Number(cssRule.selectorText.split(/[\"']/)[1]);\n}\n\nfunction getOrderedGroups(obj) {\n  return Object.keys(obj).map(Number).sort(function (a, b) {\n    return a > b ? 1 : -1;\n  });\n}\n\nvar pattern = /\\s*([,])\\s*/g;\n\nfunction getSelectorText(cssText) {\n  var selector = cssText.split('{')[0].trim();\n  return selector !== '' ? selector.replace(pattern, '$1') : null;\n}\n\nfunction insertRuleAt(root, cssText, position) {\n  try {\n    // $FlowFixMe: Flow is missing CSSOM types needed to type 'root'.\n    root.insertRule(cssText, position);\n    return true;\n  } catch (e) {\n    // JSDOM doesn't support `CSSSMediaRule#insertRule`.\n    // Also ignore errors that occur from attempting to insert vendor-prefixed selectors.\n    return false;\n  }\n}"]},"metadata":{},"sourceType":"module"}