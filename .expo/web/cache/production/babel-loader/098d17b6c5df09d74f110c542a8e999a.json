{"ast":null,"code":"var byteToHex=[];for(var i=0;i<256;++i){byteToHex[i]=(i+0x100).toString(16).substr(1);}function bytesToUuid(buf,offset){var i=offset||0;var bth=byteToHex;return[bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]]].join('');}export default bytesToUuid;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/bytesToUuid.js"],"names":["byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join"],"mappings":"AAIA,GAAIA,CAAAA,SAAS,CAAG,EAAhB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,GAApB,CAAyB,EAAEA,CAA3B,CAA8B,CAC5BD,SAAS,CAACC,CAAD,CAAT,CAAe,CAACA,CAAC,CAAG,KAAL,EAAYC,QAAZ,CAAqB,EAArB,EAAyBC,MAAzB,CAAgC,CAAhC,CAAf,CACD,CAED,QAASC,CAAAA,WAAT,CAAqBC,GAArB,CAA0BC,MAA1B,CAAkC,CAChC,GAAIL,CAAAA,CAAC,CAAGK,MAAM,EAAI,CAAlB,CACA,GAAIC,CAAAA,GAAG,CAAGP,SAAV,CAEA,MAAO,CAACO,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAJ,CAAgBM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAnB,CAA+BM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAlC,CAA8CM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAjD,CAA6D,GAA7D,CAAkEM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAArE,CAAiFM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAApF,CAAgG,GAAhG,CAAqGM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAxG,CAAoHM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAvH,CAAmI,GAAnI,CAAwIM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA3I,CAAuJM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA1J,CAAsK,GAAtK,CAA2KM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA9K,CAA0LM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA7L,CAAyMM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA5M,CAAwNM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA3N,CAAuOM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAA1O,CAAsPM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAAzP,EAAqQO,IAArQ,CAA0Q,EAA1Q,CAAP,CACD,CAED,cAAeJ,CAAAA,WAAf","sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;"]},"metadata":{},"sourceType":"module"}