{"ast":null,"code":"import isWebColor from\"../isWebColor\";import processColor from\"../../exports/processColor\";var normalizeColor=function normalizeColor(color,opacity){if(opacity===void 0){opacity=1;}if(color==null)return;if(typeof color==='string'&&isWebColor(color)){return color;}var colorInt=processColor(color);if(colorInt!=null){var r=colorInt>>16&255;var g=colorInt>>8&255;var b=colorInt&255;var a=(colorInt>>24&255)/255;var alpha=(a*opacity).toFixed(2);return\"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";}};export default normalizeColor;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/modules/normalizeColor/index.js"],"names":["isWebColor","processColor","normalizeColor","color","opacity","colorInt","r","g","b","a","alpha","toFixed"],"mappings":"AAQA,MAAOA,CAAAA,UAAP,qBACA,MAAOC,CAAAA,YAAP,kCAEA,GAAIC,CAAAA,cAAc,CAAG,QAASA,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,OAA/B,CAAwC,CAC3D,GAAIA,OAAO,GAAK,IAAK,EAArB,CAAwB,CACtBA,OAAO,CAAG,CAAV,CACD,CAED,GAAID,KAAK,EAAI,IAAb,CAAmB,OAEnB,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6BH,UAAU,CAACG,KAAD,CAA3C,CAAoD,CAClD,MAAOA,CAAAA,KAAP,CACD,CAED,GAAIE,CAAAA,QAAQ,CAAGJ,YAAY,CAACE,KAAD,CAA3B,CAEA,GAAIE,QAAQ,EAAI,IAAhB,CAAsB,CACpB,GAAIC,CAAAA,CAAC,CAAGD,QAAQ,EAAI,EAAZ,CAAiB,GAAzB,CACA,GAAIE,CAAAA,CAAC,CAAGF,QAAQ,EAAI,CAAZ,CAAgB,GAAxB,CACA,GAAIG,CAAAA,CAAC,CAAGH,QAAQ,CAAG,GAAnB,CACA,GAAII,CAAAA,CAAC,CAAG,CAACJ,QAAQ,EAAI,EAAZ,CAAiB,GAAlB,EAAyB,GAAjC,CACA,GAAIK,CAAAA,KAAK,CAAG,CAACD,CAAC,CAAGL,OAAL,EAAcO,OAAd,CAAsB,CAAtB,CAAZ,CACA,MAAO,QAAUL,CAAV,CAAc,GAAd,CAAoBC,CAApB,CAAwB,GAAxB,CAA8BC,CAA9B,CAAkC,GAAlC,CAAwCE,KAAxC,CAAgD,GAAvD,CACD,CACF,CArBD,CAuBA,cAAeR,CAAAA,cAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport isWebColor from '../isWebColor';\nimport processColor from '../../exports/processColor';\n\nvar normalizeColor = function normalizeColor(color, opacity) {\n  if (opacity === void 0) {\n    opacity = 1;\n  }\n\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = processColor(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n};\n\nexport default normalizeColor;"]},"metadata":{},"sourceType":"module"}