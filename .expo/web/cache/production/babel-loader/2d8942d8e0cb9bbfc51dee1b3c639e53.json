{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import LogBox from\"react-native-web/dist/exports/LogBox\";import createAnimatedComponent from\"./createAnimatedComponent\";import{addWhitelistedNativeProps,addWhitelistedUIProps}from\"./ConfigHelper\";import*as reanimated1 from\"./reanimated1\";import ReanimatedComponents from\"./reanimated2/component\";var Animated=_objectSpread(_objectSpread({},ReanimatedComponents),{},{createAnimatedComponent:createAnimatedComponent,addWhitelistedNativeProps:addWhitelistedNativeProps,addWhitelistedUIProps:addWhitelistedUIProps},reanimated1);export*from\"./reanimated2\";export*from\"./reanimated1\";export default Animated;LogBox.ignoreLogs(['RCTBridge required dispatch_sync to load RNGestureHandlerModule. This may lead to deadlocks']);","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/Animated.js"],"names":["createAnimatedComponent","addWhitelistedNativeProps","addWhitelistedUIProps","reanimated1","ReanimatedComponents","Animated","LogBox","ignoreLogs"],"mappings":"05BACA,MAAOA,CAAAA,uBAAP,iCACA,OACEC,yBADF,CAEEC,qBAFF,sBAIA,MAAO,GAAKC,CAAAA,WAAZ,qBACA,MAAOC,CAAAA,oBAAP,+BAEA,GAAMC,CAAAA,QAAQ,gCAETD,oBAFS,MAGZJ,uBAAuB,CAAvBA,uBAHY,CAKZC,yBAAyB,CAAzBA,yBALY,CAMZC,qBAAqB,CAArBA,qBANY,EAQTC,WARS,CAAd,CAWA,2BACA,2BACA,cAAeE,CAAAA,QAAf,CAMAC,MAAM,CAACC,UAAP,CAAkB,CAChB,6FADgB,CAAlB","sourcesContent":["import { LogBox } from 'react-native';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport * as reanimated1 from './reanimated1';\nimport ReanimatedComponents from './reanimated2/component';\n\nconst Animated = {\n  // components\n  ...ReanimatedComponents,\n  createAnimatedComponent,\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n  // reanimated 1\n  ...reanimated1,\n};\n\nexport * from './reanimated2';\nexport * from './reanimated1';\nexport default Animated;\n\n// I think we can ignore this message as long as Gesture Handler doesn't\n// try to load the Reanimated module. I figured it should be here instead of\n// RNGH because this prevents the message from being displayed for all\n// versions of RNGH.\nLogBox.ignoreLogs([\n  'RCTBridge required dispatch_sync to load RNGestureHandlerModule. This may lead to deadlocks',\n]);\n"]},"metadata":{},"sourceType":"module"}