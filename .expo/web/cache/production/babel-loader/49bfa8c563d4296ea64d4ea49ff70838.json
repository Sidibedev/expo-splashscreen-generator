{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{CodedError,Platform}from'expo-modules-core';import FontObserver from'fontfaceobserver';import{FontDisplay}from\"./Font.types\";function getFontFaceStyleSheet(){if(!Platform.isDOMAvailable){return null;}var styleSheet=getStyleElement();return styleSheet.sheet?styleSheet.sheet:null;}function getFontFaceRules(){var sheet=getFontFaceStyleSheet();if(sheet){var rules=_toConsumableArray(sheet.cssRules);var items=[];for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule instanceof CSSFontFaceRule){items.push({rule:rule,index:i});}}return items;}return[];}function getFontFaceRulesMatchingResource(fontFamilyName,options){var rules=getFontFaceRules();return rules.filter(function(_ref){var rule=_ref.rule;return rule.style.fontFamily===fontFamilyName&&(options&&options.display?options.display===rule.style.fontDisplay:true);});}export default{get name(){return'ExpoFontLoader';},unloadAllAsync:function unloadAllAsync(){return function _callee(){var element;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(Platform.isDOMAvailable){_context.next=2;break;}return _context.abrupt(\"return\");case 2:element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){document.removeChild(element);}case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}();},unloadAsync:function unloadAsync(fontFamilyName,options){return function _callee2(){var sheet,items,_iterator,_step,item;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:sheet=getFontFaceStyleSheet();if(sheet){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:items=getFontFaceRulesMatchingResource(fontFamilyName,options);for(_iterator=_createForOfIteratorHelperLoose(items);!(_step=_iterator()).done;){item=_step.value;sheet.deleteRule(item.index);}case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);}();},loadAsync:function loadAsync(fontFamilyName,resource){return function _callee3(){var canInjectStyle,style;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(Platform.isDOMAvailable){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(canInjectStyle){_context3.next=5;break;}throw new CodedError('ERR_WEB_ENVIRONMENT',\"The browser's `document.head` element doesn't support injecting fonts.\");case 5:style=_createWebStyle(fontFamilyName,resource);document.head.appendChild(style);if(isFontLoadingListenerSupported()){_context3.next=9;break;}return _context3.abrupt(\"return\");case 9:return _context3.abrupt(\"return\",new FontObserver(fontFamilyName,{display:resource.display}).load());case 10:case\"end\":return _context3.stop();}}},null,null,null,Promise);}();}};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}function _createWebStyle(fontFamily,resource){var fontStyle=\"@font-face {\\n    font-family: \"+fontFamily+\";\\n    src: url(\"+resource.uri+\");\\n    font-display: \"+(resource.display||FontDisplay.AUTO)+\";\\n  }\";var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}function isFontLoadingListenerSupported(){var userAgent=window.navigator.userAgent;var isIOS=!!userAgent.match(/iPad|iPhone/i);var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var isEdge=userAgent.includes('Edge');var isIE=userAgent.includes('Trident');var isFirefox=userAgent.includes('Firefox');return!isSafari&&!isIOS&&!isEdge&&!isIE&&!isFirefox;}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  async loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n\n    if (!isFontLoadingListenerSupported()) {\n      return;\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load();\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n    font-display: ${resource.display || FontDisplay.AUTO};\n  }`;\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}