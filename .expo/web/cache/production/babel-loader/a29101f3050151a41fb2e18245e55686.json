{"ast":null,"code":"import invariant from'fbjs/lib/invariant';import requestIdleCallback,{cancelIdleCallback}from\"../../modules/requestIdleCallback\";var InteractionManager={Events:{interactionStart:'interactionStart',interactionComplete:'interactionComplete'},runAfterInteractions:function runAfterInteractions(task){var handle;var promise=new Promise(function(resolve){handle=requestIdleCallback(function(){if(task){resolve(task());}else{resolve();}});});return{then:promise.then.bind(promise),done:promise.then.bind(promise),cancel:function cancel(){cancelIdleCallback(handle);}};},createInteractionHandle:function createInteractionHandle(){return 1;},clearInteractionHandle:function clearInteractionHandle(handle){invariant(!!handle,'Must provide a handle to clear.');},addListener:function addListener(){}};export default InteractionManager;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"names":["invariant","requestIdleCallback","cancelIdleCallback","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","addListener"],"mappings":"AASA,MAAOA,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,mBAAP,EAA8BC,kBAA9B,yCACA,GAAIC,CAAAA,kBAAkB,CAAG,CACvBC,MAAM,CAAE,CACNC,gBAAgB,CAAE,kBADZ,CAENC,mBAAmB,CAAE,qBAFf,CADe,CASvBC,oBAAoB,CAAE,QAASA,CAAAA,oBAAT,CAA8BC,IAA9B,CAAoC,CACxD,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAAUC,OAAV,CAAmB,CAC3CH,MAAM,CAAGR,mBAAmB,CAAC,UAAY,CACvC,GAAIO,IAAJ,CAAU,CACRI,OAAO,CAACJ,IAAI,EAAL,CAAP,CACD,CAFD,IAEO,CACLI,OAAO,GACR,CACF,CAN2B,CAA5B,CAOD,CARa,CAAd,CASA,MAAO,CACLC,IAAI,CAAEH,OAAO,CAACG,IAAR,CAAaC,IAAb,CAAkBJ,OAAlB,CADD,CAELK,IAAI,CAAEL,OAAO,CAACG,IAAR,CAAaC,IAAb,CAAkBJ,OAAlB,CAFD,CAGLM,MAAM,CAAE,QAASA,CAAAA,MAAT,EAAkB,CACxBd,kBAAkB,CAACO,MAAD,CAAlB,CACD,CALI,CAAP,CAOD,CA3BsB,CAgCvBQ,uBAAuB,CAAE,QAASA,CAAAA,uBAAT,EAAmC,CAC1D,MAAO,EAAP,CACD,CAlCsB,CAuCvBC,sBAAsB,CAAE,QAASA,CAAAA,sBAAT,CAAgCT,MAAhC,CAAwC,CAC9DT,SAAS,CAAC,CAAC,CAACS,MAAH,CAAW,iCAAX,CAAT,CACD,CAzCsB,CA0CvBU,WAAW,CAAE,QAASA,CAAAA,WAAT,EAAuB,CAAE,CA1Cf,CAAzB,CA4CA,cAAehB,CAAAA,kBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;"]},"metadata":{},"sourceType":"module"}