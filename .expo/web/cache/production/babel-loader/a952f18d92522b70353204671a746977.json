{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import React from'react';import{COLORS}from\"../constants/colors\";import useDimensions from\"../hooks/useDimensions\";import{generateImagesAsync}from\"../utils/processImage\";import SplashscreenConfig from\"./SplashscreenConfig\";import SplashscreenPreview from\"./SplashscreenPreview\";import{styles}from\"../Style\";import Empty from\"./Empty\";import*as Analytics from'expo-firebase-analytics';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SplashscreenContainer=function SplashscreenContainer(){var _React$useState=React.useState(COLORS.secondary),_React$useState2=_slicedToArray(_React$useState,2),color=_React$useState2[0],setColor=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),logo=_React$useState4[0],setLogo=_React$useState4[1];var _useDimensions=useDimensions(),width=_useDimensions.width;var isMobile=React.useMemo(function(){return width<1000;},[width]);var downloadSplash=function downloadSplash(){return _regeneratorRuntime.async(function downloadSplash$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(generateImagesAsync({image:logo,color:color}));case 2:Analytics.logEvent('DOWNLOAD_SPLASHSCREEN',{screen:'home',purpose:'Download splashscreen'});case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);};return _jsx(View,{style:styles.container,children:isMobile?_jsx(Empty,{}):_jsxs(View,{style:styles.content,children:[_jsx(SplashscreenConfig,{setColor:setColor,setLogo:setLogo}),_jsx(SplashscreenPreview,{logo:logo,onDownload:downloadSplash,backgroundColor:color})]})});};export default SplashscreenContainer;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/components/SplashscreenContainer.js"],"names":["React","COLORS","useDimensions","generateImagesAsync","SplashscreenConfig","SplashscreenPreview","styles","Empty","Analytics","SplashscreenContainer","useState","secondary","color","setColor","logo","setLogo","width","isMobile","useMemo","downloadSplash","image","logEvent","screen","purpose","container","content"],"mappings":"wSACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,2BACA,MAAOC,CAAAA,aAAP,8BACA,OAASC,mBAAT,6BACA,MAAOC,CAAAA,kBAAP,4BACA,MAAOC,CAAAA,mBAAP,6BACA,OAASC,MAAT,gBACA,MAAOC,CAAAA,KAAP,eACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,yBAA3B,C,wFAGA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAChC,oBAA0BT,KAAK,CAACU,QAAN,CAAeT,MAAM,CAACU,SAAtB,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAAwBb,KAAK,CAACU,QAAN,CAAe,IAAf,CAAxB,qDAAOI,IAAP,qBAAaC,OAAb,qBACA,mBAAkBb,aAAa,EAA/B,CAAQc,KAAR,gBAAQA,KAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAGjB,KAAK,CAACkB,OAAN,CAAc,iBAAMF,CAAAA,KAAK,CAAG,IAAd,EAAd,CAAkC,CAACA,KAAD,CAAlC,CAAjB,CAEA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,4KAEbhB,mBAAmB,CAAC,CAAEiB,KAAK,CAAEN,IAAT,CAAeF,KAAK,CAALA,KAAf,CAAD,CAFN,SAInBJ,SAAS,CAACa,QAAV,CAAmB,uBAAnB,CAA4C,CACxCC,MAAM,CAAE,MADgC,CAExCC,OAAO,CAAE,uBAF+B,CAA5C,EAJmB,qEAAvB,CAUA,MACI,MAAC,IAAD,EAAM,KAAK,CAAEjB,MAAM,CAACkB,SAApB,UACKP,QAAQ,CAAG,KAAC,KAAD,IAAH,CACL,MAAC,IAAD,EAAM,KAAK,CAAEX,MAAM,CAACmB,OAApB,WACI,KAAC,kBAAD,EAAoB,QAAQ,CAAEZ,QAA9B,CAAwC,OAAO,CAAEE,OAAjD,EADJ,CAEI,KAAC,mBAAD,EACI,IAAI,CAAED,IADV,CAEI,UAAU,CAAEK,cAFhB,CAGI,eAAe,CAAEP,KAHrB,EAFJ,GAFR,EADJ,CAaH,CA9BD,CAgCA,cAAeH,CAAAA,qBAAf","sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport { COLORS } from '../constants/colors';\nimport useDimensions from '../hooks/useDimensions';\nimport { generateImagesAsync } from '../utils/processImage';\nimport SplashscreenConfig from './SplashscreenConfig';\nimport SplashscreenPreview from './SplashscreenPreview';\nimport { styles } from '../Style';\nimport Empty from './Empty';\nimport * as Analytics from 'expo-firebase-analytics';\n\n\nconst SplashscreenContainer = () => {\n    const [color, setColor] = React.useState(COLORS.secondary);\n    const [logo, setLogo] = React.useState(null);\n    const { width } = useDimensions();\n\n    const isMobile = React.useMemo(() => width < 1000, [width])\n\n    const downloadSplash = async () => {\n\n        await generateImagesAsync({ image: logo, color });\n\n        Analytics.logEvent('DOWNLOAD_SPLASHSCREEN', {\n            screen: 'home',\n            purpose: 'Download splashscreen',\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            {isMobile ? <Empty /> :\n                <View style={styles.content}>\n                    <SplashscreenConfig setColor={setColor} setLogo={setLogo} />\n                    <SplashscreenPreview\n                        logo={logo}\n                        onDownload={downloadSplash}\n                        backgroundColor={color}\n                    />\n                </View>}\n        </View>\n    );\n}\n\nexport default SplashscreenContainer\n\n"]},"metadata":{},"sourceType":"module"}