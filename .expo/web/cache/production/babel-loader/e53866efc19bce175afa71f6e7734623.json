{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";import InternalAnimatedValue from\"./InternalAnimatedValue\";var AnimatedBlock=function(_AnimatedNode){_inherits(AnimatedBlock,_AnimatedNode);var _super=_createSuper(AnimatedBlock);function AnimatedBlock(array){var _this;_classCallCheck(this,AnimatedBlock);invariant(array.every(function(el){return el instanceof AnimatedNode;}),\"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");_this=_super.call(this,{type:'block',block:array},array);_this._array=array;return _this;}_createClass(AnimatedBlock,[{key:\"toString\",value:function toString(){return\"AnimatedBlock, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){var result;this._array.forEach(function(node){result=val(node);});return result;}}]);return AnimatedBlock;}(AnimatedNode);export function createAnimatedBlock(items){return adapt(items);}function nodify(v){if(typeof v==='object'&&v!=null&&v.__isProxy){if(!v.__val){v.__val=new InternalAnimatedValue(0);}return v.__val;}return v instanceof AnimatedNode?v:InternalAnimatedValue.valueForConstant(v);}export function adapt(v){return Array.isArray(v)?new AnimatedBlock(v.map(function(node){return adapt(node);})):nodify(v);}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","array","every","el","type","block","_array","__nodeID","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"mappings":"qgCAAA,MAAOA,CAAAA,SAAP,KAAsB,WAAtB,CACA,OAASC,GAAT,cACA,MAAOC,CAAAA,YAAP,sBACA,MAAOC,CAAAA,qBAAP,+B,GAEMC,CAAAA,a,uGAGJ,uBAAYC,KAAZ,CAAmB,+CACjBL,SAAS,CACPK,KAAK,CAACC,KAAN,CAAY,SAACC,EAAD,QAAQA,CAAAA,EAAE,WAAYL,CAAAA,YAAtB,EAAZ,CADO,6IAAT,CAIA,uBAAM,CAAEM,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEJ,KAAxB,CAAN,CAAuCA,KAAvC,EACA,MAAKK,MAAL,CAAcL,KAAd,CANiB,aAOlB,C,kDAED,mBAAW,CACT,4BAA6B,KAAKM,QAAlC,CACD,C,4BAED,uBAAe,CACb,GAAIC,CAAAA,MAAJ,CACA,KAAKF,MAAL,CAAYG,OAAZ,CAAoB,SAACC,IAAD,CAAU,CAC5BF,MAAM,CAAGX,GAAG,CAACa,IAAD,CAAZ,CACD,CAFD,EAGA,MAAOF,CAAAA,MAAP,CACD,C,2BAtByBV,Y,EAyB5B,MAAO,SAASa,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACzC,MAAOC,CAAAA,KAAK,CAACD,KAAD,CAAZ,CACD,CAED,QAASE,CAAAA,MAAT,CAAgBC,CAAhB,CAAmB,CACjB,GAAI,MAAOA,CAAAA,CAAP,GAAa,QAAb,EAAyBA,CAAzB,QAAyBA,CAAC,CAAEC,SAAhC,CAA2C,CACzC,GAAI,CAACD,CAAC,CAACE,KAAP,CAAc,CACZF,CAAC,CAACE,KAAF,CAAU,GAAIlB,CAAAA,qBAAJ,CAA0B,CAA1B,CAAV,CACD,CACD,MAAOgB,CAAAA,CAAC,CAACE,KAAT,CACD,CAED,MAAOF,CAAAA,CAAC,WAAYjB,CAAAA,YAAb,CACHiB,CADG,CAEHhB,qBAAqB,CAACmB,gBAAtB,CAAuCH,CAAvC,CAFJ,CAGD,CAED,MAAO,SAASF,CAAAA,KAAT,CAAeE,CAAf,CAAkB,CACvB,MAAOI,CAAAA,KAAK,CAACC,OAAN,CAAcL,CAAd,EACH,GAAIf,CAAAA,aAAJ,CAAkBe,CAAC,CAACM,GAAF,CAAM,SAACX,IAAD,QAAUG,CAAAA,KAAK,CAACH,IAAD,CAAf,EAAN,CAAlB,CADG,CAEHI,MAAM,CAACC,CAAD,CAFV,CAGD","sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"]},"metadata":{},"sourceType":"module"}