{"ast":null,"code":"function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{defineAnimation}from\"./util\";import{withTiming}from\"./timing\";import{ColorProperties}from\"../UpdateProps\";import{processColor}from\"../Colors\";export var resolvePath=function(){var _f=function _f(obj,path){var keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);};_f._closure={};_f.asString=\"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";_f.__workletHash=6802843237952;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (7:7)\";global.__reanimatedWorkletInit(_f);return _f;}();export var setPath=function(){var _f=function _f(obj,path,value){var keys=Array.isArray(path)?path:[path];var currObj=obj;for(var i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;};_f._closure={};_f.asString=\"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";_f.__workletHash=16252556056779;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (20:7)\";global.__reanimatedWorkletInit(_f);return _f;}();export var withStyleAnimation=function(){var _f=function _f(styleAnimations){return defineAnimation({},function(){var _f=function _f(){var onFrame=function onFrame(animation,now){var stillGoing=false;var entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(var _i=0,_Object$keys=Object.keys(currentEntry.value);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}var finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};var onStart=function onStart(animation,value,now,previousAnimation){var entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(var _i2=0,_Object$keys2=Object.keys(currentEntry.value);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);var prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);var currentAnimation=void 0;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};var callback=function callback(finished){if(!finished){var animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){var currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(var _iterator=_createForOfIteratorHelperLoose(currentAnimation),_step;!(_step=_iterator()).done;){var element=_step.value;animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(var _i3=0,_Object$values=Object.values(currentAnimation);_i3<_Object$values.length;_i3++){var value=_Object$values[_i3];animationsToCheck.push(value);}}else{var currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};};_f._closure={ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,styleAnimations:styleAnimations,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";_f.__workletHash=9887536897803;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (42:31)\";global.__reanimatedWorkletInit(_f);return _f;}());};_f._closure={defineAnimation:defineAnimation,ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";_f.__workletHash=15006684130601;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (40:7)\";global.__reanimatedWorkletInit(_f);return _f;}();","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"names":["defineAnimation","withTiming","ColorProperties","processColor","resolvePath","obj","path","keys","Array","isArray","reduce","acc","current","undefined","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","Object","key","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder"],"mappings":"2iCAAA,OAASA,eAAT,cACA,OAASC,UAAT,gBACA,OAASC,eAAT,sBACA,OAASC,YAAT,iBAGA,UAAgBC,CAAAA,WAAhB,+BAA4BC,GAA5B,CAAiCC,IAAjC,CAAuC,CAEnC,GAAMC,CAAAA,IAAI,CAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,EAAsBA,IAAtB,CAA6B,CAACA,IAAD,CAA1C,CACA,MAAOC,CAAAA,IAAI,CAACG,MAAL,CAAY,SAACC,GAAD,CAAMC,OAAN,CAAkB,CACjC,GAAIJ,KAAK,CAACC,OAAN,CAAcE,GAAd,GAAsB,MAAOC,CAAAA,OAAP,GAAmB,QAA7C,CAAuD,CACnD,MAAOD,CAAAA,GAAG,CAACC,OAAD,CAAV,CACH,CAFD,IAGK,IAAI,MAAOD,CAAAA,GAAP,GAAe,QAAf,EAA2BC,OAAO,GAAID,CAAAA,GAA1C,CAA+C,CAChD,MAAOA,CAAAA,GAAG,CAACC,OAAD,CAAV,CACH,CACD,MAAOC,CAAAA,SAAP,CACH,CARM,CAQJR,GARI,CAAP,CASH,CAZD,oiBAaA,UAAgBS,CAAAA,OAAhB,+BAAwBT,GAAxB,CAA6BC,IAA7B,CAAmCS,KAAnC,CAA0C,CAEtC,GAAMR,CAAAA,IAAI,CAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,EAAsBA,IAAtB,CAA6B,CAACA,IAAD,CAA1C,CACA,GAAIU,CAAAA,OAAO,CAAGX,GAAd,CACA,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGV,IAAI,CAACW,MAAL,CAAc,CAAlC,CAAqCD,CAAC,EAAtC,CAA0C,CAEtCD,OAAO,CAAGA,OAAV,CACA,GAAI,CAACA,OAAO,CAACT,IAAI,CAACU,CAAD,CAAL,CAAZ,CAAuB,CAEnB,GAAI,MAAOV,CAAAA,IAAI,CAACU,CAAC,CAAG,CAAL,CAAX,GAAuB,QAA3B,CAAqC,CACjCD,OAAO,CAACT,IAAI,CAACU,CAAD,CAAL,CAAP,CAAmB,EAAnB,CACH,CAFD,IAGK,CACDD,OAAO,CAACT,IAAI,CAACU,CAAD,CAAL,CAAP,CAAmB,EAAnB,CACH,CACJ,CACDD,OAAO,CAAGA,OAAO,CAACT,IAAI,CAACU,CAAD,CAAL,CAAjB,CACH,CACDD,OAAO,CAACT,IAAI,CAACA,IAAI,CAACW,MAAL,CAAc,CAAf,CAAL,CAAP,CAAiCH,KAAjC,CACH,CAnBD,gkBAoBA,UAAgBI,CAAAA,kBAAhB,+BAAmCC,eAAnC,CAAoD,CAEhD,MAAOpB,CAAAA,eAAe,CAAC,EAAD,gCAAW,CAE7B,GAAMqB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,GAAZ,CAAoB,CAChC,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,CACnB,CAAEV,KAAK,CAAEO,SAAS,CAACF,eAAnB,CAAoCd,IAAI,CAAE,EAA1C,CADmB,CAAvB,CAGA,MAAOmB,cAAc,CAACP,MAAf,CAAwB,CAA/B,CAAkC,CAC9B,GAAMQ,CAAAA,YAAY,CAAGD,cAAc,CAACE,GAAf,EAArB,CACA,GAAInB,KAAK,CAACC,OAAN,CAAciB,YAAY,CAACX,KAA3B,CAAJ,CAAuC,CACnC,IAAK,GAAIa,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGF,YAAY,CAACX,KAAb,CAAmBG,MAA/C,CAAuDU,KAAK,EAA5D,CAAgE,CAC5DH,cAAc,CAACI,IAAf,CAAoB,CAChBd,KAAK,CAAEW,YAAY,CAACX,KAAb,CAAmBa,KAAnB,CADS,CAEhBtB,IAAI,CAAEoB,YAAY,CAACpB,IAAb,CAAkBwB,MAAlB,CAAyBF,KAAzB,CAFU,CAApB,EAIH,CACJ,CAPD,IAQK,IAAI,MAAOF,CAAAA,YAAY,CAACX,KAApB,GAA8B,QAA9B,EACLW,YAAY,CAACX,KAAb,CAAmBM,OAAnB,GAA+BR,SAD9B,CACyC,CAE1C,0BAAkBkB,MAAM,CAACxB,IAAP,CAAYmB,YAAY,CAACX,KAAzB,CAAlB,6BAAmD,CAA9C,GAAMiB,CAAAA,GAAG,iBAAT,CACDP,cAAc,CAACI,IAAf,CAAoB,CAChBd,KAAK,CAAEW,YAAY,CAACX,KAAb,CAAmBiB,GAAnB,CADS,CAEhB1B,IAAI,CAAEoB,YAAY,CAACpB,IAAb,CAAkBwB,MAAlB,CAAyBE,GAAzB,CAFU,CAApB,EAIH,CACJ,CATI,IAUA,CACD,GAAMC,CAAAA,qBAAqB,CAAGP,YAAY,CAACX,KAA3C,CACA,GAAIkB,qBAAqB,CAACC,QAA1B,CAAoC,CAChC,SACH,CACD,GAAMA,CAAAA,QAAQ,CAAGD,qBAAqB,CAACZ,OAAtB,CAA8BY,qBAA9B,CAAqDV,GAArD,CAAjB,CACA,GAAIW,QAAJ,CAAc,CACVD,qBAAqB,CAACC,QAAtB,CAAiC,IAAjC,CACA,GAAID,qBAAqB,CAACE,QAA1B,CAAoC,CAChCF,qBAAqB,CAACE,QAAtB,CAA+B,IAA/B,EACH,CACJ,CALD,IAMK,CACDX,UAAU,CAAG,IAAb,CACH,CACD,GAAItB,eAAe,CAACkC,QAAhB,CAAyBV,YAAY,CAACpB,IAAb,CAAkB,CAAlB,CAAzB,CAAJ,CAAoD,CAChD2B,qBAAqB,CAACrB,OAAtB,CAAgCT,YAAY,CAAC8B,qBAAqB,CAACrB,OAAvB,CAA5C,CACH,CACDE,OAAO,CAACQ,SAAS,CAACV,OAAX,CAAoBc,YAAY,CAACpB,IAAjC,CAAuC2B,qBAAqB,CAACrB,OAA7D,CAAP,CACH,CACJ,CACD,MAAO,CAACY,UAAR,CACH,CA/CD,CAgDA,GAAMa,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACf,SAAD,CAAYP,KAAZ,CAAmBQ,GAAnB,CAAwBe,iBAAxB,CAA8C,CAC1D,GAAMb,CAAAA,cAAc,CAAG,CAAC,CAAEV,KAAK,CAAEK,eAAT,CAA0Bd,IAAI,CAAE,EAAhC,CAAD,CAAvB,CACA,MAAOmB,cAAc,CAACP,MAAf,CAAwB,CAA/B,CAAkC,CAC9B,GAAMQ,CAAAA,YAAY,CAAGD,cAAc,CAACE,GAAf,EAArB,CACA,GAAInB,KAAK,CAACC,OAAN,CAAciB,YAAY,CAACX,KAA3B,CAAJ,CAAuC,CACnC,IAAK,GAAIa,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGF,YAAY,CAACX,KAAb,CAAmBG,MAA/C,CAAuDU,KAAK,EAA5D,CAAgE,CAC5DH,cAAc,CAACI,IAAf,CAAoB,CAChBd,KAAK,CAAEW,YAAY,CAACX,KAAb,CAAmBa,KAAnB,CADS,CAEhBtB,IAAI,CAAEoB,YAAY,CAACpB,IAAb,CAAkBwB,MAAlB,CAAyBF,KAAzB,CAFU,CAApB,EAIH,CACJ,CAPD,IAQK,IAAI,MAAOF,CAAAA,YAAY,CAACX,KAApB,GAA8B,QAA9B,EACLW,YAAY,CAACX,KAAb,CAAmBsB,OAAnB,GAA+BxB,SAD9B,CACyC,CAC1C,4BAAkBkB,MAAM,CAACxB,IAAP,CAAYmB,YAAY,CAACX,KAAzB,CAAlB,gCAAmD,CAA9C,GAAMiB,CAAAA,GAAG,mBAAT,CACDP,cAAc,CAACI,IAAf,CAAoB,CAChBd,KAAK,CAAEW,YAAY,CAACX,KAAb,CAAmBiB,GAAnB,CADS,CAEhB1B,IAAI,CAAEoB,YAAY,CAACpB,IAAb,CAAkBwB,MAAlB,CAAyBE,GAAzB,CAFU,CAApB,EAIH,CACJ,CARI,IASA,CACD,GAAMO,CAAAA,aAAa,CAAGnC,WAAW,CAACkC,iBAAiB,GAAK,IAAtB,EAA8BA,iBAAiB,GAAK,IAAK,EAAzD,CAA6D,IAAK,EAAlE,CAAsEA,iBAAiB,CAAClB,eAAzF,CAA0GM,YAAY,CAACpB,IAAvH,CAAjC,CACA,GAAIkC,CAAAA,OAAO,CAAGpC,WAAW,CAACW,KAAD,CAAQW,YAAY,CAACpB,IAArB,CAAzB,CACA,GAAIiC,aAAa,EAAI,CAACC,OAAtB,CAA+B,CAC3BA,OAAO,CAAGD,aAAa,CAAC3B,OAAxB,CACH,CACDE,OAAO,CAACQ,SAAS,CAACV,OAAX,CAAoBc,YAAY,CAACpB,IAAjC,CAAuCkC,OAAvC,CAAP,CACA,GAAIC,CAAAA,gBAAgB,OAApB,CACA,GAAI,MAAOf,CAAAA,YAAY,CAACX,KAApB,GAA8B,QAA9B,EACA,CAACW,YAAY,CAACX,KAAb,CAAmBsB,OADxB,CACiC,CAC7BI,gBAAgB,CAAGxC,UAAU,CAACyB,YAAY,CAACX,KAAd,CAAqB,CAAE2B,QAAQ,CAAE,CAAZ,CAArB,CAA7B,CACA5B,OAAO,CAACQ,SAAS,CAACF,eAAX,CAA4BM,YAAY,CAACpB,IAAzC,CAA+CmC,gBAA/C,CAAP,CACH,CAJD,IAKK,CACDA,gBAAgB,CAAGf,YAAY,CAACX,KAAhC,CACH,CACD0B,gBAAgB,CAACJ,OAAjB,CAAyBI,gBAAzB,CAA2CD,OAA3C,CAAoDjB,GAApD,CAAyDgB,aAAzD,EACH,CACJ,CACJ,CAxCD,CAyCA,GAAMJ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACD,QAAD,CAAc,CAC3B,GAAI,CAACA,QAAL,CAAe,CACX,GAAMS,CAAAA,iBAAiB,CAAG,CACtBvB,eADsB,CAA1B,CAGA,MAAOuB,iBAAiB,CAACzB,MAAlB,CAA2B,CAAlC,CAAqC,CACjC,GAAMuB,CAAAA,gBAAgB,CAAGE,iBAAiB,CAAChB,GAAlB,EAAzB,CACA,GAAInB,KAAK,CAACC,OAAN,CAAcgC,gBAAd,CAAJ,CAAqC,CACjC,kDAAsBA,gBAAtB,mCAAwC,IAA7BG,CAAAA,OAA6B,aACpCD,iBAAiB,CAACd,IAAlB,CAAuBe,OAAvB,EACH,CACJ,CAJD,IAKK,IAAI,MAAOH,CAAAA,gBAAP,GAA4B,QAA5B,EACLA,gBAAgB,CAACJ,OAAjB,GAA6BxB,SAD5B,CACuC,CACxC,6BAAoBkB,MAAM,CAACc,MAAP,CAAcJ,gBAAd,CAApB,iCAAqD,CAAhD,GAAM1B,CAAAA,KAAK,oBAAX,CACD4B,iBAAiB,CAACd,IAAlB,CAAuBd,KAAvB,EACH,CACJ,CALI,IAMA,CACD,GAAMkB,CAAAA,qBAAqB,CAAGQ,gBAA9B,CACA,GAAI,CAACR,qBAAqB,CAACC,QAAvB,EACAD,qBAAqB,CAACE,QAD1B,CACoC,CAChCF,qBAAqB,CAACE,QAAtB,CAA+B,KAA/B,EACH,CACJ,CACJ,CACJ,CACJ,CA3BD,CA4BA,MAAO,CACHW,aAAa,CAAE,IADZ,CAEHzB,OAAO,CAAPA,OAFG,CAGHgB,OAAO,CAAPA,OAHG,CAIHzB,OAAO,CAAE,EAJN,CAKHQ,eAAe,CAAfA,eALG,CAMHe,QAAQ,CAARA,QANG,CAAP,CAQH,CA/HqB,8BAKdjC,eALc,cAMgBC,YANhB,SAsDhBW,OAtDgB,iBA+FtBM,eA/FsB,aAyCJhB,WAzCI,YAmDGH,UAnDH,46GAAtB,CAgIH,CAlID,8BArCSD,eAqCT,iBAUcE,eAVd,cAW4CC,YAX5C,SA2DYW,OA3DZ,aA8CwBV,WA9CxB,YAwD+BH,UAxD/B","sourcesContent":["import { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport function resolvePath(obj, path) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    return keys.reduce((acc, current) => {\n        if (Array.isArray(acc) && typeof current === 'number') {\n            return acc[current];\n        }\n        else if (typeof acc === 'object' && current in acc) {\n            return acc[current];\n        }\n        return undefined;\n    }, obj);\n}\nexport function setPath(obj, path, value) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    let currObj = obj;\n    for (let i = 0; i < keys.length - 1; i++) {\n        // creates entry if there isn't one\n        currObj = currObj;\n        if (!currObj[keys[i]]) {\n            // if next key is a number create an array\n            if (typeof keys[i + 1] === 'number') {\n                currObj[keys[i]] = [];\n            }\n            else {\n                currObj[keys[i]] = {};\n            }\n        }\n        currObj = currObj[keys[i]];\n    }\n    currObj[keys[keys.length - 1]] = value;\n}\nexport function withStyleAnimation(styleAnimations) {\n    'worklet';\n    return defineAnimation({}, () => {\n        'worklet';\n        const onFrame = (animation, now) => {\n            let stillGoing = false;\n            const entriesToCheck = [\n                { value: animation.styleAnimations, path: [] },\n            ];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onFrame === undefined) {\n                    // nested object\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const currentStyleAnimation = currentEntry.value;\n                    if (currentStyleAnimation.finished) {\n                        continue;\n                    }\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n                    if (finished) {\n                        currentStyleAnimation.finished = true;\n                        if (currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(true);\n                        }\n                    }\n                    else {\n                        stillGoing = true;\n                    }\n                    if (ColorProperties.includes(currentEntry.path[0])) {\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n                    }\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n                }\n            }\n            return !stillGoing;\n        };\n        const onStart = (animation, value, now, previousAnimation) => {\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onStart === undefined) {\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n                    let prevVal = resolvePath(value, currentEntry.path);\n                    if (prevAnimation && !prevVal) {\n                        prevVal = prevAnimation.current;\n                    }\n                    setPath(animation.current, currentEntry.path, prevVal);\n                    let currentAnimation;\n                    if (typeof currentEntry.value !== 'object' ||\n                        !currentEntry.value.onStart) {\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n                    }\n                    else {\n                        currentAnimation = currentEntry.value;\n                    }\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n                }\n            }\n        };\n        const callback = (finished) => {\n            if (!finished) {\n                const animationsToCheck = [\n                    styleAnimations,\n                ];\n                while (animationsToCheck.length > 0) {\n                    const currentAnimation = animationsToCheck.pop();\n                    if (Array.isArray(currentAnimation)) {\n                        for (const element of currentAnimation) {\n                            animationsToCheck.push(element);\n                        }\n                    }\n                    else if (typeof currentAnimation === 'object' &&\n                        currentAnimation.onStart === undefined) {\n                        for (const value of Object.values(currentAnimation)) {\n                            animationsToCheck.push(value);\n                        }\n                    }\n                    else {\n                        const currentStyleAnimation = currentAnimation;\n                        if (!currentStyleAnimation.finished &&\n                            currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(false);\n                        }\n                    }\n                }\n            }\n        };\n        return {\n            isHigherOrder: true,\n            onFrame,\n            onStart,\n            current: {},\n            styleAnimations,\n            callback,\n        };\n    });\n}\n"]},"metadata":{},"sourceType":"module"}