{"ast":null,"code":"export var Bezier=function(){var _f=function _f(mX1,mY1,mX2,mY2){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var A=function(){var _f=function _f(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;};_f._closure={};_f.asString=\"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\";_f.__workletHash=7696928702327;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (15:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var B=function(){var _f=function _f(aA1,aA2){return 3.0*aA2-6.0*aA1;};_f._closure={};_f.asString=\"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\";_f.__workletHash=3169786778773;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (19:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var C=function(){var _f=function _f(aA1){return 3.0*aA1;};_f._closure={};_f.asString=\"function C(aA1){return 3.0*aA1;}\";_f.__workletHash=6399610653367;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (23:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var calcBezier=function(){var _f=function _f(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;};_f._closure={A:A,B:B,C:C};_f.asString=\"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\";_f.__workletHash=3153137150968;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (28:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var getSlope=function(){var _f=function _f(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);};_f._closure={A:A,B:B,C:C};_f.asString=\"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\";_f.__workletHash=17050227570308;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (33:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var binarySubdivide=function(){var _f=function _f(aX,aA,aB,mX1,mX2){var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;};_f._closure={SUBDIVISION_PRECISION:SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS:SUBDIVISION_MAX_ITERATIONS,calcBezier:calcBezier};_f.asString=\"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\";_f.__workletHash=7302972877011;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (37:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var newtonRaphsonIterate=function(){var _f=function _f(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;};_f._closure={NEWTON_ITERATIONS:NEWTON_ITERATIONS,getSlope:getSlope,calcBezier:calcBezier};_f.asString=\"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\";_f.__workletHash=10378506933532;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (55:4)\";global.__reanimatedWorkletInit(_f);return _f;}();var LinearEasing=function(){var _f=function _f(x){return x;};_f._closure={};_f.asString=\"function LinearEasing(x){return x;}\";_f.__workletHash=3962143445177;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (67:4)\";global.__reanimatedWorkletInit(_f);return _f;}();if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}var sampleValues=new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}var getTForX=function(){var _f=function _f(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};_f._closure={kSplineTableSize:kSplineTableSize,sampleValues:sampleValues,kSampleStepSize:kSampleStepSize,getSlope:getSlope,mX1:mX1,mX2:mX2,NEWTON_MIN_SLOPE:NEWTON_MIN_SLOPE,newtonRaphsonIterate:newtonRaphsonIterate,binarySubdivide:binarySubdivide};_f.asString=\"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\";_f.__workletHash=3164695138880;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (88:4)\";global.__reanimatedWorkletInit(_f);return _f;}();return function(){var _f=function _f(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};_f._closure={mX1:mX1,mY1:mY1,mX2:mX2,mY2:mY2,calcBezier:calcBezier,getTForX:getTForX};_f.asString=\"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\";_f.__workletHash=8676971518933;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (112:11)\";global.__reanimatedWorkletInit(_f);return _f;}();};_f._closure={};_f.asString=\"function Bezier(mX1,mY1,mX2,mY2){const NEWTON_ITERATIONS=4;const NEWTON_MIN_SLOPE=0.001;const SUBDIVISION_PRECISION=0.0000001;const SUBDIVISION_MAX_ITERATIONS=10;const kSplineTableSize=11;const kSampleStepSize=1.0/(kSplineTableSize-1.0);function A(aA1,aA2){'worklet';return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){'worklet';return 3.0*aA2-6.0*aA1;}function C(aA1){'worklet';return 3.0*aA1;}function calcBezier(aT,aA1,aA2){'worklet';return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}function getSlope(aT,aA1,aA2){'worklet';return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){'worklet';let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){'worklet';for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}function LinearEasing(x){'worklet';return x;}if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}const sampleValues=new Array(kSplineTableSize);for(let i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}function getTForX(aX){'worklet';let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function BezierEasing(x){'worklet';if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};}\";_f.__workletHash=7389715548968;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js (7:7)\";global.__reanimatedWorkletInit(_f);return _f;}();","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js"],"names":["Bezier","mX1","mY1","mX2","mY2","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope"],"mappings":"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","sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nexport function Bezier(mX1, mY1, mX2, mY2) {\n    'worklet';\n    const NEWTON_ITERATIONS = 4;\n    const NEWTON_MIN_SLOPE = 0.001;\n    const SUBDIVISION_PRECISION = 0.0000001;\n    const SUBDIVISION_MAX_ITERATIONS = 10;\n    const kSplineTableSize = 11;\n    const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    function A(aA1, aA2) {\n        'worklet';\n        return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n    function B(aA1, aA2) {\n        'worklet';\n        return 3.0 * aA2 - 6.0 * aA1;\n    }\n    function C(aA1) {\n        'worklet';\n        return 3.0 * aA1;\n    }\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n        'worklet';\n        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n        'worklet';\n        return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n        'worklet';\n        let currentX;\n        let currentT;\n        let i = 0;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            }\n            else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION &&\n            ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n        'worklet';\n        for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n            const currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    }\n    function LinearEasing(x) {\n        'worklet';\n        return x;\n    }\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new Error('bezier x values must be in [0, 1] range');\n    }\n    if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n    }\n    // FIXME: Float32Array is not available in Hermes right now\n    //\n    // var float32ArraySupported = typeof Float32Array === 'function';\n    // const sampleValues = float32ArraySupported\n    // ? new Float32Array(kSplineTableSize)\n    // : new Array(kSplineTableSize);\n    // Precompute samples table\n    const sampleValues = new Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        'worklet';\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        // Interpolate to provide an initial guess for t\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function BezierEasing(x) {\n        'worklet';\n        if (mX1 === mY1 && mX2 === mY2) {\n            return x; // linear\n        }\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) {\n            return 0;\n        }\n        if (x === 1) {\n            return 1;\n        }\n        return calcBezier(getTForX(x), mY1, mY2);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}