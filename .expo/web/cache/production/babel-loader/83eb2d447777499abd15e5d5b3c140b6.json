{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import{add,cond,concat,lessThan,multiply,round,sub,proc}from\"../base\";import AnimatedNode from\"../core/AnimatedNode\";var procColor=proc(function(r,g,b,a){var color=add(multiply(a,1<<24),multiply(round(r),1<<16),multiply(round(g),1<<8),round(b));if(Platform.OS==='android'){return cond(lessThan(color,1<<31>>>0),color,sub(color,Math.pow(2,32)));}return color;});export default function color(r,g,b){var a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(Platform.OS==='web'){return concat('rgba(',r,',',g,',',b,',',a,')');}if(a instanceof AnimatedNode){a=round(multiply(a,255));}else{a=Math.round(a*255);}return procColor(r,g,b,a);}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/derived/color.js"],"names":["add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","Platform","OS","Math","pow"],"mappings":"6DAEA,OACEA,GADF,CAEEC,IAFF,CAGEC,MAHF,CAIEC,QAJF,CAKEC,QALF,CAMEC,KANF,CAOEC,GAPF,CAQEC,IARF,eAUA,MAAOC,CAAAA,YAAP,4BAEA,GAAMC,CAAAA,SAAS,CAAGF,IAAI,CAAC,SAAUG,CAAV,CAAaC,CAAb,CAAgBC,CAAhB,CAAmBC,CAAnB,CAAsB,CAC3C,GAAMC,CAAAA,KAAK,CAAGd,GAAG,CACfI,QAAQ,CAACS,CAAD,CAAI,GAAK,EAAT,CADO,CAEfT,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,CAAW,GAAK,EAAhB,CAFO,CAGfN,QAAQ,CAACC,KAAK,CAACM,CAAD,CAAN,CAAW,GAAK,CAAhB,CAHO,CAIfN,KAAK,CAACO,CAAD,CAJU,CAAjB,CAOA,GAAIG,QAAQ,CAACC,EAAT,GAAgB,SAApB,CAA+B,CAE7B,MAAOf,CAAAA,IAAI,CACTE,QAAQ,CAACW,KAAD,CAAS,GAAK,EAAN,GAAc,CAAtB,CADC,CAETA,KAFS,CAGTR,GAAG,CAACQ,KAAD,CAAQG,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAR,CAHM,CAAX,CAKD,CACD,MAAOJ,CAAAA,KAAP,CACD,CAjBqB,CAAtB,CAmBA,cAAe,SAASA,CAAAA,KAAT,CAAeJ,CAAf,CAAkBC,CAAlB,CAAqBC,CAArB,CAA+B,IAAPC,CAAAA,CAAO,2DAAH,CAAG,CAC5C,GAAIE,QAAQ,CAACC,EAAT,GAAgB,KAApB,CAA2B,CAEzB,MAAOd,CAAAA,MAAM,CAAC,OAAD,CAAUQ,CAAV,CAAa,GAAb,CAAkBC,CAAlB,CAAqB,GAArB,CAA0BC,CAA1B,CAA6B,GAA7B,CAAkCC,CAAlC,CAAqC,GAArC,CAAb,CACD,CAED,GAAIA,CAAC,WAAYL,CAAAA,YAAjB,CAA+B,CAC7BK,CAAC,CAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,CAAI,GAAJ,CAAT,CAAT,CACD,CAFD,IAEO,CACLA,CAAC,CAAGI,IAAI,CAACZ,KAAL,CAAWQ,CAAC,CAAG,GAAf,CAAJ,CACD,CAED,MAAOJ,CAAAA,SAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAhB,CACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  add,\n  cond,\n  concat,\n  lessThan,\n  multiply,\n  round,\n  sub,\n  proc,\n} from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function (r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n\n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"module"}