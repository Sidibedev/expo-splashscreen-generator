{"ast":null,"code":"import{cond,sub,pow,divide,multiply,add,block,set,lessThan,proc,abs}from\"../base\";var VELOCITY_EPS=5;function decay(clock,state,config){var lastTime=cond(state.time,state.time,clock);var deltaTime=sub(clock,lastTime);var kv=pow(config.deceleration,deltaTime);var kx=divide(multiply(config.deceleration,sub(1,kv)),sub(1,config.deceleration));var v0=divide(state.velocity,1000);var v=multiply(v0,kv,1000);var x=add(state.position,multiply(v0,kx));return block([set(state.position,x),set(state.velocity,v),set(state.time,clock),cond(lessThan(abs(v),VELOCITY_EPS),set(state.finished,1))]);}var procDecay=proc(function(clock,time,velocity,position,finished,deceleration){return decay(clock,{time:time,velocity:velocity,position:position,finished:finished},{deceleration:deceleration});});export default function decayAnimation(clock,_ref,_ref2){var time=_ref.time,velocity=_ref.velocity,position=_ref.position,finished=_ref.finished;var deceleration=_ref2.deceleration;return procDecay(clock,time,velocity,position,finished,deceleration);}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/animations/decay.js"],"names":["cond","sub","pow","divide","multiply","add","block","set","lessThan","proc","abs","VELOCITY_EPS","decay","clock","state","config","lastTime","time","deltaTime","kv","deceleration","kx","v0","velocity","v","x","position","finished","procDecay","decayAnimation"],"mappings":"AAAA,OACEA,IADF,CAEEC,GAFF,CAGEC,GAHF,CAIEC,MAJF,CAKEC,QALF,CAMEC,GANF,CAOEC,KAPF,CAQEC,GARF,CASEC,QATF,CAUEC,IAVF,CAWEC,GAXF,eAcA,GAAMC,CAAAA,YAAY,CAAG,CAArB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6BC,MAA7B,CAAqC,CACnC,GAAMC,CAAAA,QAAQ,CAAGhB,IAAI,CAACc,KAAK,CAACG,IAAP,CAAaH,KAAK,CAACG,IAAnB,CAAyBJ,KAAzB,CAArB,CACA,GAAMK,CAAAA,SAAS,CAAGjB,GAAG,CAACY,KAAD,CAAQG,QAAR,CAArB,CAQA,GAAMG,CAAAA,EAAE,CAAGjB,GAAG,CAACa,MAAM,CAACK,YAAR,CAAsBF,SAAtB,CAAd,CACA,GAAMG,CAAAA,EAAE,CAAGlB,MAAM,CACfC,QAAQ,CAACW,MAAM,CAACK,YAAR,CAAsBnB,GAAG,CAAC,CAAD,CAAIkB,EAAJ,CAAzB,CADO,CAEflB,GAAG,CAAC,CAAD,CAAIc,MAAM,CAACK,YAAX,CAFY,CAAjB,CAIA,GAAME,CAAAA,EAAE,CAAGnB,MAAM,CAACW,KAAK,CAACS,QAAP,CAAiB,IAAjB,CAAjB,CACA,GAAMC,CAAAA,CAAC,CAAGpB,QAAQ,CAACkB,EAAD,CAAKH,EAAL,CAAS,IAAT,CAAlB,CACA,GAAMM,CAAAA,CAAC,CAAGpB,GAAG,CAACS,KAAK,CAACY,QAAP,CAAiBtB,QAAQ,CAACkB,EAAD,CAAKD,EAAL,CAAzB,CAAb,CACA,MAAOf,CAAAA,KAAK,CAAC,CACXC,GAAG,CAACO,KAAK,CAACY,QAAP,CAAiBD,CAAjB,CADQ,CAEXlB,GAAG,CAACO,KAAK,CAACS,QAAP,CAAiBC,CAAjB,CAFQ,CAGXjB,GAAG,CAACO,KAAK,CAACG,IAAP,CAAaJ,KAAb,CAHQ,CAIXb,IAAI,CAACQ,QAAQ,CAACE,GAAG,CAACc,CAAD,CAAJ,CAASb,YAAT,CAAT,CAAiCJ,GAAG,CAACO,KAAK,CAACa,QAAP,CAAiB,CAAjB,CAApC,CAJO,CAAD,CAAZ,CAMD,CAED,GAAMC,CAAAA,SAAS,CAAGnB,IAAI,CACpB,SAACI,KAAD,CAAQI,IAAR,CAAcM,QAAd,CAAwBG,QAAxB,CAAkCC,QAAlC,CAA4CP,YAA5C,QACER,CAAAA,KAAK,CAACC,KAAD,CAAQ,CAAEI,IAAI,CAAJA,IAAF,CAAQM,QAAQ,CAARA,QAAR,CAAkBG,QAAQ,CAARA,QAAlB,CAA4BC,QAAQ,CAARA,QAA5B,CAAR,CAAgD,CAAEP,YAAY,CAAZA,YAAF,CAAhD,CADP,EADoB,CAAtB,CAKA,cAAe,SAASS,CAAAA,cAAT,CACbhB,KADa,YAIb,IAFEI,CAAAA,IAEF,MAFEA,IAEF,CAFQM,QAER,MAFQA,QAER,CAFkBG,QAElB,MAFkBA,QAElB,CAF4BC,QAE5B,MAF4BA,QAE5B,IADEP,CAAAA,YACF,OADEA,YACF,CACA,MAAOQ,CAAAA,SAAS,CAACf,KAAD,CAAQI,IAAR,CAAcM,QAAd,CAAwBG,QAAxB,CAAkCC,QAAlC,CAA4CP,YAA5C,CAAhB,CACD","sourcesContent":["import {\n  cond,\n  sub,\n  pow,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  lessThan,\n  proc,\n  abs,\n} from '../base';\n\nconst VELOCITY_EPS = 5;\n\nfunction decay(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const deltaTime = sub(clock, lastTime);\n\n  // v0 = v / 1000\n  // v = v0 * powf(deceleration, dt);\n  // v = v * 1000;\n\n  // x0 = x;\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\n  const kv = pow(config.deceleration, deltaTime);\n  const kx = divide(\n    multiply(config.deceleration, sub(1, kv)),\n    sub(1, config.deceleration)\n  );\n  const v0 = divide(state.velocity, 1000);\n  const v = multiply(v0, kv, 1000);\n  const x = add(state.position, multiply(v0, kx));\n  return block([\n    set(state.position, x),\n    set(state.velocity, v),\n    set(state.time, clock),\n    cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1)),\n  ]);\n}\n\nconst procDecay = proc(\n  (clock, time, velocity, position, finished, deceleration) =>\n    decay(clock, { time, velocity, position, finished }, { deceleration })\n);\n\nexport default function decayAnimation(\n  clock,\n  { time, velocity, position, finished },\n  { deceleration }\n) {\n  return procDecay(clock, time, velocity, position, finished, deceleration);\n}\n"]},"metadata":{},"sourceType":"module"}