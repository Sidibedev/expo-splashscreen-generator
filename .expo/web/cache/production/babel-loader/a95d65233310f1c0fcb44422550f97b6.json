{"ast":null,"code":"import{cond,sub,divide,multiply,add,block,set,greaterOrEq,proc}from\"../base\";var internalTiming=proc(function(clock,time,frameTime,position,finished,toValue,duration,nextProgress,progress,newFrameTime){var state={time:time,finished:finished,frameTime:frameTime,position:position};var config={duration:duration,toValue:toValue};var distanceLeft=sub(config.toValue,state.position);var fullDistance=divide(distanceLeft,sub(1,progress));var startPosition=sub(config.toValue,fullDistance);var nextPosition=add(startPosition,multiply(fullDistance,nextProgress));return block([cond(greaterOrEq(newFrameTime,config.duration),[set(state.position,config.toValue),set(state.finished,1)],set(state.position,nextPosition)),set(state.frameTime,newFrameTime),set(state.time,clock)]);});export default function timing(clock,state,config){if(config.duration===0){return block([set(state.position,config.toValue),set(state.finished,1)]);}var lastTime=cond(state.time,state.time,clock);var newFrameTime=add(state.frameTime,sub(clock,lastTime));var nextProgress=config.easing(divide(newFrameTime,config.duration));var progress=config.easing(divide(state.frameTime,config.duration));return internalTiming(clock,state.time,state.frameTime,state.position,state.finished,config.toValue,config.duration,nextProgress,progress,newFrameTime);}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/animations/timing.js"],"names":["cond","sub","divide","multiply","add","block","set","greaterOrEq","proc","internalTiming","clock","time","frameTime","position","finished","toValue","duration","nextProgress","progress","newFrameTime","state","config","distanceLeft","fullDistance","startPosition","nextPosition","timing","lastTime","easing"],"mappings":"AAAA,OACEA,IADF,CAEEC,GAFF,CAGEC,MAHF,CAIEC,QAJF,CAKEC,GALF,CAMEC,KANF,CAOEC,GAPF,CAQEC,WARF,CASEC,IATF,eAYA,GAAMC,CAAAA,cAAc,CAAGD,IAAI,CAAC,SAC1BE,KAD0B,CAE1BC,IAF0B,CAG1BC,SAH0B,CAI1BC,QAJ0B,CAK1BC,QAL0B,CAM1BC,OAN0B,CAO1BC,QAP0B,CAQ1BC,YAR0B,CAS1BC,QAT0B,CAU1BC,YAV0B,CAW1B,CACA,GAAMC,CAAAA,KAAK,CAAG,CACZT,IAAI,CAAJA,IADY,CAEZG,QAAQ,CAARA,QAFY,CAGZF,SAAS,CAATA,SAHY,CAIZC,QAAQ,CAARA,QAJY,CAAd,CAOA,GAAMQ,CAAAA,MAAM,CAAG,CACbL,QAAQ,CAARA,QADa,CAEbD,OAAO,CAAPA,OAFa,CAAf,CAKA,GAAMO,CAAAA,YAAY,CAAGrB,GAAG,CAACoB,MAAM,CAACN,OAAR,CAAiBK,KAAK,CAACP,QAAvB,CAAxB,CACA,GAAMU,CAAAA,YAAY,CAAGrB,MAAM,CAACoB,YAAD,CAAerB,GAAG,CAAC,CAAD,CAAIiB,QAAJ,CAAlB,CAA3B,CACA,GAAMM,CAAAA,aAAa,CAAGvB,GAAG,CAACoB,MAAM,CAACN,OAAR,CAAiBQ,YAAjB,CAAzB,CACA,GAAME,CAAAA,YAAY,CAAGrB,GAAG,CAACoB,aAAD,CAAgBrB,QAAQ,CAACoB,YAAD,CAAeN,YAAf,CAAxB,CAAxB,CAEA,MAAOZ,CAAAA,KAAK,CAAC,CACXL,IAAI,CACFO,WAAW,CAACY,YAAD,CAAeE,MAAM,CAACL,QAAtB,CADT,CAEF,CAACV,GAAG,CAACc,KAAK,CAACP,QAAP,CAAiBQ,MAAM,CAACN,OAAxB,CAAJ,CAAsCT,GAAG,CAACc,KAAK,CAACN,QAAP,CAAiB,CAAjB,CAAzC,CAFE,CAGFR,GAAG,CAACc,KAAK,CAACP,QAAP,CAAiBY,YAAjB,CAHD,CADO,CAMXnB,GAAG,CAACc,KAAK,CAACR,SAAP,CAAkBO,YAAlB,CANQ,CAOXb,GAAG,CAACc,KAAK,CAACT,IAAP,CAAaD,KAAb,CAPQ,CAAD,CAAZ,CASD,CAtC0B,CAA3B,CAwCA,cAAe,SAASgB,CAAAA,MAAT,CAAgBhB,KAAhB,CAAuBU,KAAvB,CAA8BC,MAA9B,CAAsC,CACnD,GAAIA,MAAM,CAACL,QAAP,GAAoB,CAAxB,CAA2B,CAEzB,MAAOX,CAAAA,KAAK,CAAC,CAACC,GAAG,CAACc,KAAK,CAACP,QAAP,CAAiBQ,MAAM,CAACN,OAAxB,CAAJ,CAAsCT,GAAG,CAACc,KAAK,CAACN,QAAP,CAAiB,CAAjB,CAAzC,CAAD,CAAZ,CACD,CACD,GAAMa,CAAAA,QAAQ,CAAG3B,IAAI,CAACoB,KAAK,CAACT,IAAP,CAAaS,KAAK,CAACT,IAAnB,CAAyBD,KAAzB,CAArB,CACA,GAAMS,CAAAA,YAAY,CAAGf,GAAG,CAACgB,KAAK,CAACR,SAAP,CAAkBX,GAAG,CAACS,KAAD,CAAQiB,QAAR,CAArB,CAAxB,CACA,GAAMV,CAAAA,YAAY,CAAGI,MAAM,CAACO,MAAP,CAAc1B,MAAM,CAACiB,YAAD,CAAeE,MAAM,CAACL,QAAtB,CAApB,CAArB,CACA,GAAME,CAAAA,QAAQ,CAAGG,MAAM,CAACO,MAAP,CAAc1B,MAAM,CAACkB,KAAK,CAACR,SAAP,CAAkBS,MAAM,CAACL,QAAzB,CAApB,CAAjB,CACA,MAAOP,CAAAA,cAAc,CACnBC,KADmB,CAEnBU,KAAK,CAACT,IAFa,CAGnBS,KAAK,CAACR,SAHa,CAInBQ,KAAK,CAACP,QAJa,CAKnBO,KAAK,CAACN,QALa,CAMnBO,MAAM,CAACN,OANY,CAOnBM,MAAM,CAACL,QAPY,CAQnBC,YARmB,CASnBC,QATmB,CAUnBC,YAVmB,CAArB,CAYD","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  greaterOrEq,\n  proc,\n} from '../base';\n\nconst internalTiming = proc(function (\n  clock,\n  time,\n  frameTime,\n  position,\n  finished,\n  toValue,\n  duration,\n  nextProgress,\n  progress,\n  newFrameTime\n) {\n  const state = {\n    time,\n    finished,\n    frameTime,\n    position,\n  };\n\n  const config = {\n    duration,\n    toValue,\n  };\n\n  const distanceLeft = sub(config.toValue, state.position);\n  const fullDistance = divide(distanceLeft, sub(1, progress));\n  const startPosition = sub(config.toValue, fullDistance);\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n\n  return block([\n    cond(\n      greaterOrEq(newFrameTime, config.duration),\n      [set(state.position, config.toValue), set(state.finished, 1)],\n      set(state.position, nextPosition)\n    ),\n    set(state.frameTime, newFrameTime),\n    set(state.time, clock),\n  ]);\n});\n\nexport default function timing(clock, state, config) {\n  if (config.duration === 0) {\n    // when duration is zero we end the timing immediately\n    return block([set(state.position, config.toValue), set(state.finished, 1)]);\n  }\n  const lastTime = cond(state.time, state.time, clock);\n  const newFrameTime = add(state.frameTime, sub(clock, lastTime));\n  const nextProgress = config.easing(divide(newFrameTime, config.duration));\n  const progress = config.easing(divide(state.frameTime, config.duration));\n  return internalTiming(\n    clock,\n    state.time,\n    state.frameTime,\n    state.position,\n    state.finished,\n    config.toValue,\n    config.duration,\n    nextProgress,\n    progress,\n    newFrameTime\n  );\n}\n"]},"metadata":{},"sourceType":"module"}