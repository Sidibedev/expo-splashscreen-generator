{"ast":null,"code":"var accessibilityRoleToWebRole={adjustable:'slider',button:'button',header:'heading',image:'img',imagebutton:null,keyboardkey:null,label:null,link:'link',none:'presentation',search:'search',summary:'region',text:null};var propsToAriaRole=function propsToAriaRole(_ref){var accessibilityRole=_ref.accessibilityRole;if(accessibilityRole){var inferredRole=accessibilityRoleToWebRole[accessibilityRole];if(inferredRole!==null){return inferredRole||accessibilityRole;}}};export default propsToAriaRole;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","_ref","accessibilityRole","inferredRole"],"mappings":"AAQA,GAAIA,CAAAA,0BAA0B,CAAG,CAC/BC,UAAU,CAAE,QADmB,CAE/BC,MAAM,CAAE,QAFuB,CAG/BC,MAAM,CAAE,SAHuB,CAI/BC,KAAK,CAAE,KAJwB,CAK/BC,WAAW,CAAE,IALkB,CAM/BC,WAAW,CAAE,IANkB,CAO/BC,KAAK,CAAE,IAPwB,CAQ/BC,IAAI,CAAE,MARyB,CAS/BC,IAAI,CAAE,cATyB,CAU/BC,MAAM,CAAE,QAVuB,CAW/BC,OAAO,CAAE,QAXsB,CAY/BC,IAAI,CAAE,IAZyB,CAAjC,CAeA,GAAIC,CAAAA,eAAe,CAAG,QAASA,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CACnD,GAAIC,CAAAA,iBAAiB,CAAGD,IAAI,CAACC,iBAA7B,CAEA,GAAIA,iBAAJ,CAAuB,CACrB,GAAIC,CAAAA,YAAY,CAAGhB,0BAA0B,CAACe,iBAAD,CAA7C,CAEA,GAAIC,YAAY,GAAK,IAArB,CAA2B,CAEzB,MAAOA,CAAAA,YAAY,EAAID,iBAAvB,CACD,CACF,CACF,CAXD,CAaA,cAAeF,CAAAA,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;"]},"metadata":{},"sourceType":"module"}