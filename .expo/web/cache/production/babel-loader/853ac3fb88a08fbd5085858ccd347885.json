{"ast":null,"code":"import{setRecoveryPropsToSave}from\"./ErroRecoveryStore\";import ExpoErrorRecovery from\"./ExpoErrorRecovery\";import\"./ErrorRecovery.fx\";export var recoveredProps=_getRecoveredProps();export function setRecoveryProps(props){setRecoveryPropsToSave(props);}function _getRecoveredProps(){if(ExpoErrorRecovery.recoveredProps){return JSON.parse(ExpoErrorRecovery.recoveredProps);}return null;}","map":{"version":3,"sources":["../src/ErrorRecovery.ts"],"names":[],"mappings":"AAAA,OAAS,sBAAT,2BACA,MAAO,CAAA,iBAAP,2BACA,2BAGA,MAAO,IAAM,CAAA,cAAc,CAAG,kBAAkB,EAAzC,CAgBP,MAAM,SAAU,CAAA,gBAAV,CAA2B,KAA3B,CAAoD,CACxD,sBAAsB,CAAC,KAAD,CAAtB,CACD,CAED,QAAS,CAAA,kBAAT,EAA2B,CACzB,GAAI,iBAAiB,CAAC,cAAtB,CAAsC,CACpC,MAAO,CAAA,IAAI,CAAC,KAAL,CAAW,iBAAiB,CAAC,cAA7B,CAAP,CACD,CACD,MAAO,KAAP,CACD","sourcesContent":["import { setRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\nimport './ErrorRecovery.fx';\n\n// @docsMissing\nexport const recoveredProps = _getRecoveredProps();\n\n// @docsMissing\nexport type ErrorRecoveryProps = Record<string, any>;\n\n// @needsAudit\n/**\n * Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\n * JS error, Expo will reload your project. If you've set these props, they'll be passed to your\n * reloaded project's initial props under `exp.errorRecovery`. Access to `localStorage` is required\n * on web, or else this will simply be a no-op.\n *\n * [Read more about error handling with Expo](/guides/errors).\n * @param props An object which will be passed to your reloaded project's initial props if the\n * project was reloaded as a result of a fatal JS error.\n */\nexport function setRecoveryProps(props: ErrorRecoveryProps): void {\n  setRecoveryPropsToSave(props);\n}\n\nfunction _getRecoveredProps(): ErrorRecoveryProps | null {\n  if (ExpoErrorRecovery.recoveredProps) {\n    return JSON.parse(ExpoErrorRecovery.recoveredProps);\n  }\n  return null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}