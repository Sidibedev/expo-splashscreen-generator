{"ast":null,"code":"'use strict';exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}revLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function getLens(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}var validLen=b64.indexOf('=');if(validLen===-1)validLen=len;var placeHoldersLen=validLen===len?0:4-validLen%4;return[validLen,placeHoldersLen];}function byteLength(b64){var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function _byteLength(b64,validLen,placeHoldersLen){return(validLen+placeHoldersLen)*3/4-placeHoldersLen;}function toByteArray(b64){var tmp;var lens=getLens(b64);var validLen=lens[0];var placeHoldersLen=lens[1];var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));var curByte=0;var len=placeHoldersLen>0?validLen-4:validLen;var i;for(i=0;i<len;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[curByte++]=tmp>>16&0xFF;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[curByte++]=tmp&0xFF;}if(placeHoldersLen===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[curByte++]=tmp>>8&0xFF;arr[curByte++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&0xFF0000)+(uint8[i+1]<<8&0xFF00)+(uint8[i+2]&0xFF);output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;var parts=[];var maxChunkLength=16383;for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}if(extraBytes===1){tmp=uint8[len-1];parts.push(lookup[tmp>>2]+lookup[tmp<<4&0x3F]+'==');}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];parts.push(lookup[tmp>>10]+lookup[tmp>>4&0x3F]+lookup[tmp<<2&0x3F]+'=');}return parts.join('');}","map":{"version":3,"sources":["/Users/mas/.nvm/versions/node/v14.18.1/lib/node_modules/expo-cli/node_modules/base64-js/index.js"],"names":["exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2"],"mappings":"AAAA,aAEAA,OAAO,CAACC,UAAR,CAAqBA,UAArB,CACAD,OAAO,CAACE,WAAR,CAAsBA,WAAtB,CACAF,OAAO,CAACG,aAAR,CAAwBA,aAAxB,CAEA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,GAAG,CAAG,MAAOC,CAAAA,UAAP,GAAsB,WAAtB,CAAoCA,UAApC,CAAiDC,KAA3D,CAEA,GAAIC,CAAAA,IAAI,CAAG,kEAAX,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAR,CAAWC,GAAG,CAAGF,IAAI,CAACG,MAA3B,CAAmCF,CAAC,CAAGC,GAAvC,CAA4C,EAAED,CAA9C,CAAiD,CAC/CN,MAAM,CAACM,CAAD,CAAN,CAAYD,IAAI,CAACC,CAAD,CAAhB,CACAL,SAAS,CAACI,IAAI,CAACI,UAAL,CAAgBH,CAAhB,CAAD,CAAT,CAAgCA,CAAhC,CACD,CAIDL,SAAS,CAAC,IAAIQ,UAAJ,CAAe,CAAf,CAAD,CAAT,CAA+B,EAA/B,CACAR,SAAS,CAAC,IAAIQ,UAAJ,CAAe,CAAf,CAAD,CAAT,CAA+B,EAA/B,CAEA,QAASC,CAAAA,OAAT,CAAkBC,GAAlB,CAAuB,CACrB,GAAIJ,CAAAA,GAAG,CAAGI,GAAG,CAACH,MAAd,CAEA,GAAID,GAAG,CAAG,CAAN,CAAU,CAAd,CAAiB,CACf,KAAM,IAAIK,CAAAA,KAAJ,CAAU,gDAAV,CAAN,CACD,CAID,GAAIC,CAAAA,QAAQ,CAAGF,GAAG,CAACG,OAAJ,CAAY,GAAZ,CAAf,CACA,GAAID,QAAQ,GAAK,CAAC,CAAlB,CAAqBA,QAAQ,CAAGN,GAAX,CAErB,GAAIQ,CAAAA,eAAe,CAAGF,QAAQ,GAAKN,GAAb,CAClB,CADkB,CAElB,EAAKM,QAAQ,CAAG,CAFpB,CAIA,MAAO,CAACA,QAAD,CAAWE,eAAX,CAAP,CACD,CAGD,QAASlB,CAAAA,UAAT,CAAqBc,GAArB,CAA0B,CACxB,GAAIK,CAAAA,IAAI,CAAGN,OAAO,CAACC,GAAD,CAAlB,CACA,GAAIE,CAAAA,QAAQ,CAAGG,IAAI,CAAC,CAAD,CAAnB,CACA,GAAID,CAAAA,eAAe,CAAGC,IAAI,CAAC,CAAD,CAA1B,CACA,MAAQ,CAACH,QAAQ,CAAGE,eAAZ,EAA+B,CAA/B,CAAmC,CAApC,CAAyCA,eAAhD,CACD,CAED,QAASE,CAAAA,WAAT,CAAsBN,GAAtB,CAA2BE,QAA3B,CAAqCE,eAArC,CAAsD,CACpD,MAAQ,CAACF,QAAQ,CAAGE,eAAZ,EAA+B,CAA/B,CAAmC,CAApC,CAAyCA,eAAhD,CACD,CAED,QAASjB,CAAAA,WAAT,CAAsBa,GAAtB,CAA2B,CACzB,GAAIO,CAAAA,GAAJ,CACA,GAAIF,CAAAA,IAAI,CAAGN,OAAO,CAACC,GAAD,CAAlB,CACA,GAAIE,CAAAA,QAAQ,CAAGG,IAAI,CAAC,CAAD,CAAnB,CACA,GAAID,CAAAA,eAAe,CAAGC,IAAI,CAAC,CAAD,CAA1B,CAEA,GAAIG,CAAAA,GAAG,CAAG,GAAIjB,CAAAA,GAAJ,CAAQe,WAAW,CAACN,GAAD,CAAME,QAAN,CAAgBE,eAAhB,CAAnB,CAAV,CAEA,GAAIK,CAAAA,OAAO,CAAG,CAAd,CAGA,GAAIb,CAAAA,GAAG,CAAGQ,eAAe,CAAG,CAAlB,CACNF,QAAQ,CAAG,CADL,CAENA,QAFJ,CAIA,GAAIP,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGC,GAAhB,CAAqBD,CAAC,EAAI,CAA1B,CAA6B,CAC3BY,GAAG,CACAjB,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAf,CAAD,CAAT,EAAgC,EAAjC,CACCL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAAT,EAAoC,EADrC,CAECL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAAT,EAAoC,CAFrC,CAGAL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAJX,CAKAa,GAAG,CAACC,OAAO,EAAR,CAAH,CAAkBF,GAAG,EAAI,EAAR,CAAc,IAA/B,CACAC,GAAG,CAACC,OAAO,EAAR,CAAH,CAAkBF,GAAG,EAAI,CAAR,CAAa,IAA9B,CACAC,GAAG,CAACC,OAAO,EAAR,CAAH,CAAiBF,GAAG,CAAG,IAAvB,CACD,CAED,GAAIH,eAAe,GAAK,CAAxB,CAA2B,CACzBG,GAAG,CACAjB,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAf,CAAD,CAAT,EAAgC,CAAjC,CACCL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAAT,EAAoC,CAFvC,CAGAa,GAAG,CAACC,OAAO,EAAR,CAAH,CAAiBF,GAAG,CAAG,IAAvB,CACD,CAED,GAAIH,eAAe,GAAK,CAAxB,CAA2B,CACzBG,GAAG,CACAjB,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAf,CAAD,CAAT,EAAgC,EAAjC,CACCL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAAT,EAAoC,CADrC,CAECL,SAAS,CAACU,GAAG,CAACF,UAAJ,CAAeH,CAAC,CAAG,CAAnB,CAAD,CAAT,EAAoC,CAHvC,CAIAa,GAAG,CAACC,OAAO,EAAR,CAAH,CAAkBF,GAAG,EAAI,CAAR,CAAa,IAA9B,CACAC,GAAG,CAACC,OAAO,EAAR,CAAH,CAAiBF,GAAG,CAAG,IAAvB,CACD,CAED,MAAOC,CAAAA,GAAP,CACD,CAED,QAASE,CAAAA,eAAT,CAA0BC,GAA1B,CAA+B,CAC7B,MAAOtB,CAAAA,MAAM,CAACsB,GAAG,EAAI,EAAP,CAAY,IAAb,CAAN,CACLtB,MAAM,CAACsB,GAAG,EAAI,EAAP,CAAY,IAAb,CADD,CAELtB,MAAM,CAACsB,GAAG,EAAI,CAAP,CAAW,IAAZ,CAFD,CAGLtB,MAAM,CAACsB,GAAG,CAAG,IAAP,CAHR,CAID,CAED,QAASC,CAAAA,WAAT,CAAsBC,KAAtB,CAA6BC,KAA7B,CAAoCC,GAApC,CAAyC,CACvC,GAAIR,CAAAA,GAAJ,CACA,GAAIS,CAAAA,MAAM,CAAG,EAAb,CACA,IAAK,GAAIrB,CAAAA,CAAC,CAAGmB,KAAb,CAAoBnB,CAAC,CAAGoB,GAAxB,CAA6BpB,CAAC,EAAI,CAAlC,CAAqC,CACnCY,GAAG,CACD,CAAEM,KAAK,CAAClB,CAAD,CAAL,EAAY,EAAb,CAAmB,QAApB,GACEkB,KAAK,CAAClB,CAAC,CAAG,CAAL,CAAL,EAAgB,CAAjB,CAAsB,MADvB,GAECkB,KAAK,CAAClB,CAAC,CAAG,CAAL,CAAL,CAAe,IAFhB,CADF,CAIAqB,MAAM,CAACC,IAAP,CAAYP,eAAe,CAACH,GAAD,CAA3B,EACD,CACD,MAAOS,CAAAA,MAAM,CAACE,IAAP,CAAY,EAAZ,CAAP,CACD,CAED,QAAS9B,CAAAA,aAAT,CAAwByB,KAAxB,CAA+B,CAC7B,GAAIN,CAAAA,GAAJ,CACA,GAAIX,CAAAA,GAAG,CAAGiB,KAAK,CAAChB,MAAhB,CACA,GAAIsB,CAAAA,UAAU,CAAGvB,GAAG,CAAG,CAAvB,CACA,GAAIwB,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAIC,CAAAA,cAAc,CAAG,KAArB,CAGA,IAAK,GAAI1B,CAAAA,CAAC,CAAG,CAAR,CAAW2B,IAAI,CAAG1B,GAAG,CAAGuB,UAA7B,CAAyCxB,CAAC,CAAG2B,IAA7C,CAAmD3B,CAAC,EAAI0B,cAAxD,CAAwE,CACtED,KAAK,CAACH,IAAN,CAAWL,WAAW,CAACC,KAAD,CAAQlB,CAAR,CAAYA,CAAC,CAAG0B,cAAL,CAAuBC,IAAvB,CAA8BA,IAA9B,CAAsC3B,CAAC,CAAG0B,cAArD,CAAtB,EACD,CAGD,GAAIF,UAAU,GAAK,CAAnB,CAAsB,CACpBZ,GAAG,CAAGM,KAAK,CAACjB,GAAG,CAAG,CAAP,CAAX,CACAwB,KAAK,CAACH,IAAN,CACE5B,MAAM,CAACkB,GAAG,EAAI,CAAR,CAAN,CACAlB,MAAM,CAAEkB,GAAG,EAAI,CAAR,CAAa,IAAd,CADN,CAEA,IAHF,EAKD,CAPD,IAOO,IAAIY,UAAU,GAAK,CAAnB,CAAsB,CAC3BZ,GAAG,CAAG,CAACM,KAAK,CAACjB,GAAG,CAAG,CAAP,CAAL,EAAkB,CAAnB,EAAwBiB,KAAK,CAACjB,GAAG,CAAG,CAAP,CAAnC,CACAwB,KAAK,CAACH,IAAN,CACE5B,MAAM,CAACkB,GAAG,EAAI,EAAR,CAAN,CACAlB,MAAM,CAAEkB,GAAG,EAAI,CAAR,CAAa,IAAd,CADN,CAEAlB,MAAM,CAAEkB,GAAG,EAAI,CAAR,CAAa,IAAd,CAFN,CAGA,GAJF,EAMD,CAED,MAAOa,CAAAA,KAAK,CAACF,IAAN,CAAW,EAAX,CAAP,CACD","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"]},"metadata":{},"sourceType":"script"}