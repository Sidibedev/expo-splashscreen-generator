{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var styles=StyleSheet.create({container:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{opacity:0,backgroundColor:'transparent',zIndex:500}),containerVisible:{opacity:1},background:_objectSpread({},StyleSheet.absoluteFillObject),tooltip:{backgroundColor:'transparent',position:'absolute'},shadow:{shadowColor:'black',shadowOffset:{width:0,height:2},shadowRadius:2,shadowOpacity:0.8},content:{borderRadius:4,padding:8,backgroundColor:'#fff',overflow:'hidden'},arrow:{position:'absolute',borderTopColor:'transparent',borderRightColor:'transparent',borderBottomColor:'transparent',borderLeftColor:'transparent'}});var arrowRotationForPlacement=function arrowRotationForPlacement(placement){switch(placement){case'bottom':return'180deg';case'left':return'-90deg';case'right':return'90deg';default:return'0deg';}};var arrowPlacementStyles=function arrowPlacementStyles(_ref){var anchorPoint=_ref.anchorPoint,arrowSize=_ref.arrowSize,placement=_ref.placement,tooltipOrigin=_ref.tooltipOrigin;var width=arrowSize.width+2;var height=arrowSize.height*2+2;var marginTop=0;var marginLeft=0;if(placement==='bottom'){marginTop=arrowSize.height;}else if(placement==='right'){marginLeft=arrowSize.height;}return{left:anchorPoint.x-tooltipOrigin.x-(width/2-marginLeft),top:anchorPoint.y-tooltipOrigin.y-(height/2-marginTop),width:width,height:height,borderTopWidth:height/2,borderRightWidth:width/2,borderBottomWidth:height/2,borderLeftWidth:width/2};};var getArrowRotation=function getArrowRotation(arrowStyle,placement){var arrowRotation=arrowRotationForPlacement(placement);var transform=(StyleSheet.flatten(arrowStyle).transform||[]).slice(0);transform.unshift({rotate:arrowRotation});return{transform:transform};};var tooltipPlacementStyles=function tooltipPlacementStyles(_ref2){var arrowSize=_ref2.arrowSize,placement=_ref2.placement,tooltipOrigin=_ref2.tooltipOrigin;var height=arrowSize.height;switch(placement){case'bottom':return{paddingTop:height,top:tooltipOrigin.y-height,left:tooltipOrigin.x};case'top':return{paddingBottom:height,top:tooltipOrigin.y,left:tooltipOrigin.x};case'right':return{paddingLeft:height,top:tooltipOrigin.y,left:tooltipOrigin.x-height};case'left':return{paddingRight:height,top:tooltipOrigin.y,left:tooltipOrigin.x};case'center':default:return{top:tooltipOrigin.y,left:tooltipOrigin.x};}};var styleGenerator=function styleGenerator(styleGeneratorProps){var adjustedContentSize=styleGeneratorProps.adjustedContentSize,displayInsets=styleGeneratorProps.displayInsets,measurementsFinished=styleGeneratorProps.measurementsFinished,ownProps=styleGeneratorProps.ownProps,placement=styleGeneratorProps.placement,topAdjustment=styleGeneratorProps.topAdjustment;var height=adjustedContentSize.height,width=adjustedContentSize.width;var backgroundColor=ownProps.backgroundColor;var contentStyle=[styles.content,height>0&&{height:height},width>0&&{width:width},ownProps.contentStyle];var contentBackgroundColor=StyleSheet.flatten(contentStyle).backgroundColor;var arrowStyle=[styles.arrow,arrowPlacementStyles(styleGeneratorProps),{borderTopColor:contentBackgroundColor},ownProps.arrowStyle];return{arrowStyle:[].concat(arrowStyle,[getArrowRotation(arrowStyle,placement)]),backgroundStyle:[styles.background,ownProps.backgroundStyle,{paddingTop:displayInsets.top,paddingLeft:displayInsets.left,paddingRight:displayInsets.right,paddingBottom:displayInsets.bottom,backgroundColor:backgroundColor}],containerStyle:[styles.container,StyleSheet.compose(adjustedContentSize.width!==0&&measurementsFinished&&styles.containerVisible,topAdjustment!==0&&{top:topAdjustment})],contentStyle:contentStyle,tooltipStyle:[StyleSheet.compose(styles.tooltip,ownProps.disableShadow?{}:styles.shadow),tooltipPlacementStyles(styleGeneratorProps),ownProps.tooltipStyle]};};export default styleGenerator;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-walkthrough-tooltip/src/styles.js"],"names":["styles","StyleSheet","create","container","absoluteFillObject","opacity","backgroundColor","zIndex","containerVisible","background","tooltip","position","shadow","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","content","borderRadius","padding","overflow","arrow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","arrowRotationForPlacement","placement","arrowPlacementStyles","anchorPoint","arrowSize","tooltipOrigin","marginTop","marginLeft","left","x","top","y","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getArrowRotation","arrowStyle","arrowRotation","transform","flatten","slice","unshift","rotate","tooltipPlacementStyles","paddingTop","paddingBottom","paddingLeft","paddingRight","styleGenerator","styleGeneratorProps","adjustedContentSize","displayInsets","measurementsFinished","ownProps","topAdjustment","contentStyle","contentBackgroundColor","backgroundStyle","right","bottom","containerStyle","compose","tooltipStyle","disableShadow"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    opacity: 0,\n    backgroundColor: 'transparent',\n    zIndex: 500,\n  },\n  containerVisible: {\n    opacity: 1,\n  },\n  background: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  tooltip: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n  },\n  shadow: {\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 2,\n    shadowOpacity: 0.8,\n  },\n  content: {\n    borderRadius: 4,\n    padding: 8,\n    backgroundColor: '#fff',\n    overflow: 'hidden',\n  },\n  arrow: {\n    position: 'absolute',\n    borderTopColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomColor: 'transparent',\n    borderLeftColor: 'transparent',\n  },\n});\n\nconst arrowRotationForPlacement = placement => {\n  switch (placement) {\n    case 'bottom':\n      return '180deg';\n    case 'left':\n      return '-90deg';\n    case 'right':\n      return '90deg';\n    default:\n      return '0deg';\n  }\n};\n\nconst arrowPlacementStyles = ({\n  anchorPoint,\n  arrowSize,\n  placement,\n  tooltipOrigin,\n}) => {\n  // Create the arrow from a rectangle with the appropriate borderXWidth set\n  // A rotation is then applied dependending on the placement\n  // Also make it slightly bigger\n  // to fix a visual artifact when the tooltip is animated with a scale\n  const width = arrowSize.width + 2;\n  const height = arrowSize.height * 2 + 2;\n  let marginTop = 0;\n  let marginLeft = 0;\n\n  if (placement === 'bottom') {\n    marginTop = arrowSize.height;\n  } else if (placement === 'right') {\n    marginLeft = arrowSize.height;\n  }\n\n  return {\n    left: anchorPoint.x - tooltipOrigin.x - (width / 2 - marginLeft),\n    top: anchorPoint.y - tooltipOrigin.y - (height / 2 - marginTop),\n    width,\n    height,\n    borderTopWidth: height / 2,\n    borderRightWidth: width / 2,\n    borderBottomWidth: height / 2,\n    borderLeftWidth: width / 2,\n  };\n};\n\nconst getArrowRotation = (arrowStyle, placement) => {\n  // prevent rotation getting incorrectly overwritten\n  const arrowRotation = arrowRotationForPlacement(placement);\n  const transform = (StyleSheet.flatten(arrowStyle).transform || []).slice(0);\n  transform.unshift({ rotate: arrowRotation });\n\n  return { transform };\n};\n\nconst tooltipPlacementStyles = ({ arrowSize, placement, tooltipOrigin }) => {\n  const { height } = arrowSize;\n\n  switch (placement) {\n    case 'bottom':\n      return {\n        paddingTop: height,\n        top: tooltipOrigin.y - height,\n        left: tooltipOrigin.x,\n      };\n    case 'top':\n      return {\n        paddingBottom: height,\n        top: tooltipOrigin.y,\n        left: tooltipOrigin.x,\n      };\n    case 'right':\n      return {\n        paddingLeft: height,\n        top: tooltipOrigin.y,\n        left: tooltipOrigin.x - height,\n      };\n    case 'left':\n      return {\n        paddingRight: height,\n        top: tooltipOrigin.y,\n        left: tooltipOrigin.x,\n      };\n    case 'center':\n    default:\n      return {\n        top: tooltipOrigin.y,\n        left: tooltipOrigin.x,\n      };\n  }\n};\n\nconst styleGenerator = styleGeneratorProps => {\n  const {\n    adjustedContentSize,\n    displayInsets,\n    measurementsFinished,\n    ownProps,\n    placement,\n    topAdjustment,\n  } = styleGeneratorProps;\n\n  const { height, width } = adjustedContentSize;\n  const { backgroundColor } = ownProps;\n\n  const contentStyle = [\n    styles.content,\n    height > 0 && { height }, // ignore special case of -1 with center placement (and 0 when not yet measured)\n    width > 0 && { width }, // ignore special case of -1 with center placement (and 0 when not yet measured)\n    ownProps.contentStyle,\n  ];\n\n  const contentBackgroundColor = StyleSheet.flatten(contentStyle)\n    .backgroundColor;\n\n  const arrowStyle = [\n    styles.arrow,\n    arrowPlacementStyles(styleGeneratorProps),\n    { borderTopColor: contentBackgroundColor },\n    ownProps.arrowStyle,\n  ];\n\n  return {\n    arrowStyle: [...arrowStyle, getArrowRotation(arrowStyle, placement)],\n    backgroundStyle: [\n      styles.background,\n      ownProps.backgroundStyle,\n      {\n        paddingTop: displayInsets.top,\n        paddingLeft: displayInsets.left,\n        paddingRight: displayInsets.right,\n        paddingBottom: displayInsets.bottom,\n        backgroundColor,\n      },\n    ],\n    containerStyle: [\n      styles.container,\n      StyleSheet.compose(\n        adjustedContentSize.width !== 0 &&\n          measurementsFinished &&\n          styles.containerVisible,\n        topAdjustment !== 0 && {\n          top: topAdjustment,\n        },\n      ),\n    ],\n    contentStyle,\n    tooltipStyle: [\n      StyleSheet.compose(\n        styles.tooltip,\n        ownProps.disableShadow ? {} : styles.shadow,\n      ),\n      tooltipPlacementStyles(styleGeneratorProps),\n      ownProps.tooltipStyle,\n    ],\n  };\n};\n\nexport default styleGenerator;\n"]},"metadata":{},"sourceType":"module"}