{"ast":null,"code":"import rng from\"./rng.js\";import bytesToUuid from\"./bytesToUuid.js\";function v4(options,buf,offset){var i=buf&&offset||0;if(typeof options=='string'){buf=options==='binary'?new Array(16):null;options=null;}options=options||{};var rnds=options.random||(options.rng||rng)();rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;if(buf){for(var ii=0;ii<16;++ii){buf[i+ii]=rnds[ii];}}return buf||bytesToUuid(rnds);}export default v4;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/v4.js"],"names":["rng","bytesToUuid","v4","options","buf","offset","i","Array","rnds","random","ii"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,gBACA,MAAOC,CAAAA,WAAP,wBAEA,QAASC,CAAAA,EAAT,CAAYC,OAAZ,CAAqBC,GAArB,CAA0BC,MAA1B,CAAkC,CAChC,GAAIC,CAAAA,CAAC,CAAGF,GAAG,EAAIC,MAAP,EAAiB,CAAzB,CAEA,GAAI,MAAOF,CAAAA,OAAP,EAAkB,QAAtB,CAAgC,CAC9BC,GAAG,CAAGD,OAAO,GAAK,QAAZ,CAAuB,GAAII,CAAAA,KAAJ,CAAU,EAAV,CAAvB,CAAuC,IAA7C,CACAJ,OAAO,CAAG,IAAV,CACD,CAEDA,OAAO,CAAGA,OAAO,EAAI,EAArB,CACA,GAAIK,CAAAA,IAAI,CAAGL,OAAO,CAACM,MAAR,EAAkB,CAACN,OAAO,CAACH,GAAR,EAAeA,GAAhB,GAA7B,CAEAQ,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAJ,CAAU,IAAV,CAAiB,IAA3B,CACAA,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAJ,CAAU,IAAV,CAAiB,IAA3B,CAEA,GAAIJ,GAAJ,CAAS,CACP,IAAK,GAAIM,CAAAA,EAAE,CAAG,CAAd,CAAiBA,EAAE,CAAG,EAAtB,CAA0B,EAAEA,EAA5B,CAAgC,CAC9BN,GAAG,CAACE,CAAC,CAAGI,EAAL,CAAH,CAAcF,IAAI,CAACE,EAAD,CAAlB,CACD,CACF,CAED,MAAON,CAAAA,GAAG,EAAIH,WAAW,CAACO,IAAD,CAAzB,CACD,CAED,cAAeN,CAAAA,EAAf","sourcesContent":["import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;"]},"metadata":{},"sourceType":"module"}