{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{PermissionStatus,createPermissionHook,UnavailabilityError,CodedError}from'expo-modules-core';import ExponentImagePicker from\"./ExponentImagePicker\";import{MediaTypeOptions,VideoExportPreset,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle}from\"./ImagePicker.types\";function validateOptions(options){var aspect=options.aspect,quality=options.quality,videoMaxDuration=options.videoMaxDuration;if(aspect!=null){var _aspect=_slicedToArray(aspect,2),x=_aspect[0],y=_aspect[1];if(x<=0||y<=0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid aspect ratio values \"+x+\":\"+y+\". Provide positive numbers.\");}}if(quality&&(quality<0||quality>1)){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'quality' value \"+quality+\". Provide a value between 0 and 1.\");}if(videoMaxDuration&&videoMaxDuration<0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'videoMaxDuration' value \"+videoMaxDuration+\". Provide a non-negative number.\");}return options;}export function getCameraPermissionsAsync(){return _regeneratorRuntime.async(function getCameraPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",ExponentImagePicker.getCameraPermissionsAsync());case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function getCameraRollPermissionsAsync(){return _regeneratorRuntime.async(function getCameraRollPermissionsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.warn('ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()');return _context2.abrupt(\"return\",getMediaLibraryPermissionsAsync());case 2:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function getMediaLibraryPermissionsAsync(){var writeOnly,imagePickerMethod,_args3=arguments;return _regeneratorRuntime.async(function getMediaLibraryPermissionsAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:writeOnly=_args3.length>0&&_args3[0]!==undefined?_args3[0]:false;imagePickerMethod=ExponentImagePicker.getMediaLibraryPermissionsAsync;return _context3.abrupt(\"return\",imagePickerMethod(writeOnly));case 3:case\"end\":return _context3.stop();}}},null,null,null,Promise);}export function requestCameraPermissionsAsync(){return _regeneratorRuntime.async(function requestCameraPermissionsAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",ExponentImagePicker.requestCameraPermissionsAsync());case 1:case\"end\":return _context4.stop();}}},null,null,null,Promise);}export function requestCameraRollPermissionsAsync(){return _regeneratorRuntime.async(function requestCameraRollPermissionsAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.warn('ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()');return _context5.abrupt(\"return\",requestMediaLibraryPermissionsAsync());case 2:case\"end\":return _context5.stop();}}},null,null,null,Promise);}export function requestMediaLibraryPermissionsAsync(){var writeOnly,imagePickerMethod,_args6=arguments;return _regeneratorRuntime.async(function requestMediaLibraryPermissionsAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:writeOnly=_args6.length>0&&_args6[0]!==undefined?_args6[0]:false;imagePickerMethod=ExponentImagePicker.requestMediaLibraryPermissionsAsync;return _context6.abrupt(\"return\",imagePickerMethod(writeOnly));case 3:case\"end\":return _context6.stop();}}},null,null,null,Promise);}export var useMediaLibraryPermissions=createPermissionHook({getMethod:function getMethod(options){return getMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);},requestMethod:function requestMethod(options){return requestMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);}});export var useCameraPermissions=createPermissionHook({getMethod:getCameraPermissionsAsync,requestMethod:requestCameraPermissionsAsync});export function getPendingResultAsync(){return _regeneratorRuntime.async(function getPendingResultAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!ExponentImagePicker.getPendingResultAsync){_context7.next=2;break;}return _context7.abrupt(\"return\",ExponentImagePicker.getPendingResultAsync());case 2:return _context7.abrupt(\"return\",[]);case 3:case\"end\":return _context7.stop();}}},null,null,null,Promise);}export function launchCameraAsync(){var options,_args8=arguments;return _regeneratorRuntime.async(function launchCameraAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:options=_args8.length>0&&_args8[0]!==undefined?_args8[0]:{};if(ExponentImagePicker.launchCameraAsync){_context8.next=3;break;}throw new UnavailabilityError('ImagePicker','launchCameraAsync');case 3:_context8.next=5;return _regeneratorRuntime.awrap(ExponentImagePicker.launchCameraAsync(validateOptions(options)));case 5:return _context8.abrupt(\"return\",_context8.sent);case 6:case\"end\":return _context8.stop();}}},null,null,null,Promise);}export function launchImageLibraryAsync(options){return _regeneratorRuntime.async(function launchImageLibraryAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(ExponentImagePicker.launchImageLibraryAsync){_context9.next=2;break;}throw new UnavailabilityError('ImagePicker','launchImageLibraryAsync');case 2:_context9.next=4;return _regeneratorRuntime.awrap(ExponentImagePicker.launchImageLibraryAsync(options!=null?options:{}));case 4:return _context9.abrupt(\"return\",_context9.sent);case 5:case\"end\":return _context9.stop();}}},null,null,null,Promise);}export{MediaTypeOptions,VideoExportPreset,PermissionStatus,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle};","map":{"version":3,"sources":["../src/ImagePicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#imagepickercamerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `getMediaLibraryPermissionsAsync()` instead.\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#imagepickercamerarollpermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.getMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#imagepickercamerapermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `requestMediaLibraryPermissionsAsync()` instead.\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#imagepickercamerarollpermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will bloc\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n * **Animated GIFs support** If the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG, on iOS — GIF).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}