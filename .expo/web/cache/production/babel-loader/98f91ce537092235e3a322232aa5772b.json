{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{Platform}from'expo-modules-core';import{v4 as uuidv4}from'uuid';import{ExecutionEnvironment}from\"./Constants.types\";var ID_KEY='EXPO_CONSTANTS_INSTALLATION_ID';var _sessionId=uuidv4();function getBrowserName(){if(Platform.isDOMAvailable){var agent=navigator.userAgent.toLowerCase();if(agent.includes('edge')){return'Edge';}else if(agent.includes('edg')){return'Chromium Edge';}else if(agent.includes('opr')&&!!window['opr']){return'Opera';}else if(agent.includes('chrome')&&!!window['chrome']){return'Chrome';}else if(agent.includes('trident')){return'IE';}else if(agent.includes('firefox')){return'Firefox';}else if(agent.includes('safari')){return'Safari';}}return undefined;}export default{get name(){return'ExponentConstants';},get appOwnership(){return null;},get executionEnvironment(){return ExecutionEnvironment.Bare;},get installationId(){var installationId;try{installationId=localStorage.getItem(ID_KEY);if(installationId==null||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(ID_KEY,installationId);}}catch(error){installationId=_sessionId;}finally{return installationId;}},get sessionId(){return _sessionId;},get platform(){return{web:Platform.isDOMAvailable?{ua:navigator.userAgent}:undefined};},get isHeadless(){if(!Platform.isDOMAvailable)return true;return /\\bHeadlessChrome\\//.test(navigator.userAgent);},get isDevice(){return true;},get expoVersion(){return this.manifest.sdkVersion||null;},get linkingUri(){if(Platform.isDOMAvailable){return location.origin;}else{return'';}},get expoRuntimeVersion(){return this.expoVersion;},get deviceName(){return getBrowserName();},get nativeAppVersion(){return null;},get nativeBuildVersion(){return null;},get systemFonts(){return[];},get statusBarHeight(){return 0;},get deviceYearClass(){return null;},get manifest(){return process.env.APP_MANIFEST||{};},get manifest2(){return null;},get experienceUrl(){if(Platform.isDOMAvailable){return location.origin;}else{return'';}},get debugMode(){return __DEV__;},getWebViewUserAgentAsync:function getWebViewUserAgentAsync(){return function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!Platform.isDOMAvailable){_context.next=4;break;}return _context.abrupt(\"return\",navigator.userAgent);case 4:return _context.abrupt(\"return\",null);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}();}};","map":{"version":3,"sources":["../src/ExponentConstants.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  ExecutionEnvironment,\n  NativeConstants,\n  PlatformManifest,\n  WebManifest,\n} from './Constants.types';\n\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\ndeclare let __DEV__: boolean;\ndeclare let process: { env: any };\ndeclare let navigator: Navigator;\ndeclare let location: Location;\ndeclare let localStorage: Storage;\n\nconst _sessionId = uuidv4();\n\nfunction getBrowserName(): string | undefined {\n  if (Platform.isDOMAvailable) {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentConstants';\n  },\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get installationId(): string {\n    let installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId as string);\n      }\n    } catch (error) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get platform(): PlatformManifest {\n    return { web: Platform.isDOMAvailable ? { ua: navigator.userAgent } : undefined };\n  },\n  get isHeadless(): boolean {\n    if (!Platform.isDOMAvailable) return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice(): true {\n    // TODO: Bacon: Possibly want to add information regarding simulators\n    return true;\n  },\n  get expoVersion(): string | null {\n    return this.manifest!.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (Platform.isDOMAvailable) {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get nativeAppVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2(): null {\n    return null;\n  },\n  get experienceUrl(): string {\n    if (Platform.isDOMAvailable) {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (Platform.isDOMAvailable) {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}