{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{createAnimatedSet as set}from\"../core/AnimatedSet\";import _interpolate from\"../derived/interpolate\";import InternalAnimatedValue from\"./InternalAnimatedValue\";import Platform from\"react-native-web/dist/exports/Platform\";import{evaluateOnce}from\"../derived/evaluateOnce\";import ReanimatedModule from\"../../ReanimatedModule\";import{val}from\"../val\";var AnimatedValue=function(_InternalAnimatedValu){_inherits(AnimatedValue,_InternalAnimatedValu);var _super=_createSuper(AnimatedValue);function AnimatedValue(){_classCallCheck(this,AnimatedValue);return _super.apply(this,arguments);}_createClass(AnimatedValue,[{key:\"setValue\",value:function setValue(value){this.__detachAnimation(this._animation);if(Platform.OS==='web'||Platform.OS==='windows'||Platform.OS==='macos'){this._updateValue(val(value));}else{if(ReanimatedModule.setValue&&typeof value==='number'){ReanimatedModule.setValue(this.__nodeID,value);}else{evaluateOnce(set(this,value),this);}}}},{key:\"toString\",value:function toString(){return\"AnimatedValue, id: \"+this.__nodeID;}},{key:\"interpolate\",value:function interpolate(config){return _interpolate(this,config);}}]);return AnimatedValue;}(InternalAnimatedValue);export{AnimatedValue as default};","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedValue.js"],"names":["createAnimatedSet","set","interpolate","InternalAnimatedValue","evaluateOnce","ReanimatedModule","val","AnimatedValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","setValue","__nodeID","config"],"mappings":"qgCAAA,OAASA,iBAAiB,GAAIC,CAAAA,GAA9B,2BACA,MAAOC,CAAAA,YAAP,8BACA,MAAOC,CAAAA,qBAAP,+B,6DAEA,OAASC,YAAT,+BACA,MAAOC,CAAAA,gBAAP,8BACA,OAASC,GAAT,c,GAGqBC,CAAAA,a,2QACnB,kBAASC,KAAT,CAAgB,CACd,KAAKC,iBAAL,CAAuB,KAAKC,UAA5B,EACA,GACEC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,EACAD,QAAQ,CAACC,EAAT,GAAgB,SADhB,EAEAD,QAAQ,CAACC,EAAT,GAAgB,OAHlB,CAIE,CACA,KAAKC,YAAL,CAAkBP,GAAG,CAACE,KAAD,CAArB,EACD,CAND,IAMO,CACL,GAAIH,gBAAgB,CAACS,QAAjB,EAA6B,MAAON,CAAAA,KAAP,GAAiB,QAAlD,CAA4D,CAI1DH,gBAAgB,CAACS,QAAjB,CAA0B,KAAKC,QAA/B,CAAyCP,KAAzC,EACD,CALD,IAKO,CACLJ,YAAY,CAACH,GAAG,CAAC,IAAD,CAAOO,KAAP,CAAJ,CAAmB,IAAnB,CAAZ,CACD,CACF,CACF,C,wBAED,mBAAW,CACT,4BAA6B,KAAKO,QAAlC,CACD,C,2BAED,qBAAYC,MAAZ,CAAoB,CAClB,MAAOd,CAAAA,YAAW,CAAC,IAAD,CAAOc,MAAP,CAAlB,CACD,C,2BA3BwCb,qB,SAAtBI,a","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../../ReanimatedModule';\nimport { val } from '../val';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (\n      Platform.OS === 'web' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'macos'\n    ) {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}