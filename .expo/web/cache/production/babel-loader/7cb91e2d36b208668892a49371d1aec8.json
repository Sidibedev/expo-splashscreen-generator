{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import ExpoSplashScreen from\"./ExpoSplashScreen\";export function preventAutoHideAsync(){return _regeneratorRuntime.async(function preventAutoHideAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(ExpoSplashScreen.preventAutoHideAsync){_context.next=2;break;}throw new UnavailabilityError('expo-splash-screen','preventAutoHideAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(ExpoSplashScreen.preventAutoHideAsync());case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function hideAsync(){return _regeneratorRuntime.async(function hideAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(ExpoSplashScreen.hideAsync){_context2.next=2;break;}throw new UnavailabilityError('expo-splash-screen','hideAsync');case 2:_context2.next=4;return _regeneratorRuntime.awrap(ExpoSplashScreen.hideAsync());case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function hide(){console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');hideAsync();}export function preventAutoHide(){console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');preventAutoHideAsync();}","map":{"version":3,"sources":["../src/SplashScreen.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CAEA,MAAO,CAAA,gBAAP,0BAMA,MAAO,SAAe,CAAA,oBAAf,oIACA,gBAAgB,CAAC,oBADjB,8BAEG,IAAI,CAAA,mBAAJ,CAAwB,oBAAxB,CAA8C,sBAA9C,CAFH,yDAIQ,gBAAgB,CAAC,oBAAjB,EAJR,6HAaP,MAAO,SAAe,CAAA,SAAf,4HACA,gBAAgB,CAAC,SADjB,+BAEG,IAAI,CAAA,mBAAJ,CAAwB,oBAAxB,CAA8C,WAA9C,CAFH,0DAIQ,gBAAgB,CAAC,SAAjB,EAJR,gIAWP,MAAM,SAAU,CAAA,IAAV,EAAc,CAClB,OAAO,CAAC,IAAR,CAAa,yEAAb,EACA,SAAS,GACV,CAMD,MAAM,SAAU,CAAA,eAAV,EAAyB,CAC7B,OAAO,CAAC,IAAR,CACE,+FADF,EAGA,oBAAoB,GACrB","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}