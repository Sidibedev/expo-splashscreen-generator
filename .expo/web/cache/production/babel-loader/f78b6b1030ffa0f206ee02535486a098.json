{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import JSReanimated from\"./JSReanimated\";import{shouldBeUseWeb}from\"../PlatformChecker\";var reanimatedJS=new JSReanimated();if(shouldBeUseWeb()){global._frameTimestamp=null;global._setGlobalConsole=function(_val){};global._measure=function(){console.warn(\"[Reanimated] You can't use 'measue' method with Chrome Debugger or with web version\");return{x:0,y:0,width:0,height:0,pageX:0,pageY:0};};global._scrollTo=function(){console.warn(\"[Reanimated] You can't use 'scrollTo' method with Chrome Debugger or with web version\");};global._setGestureState=function(){console.warn(\"[Reanimated] You can't use 'setGestureState' method with Chrome Debugger or with web version\");};}export var _updatePropsJS=function _updatePropsJS(updates,viewRef){if(viewRef._component){var component=viewRef._component;var _Object$keys$reduce=Object.keys(updates).reduce(function(acc,key){var value=updates[key];var index=typeof value==='function'?1:0;acc[index][key]=value;return acc;},[{},{}]),_Object$keys$reduce2=_slicedToArray(_Object$keys$reduce,1),rawStyles=_Object$keys$reduce2[0];if(typeof component.setNativeProps==='function'){setNativeProps(component,rawStyles);}else if(Object.keys(component.props).length>0){Object.keys(component.props).forEach(function(key){if(!rawStyles[key]){return;}var dashedKey=key.replace(/[A-Z]/g,function(m){return'-'+m.toLowerCase();});component._touchableNode.setAttribute(dashedKey,rawStyles[key]);});}else{console.warn('It is not possible to manipulate component');}}};var setNativeProps=function setNativeProps(component,style){var previousStyle=component.previousStyle?component.previousStyle:{};var currentStyle=_extends(_extends({},previousStyle),style);component.previousStyle=currentStyle;component.setNativeProps({style:currentStyle});};export default reanimatedJS;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/index.js"],"names":["JSReanimated","shouldBeUseWeb","reanimatedJS","global","_frameTimestamp","_setGlobalConsole","_val","_measure","console","warn","x","y","width","height","pageX","pageY","_scrollTo","_setGestureState","_updatePropsJS","updates","viewRef","_component","component","Object","keys","reduce","acc","key","value","index","rawStyles","setNativeProps","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","style","previousStyle","currentStyle"],"mappings":"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","sourcesContent":["import JSReanimated from './JSReanimated';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nconst reanimatedJS = new JSReanimated();\nif (shouldBeUseWeb()) {\n    global._frameTimestamp = null;\n    global._setGlobalConsole = (_val) => {\n        // noop\n    };\n    global._measure = () => {\n        console.warn(\"[Reanimated] You can't use 'measue' method with Chrome Debugger or with web version\");\n        return {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            pageX: 0,\n            pageY: 0,\n        };\n    };\n    global._scrollTo = () => {\n        console.warn(\"[Reanimated] You can't use 'scrollTo' method with Chrome Debugger or with web version\");\n    };\n    global._setGestureState = () => {\n        console.warn(\"[Reanimated] You can't use 'setGestureState' method with Chrome Debugger or with web version\");\n    };\n}\nexport const _updatePropsJS = (updates, viewRef) => {\n    if (viewRef._component) {\n        const component = viewRef._component;\n        const [rawStyles] = Object.keys(updates).reduce((acc, key) => {\n            const value = updates[key];\n            const index = typeof value === 'function' ? 1 : 0;\n            acc[index][key] = value;\n            return acc;\n        }, [{}, {}]);\n        if (typeof component.setNativeProps === 'function') {\n            setNativeProps(component, rawStyles);\n        }\n        else if (Object.keys(component.props).length > 0) {\n            Object.keys(component.props).forEach((key) => {\n                if (!rawStyles[key]) {\n                    return;\n                }\n                const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n                component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n            });\n        }\n        else {\n            console.warn('It is not possible to manipulate component');\n        }\n    }\n};\nconst setNativeProps = (component, style) => {\n    const previousStyle = component.previousStyle ? component.previousStyle : {};\n    const currentStyle = Object.assign(Object.assign({}, previousStyle), style);\n    component.previousStyle = currentStyle;\n    component.setNativeProps({ style: currentStyle });\n};\nexport default reanimatedJS;\n"]},"metadata":{},"sourceType":"module"}