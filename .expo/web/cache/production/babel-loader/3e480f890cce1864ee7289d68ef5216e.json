{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import FileSaver from'file-saver';import JSZip from'jszip';function loadImageAsync(uri){return new Promise(function(resolve,reject){var imageSource=new Image();imageSource.crossOrigin='anonymous';imageSource.onload=function(){return resolve(imageSource);};imageSource.onerror=function(){return reject(imageSource);};imageSource.src=uri;});}function drawImageScaled(img,ctx){var canvas=ctx.canvas;ctx.drawImage(img,canvas.width/2-img.width/2,canvas.height/2-img.height/2);}export function createAppIcon(_ref){var color,imageUrl,width,height,canvas,ctx,imageSource;return _regeneratorRuntime.async(function createAppIcon$(_context){while(1){switch(_context.prev=_context.next){case 0:color=_ref.color,imageUrl=_ref.imageUrl,width=_ref.width,height=_ref.height;canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;ctx=canvas.getContext('2d');ctx.fillStyle=color;ctx.fillRect(0,0,canvas.width,canvas.height);if(!imageUrl){_context.next=12;break;}_context.next=10;return _regeneratorRuntime.awrap(loadImageAsync(imageUrl));case 10:imageSource=_context.sent;drawImageScaled(imageSource,ctx);case 12:return _context.abrupt(\"return\",canvas.toDataURL());case 13:case\"end\":return _context.stop();}}},null,null,null,Promise);}function imageUriToBase64(imageUri){return imageUri.substring(imageUri.indexOf('base64,')+'base64,'.length);}export function generateImagesAsync(_ref2){var image,color,splash,splashB64,content,folderName;return _regeneratorRuntime.async(function generateImagesAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:image=_ref2.image,color=_ref2.color;_context2.next=3;return _regeneratorRuntime.awrap(createAppIcon({color:color,imageUrl:image,width:1242,height:2436}));case 3:splash=_context2.sent;splashB64=imageUriToBase64(splash);_context2.next=7;return _regeneratorRuntime.awrap(zipImagesAsync({splash:splashB64}));case 7:content=_context2.sent;folderName=\"expo-splashscreen.zip\";FileSaver.saveAs(content,folderName);case 10:case\"end\":return _context2.stop();}}},null,null,null,Promise);}function zipImagesAsync(_ref3){var splash,zip,content;return _regeneratorRuntime.async(function zipImagesAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:splash=_ref3.splash;zip=new JSZip();zip.file('splash.png',splash,{base64:true});_context3.next=5;return _regeneratorRuntime.awrap(zip.generateAsync({type:'blob'}));case 5:content=_context3.sent;return _context3.abrupt(\"return\",content);case 7:case\"end\":return _context3.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/utils/processImage.ts"],"names":["FileSaver","JSZip","loadImageAsync","uri","Promise","resolve","reject","imageSource","Image","crossOrigin","onload","onerror","src","drawImageScaled","img","ctx","canvas","drawImage","width","height","createAppIcon","color","imageUrl","document","createElement","getContext","fillStyle","fillRect","toDataURL","imageUriToBase64","imageUri","substring","indexOf","length","generateImagesAsync","image","splash","splashB64","zipImagesAsync","content","folderName","saveAs","zip","file","base64","generateAsync","type"],"mappings":"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","sourcesContent":["import FileSaver from 'file-saver';\nimport JSZip from 'jszip';\n\nfunction loadImageAsync(uri: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imageSource = new Image();\n    imageSource.crossOrigin = 'anonymous';\n    imageSource.onload = () => resolve(imageSource);\n    imageSource.onerror = () => reject(imageSource);\n    imageSource.src = uri;\n  });\n}\n\nfunction drawImageScaled(img: HTMLImageElement, ctx: CanvasRenderingContext2D) {\n  var canvas = ctx.canvas;\n  ctx.drawImage(\n    img,\n    canvas.width / 2 - img.width / 2,\n    canvas.height / 2 - img.height / 2\n  );\n}\n\nexport async function createAppIcon({\n  color,\n  imageUrl,\n  width,\n  height,\n}: {\n  color: string;\n  imageUrl?: string;\n  width: number;\n  height?: number;\n}): Promise<string> {\n  let canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext('2d')!;\n\n  // draw color\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  if (imageUrl) {\n    const imageSource = await loadImageAsync(imageUrl);\n    drawImageScaled(imageSource, ctx);\n  }\n\n  // defaults to PNG with no loss\n  return canvas.toDataURL();\n}\n\nfunction imageUriToBase64(imageUri: string): string {\n  return imageUri.substring(imageUri.indexOf('base64,') + 'base64,'.length);\n}\n\nexport async function generateImagesAsync({\n  image,\n  color,\n}: {\n  emojiId?: string;\n  image?: string;\n  color: string;\n}): Promise<void> {\n  const splash = await createAppIcon({\n    color,\n    imageUrl: image,\n    width: 1242,\n    height: 2436,\n  });\n\n  const splashB64 = imageUriToBase64(splash);\n\n  const content = await zipImagesAsync({\n    splash: splashB64,\n  });\n\n  const folderName = `expo-splashscreen.zip`;\n\n  FileSaver.saveAs(content, folderName);\n}\n\nasync function zipImagesAsync({ splash }: { splash: string }) {\n  const zip = new JSZip();\n  zip.file('splash.png', splash, { base64: true });\n  const content = await zip.generateAsync({ type: 'blob' });\n  return content;\n}\n"]},"metadata":{},"sourceType":"module"}