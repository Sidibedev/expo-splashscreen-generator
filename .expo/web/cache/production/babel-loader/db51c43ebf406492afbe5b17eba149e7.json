{"ast":null,"code":"import AppRegistry from\"react-native-web/dist/exports/AppRegistry\";AppRegistry;var originalWarn=console.warn;console.warn=function warn(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(args.length>0&&typeof args[0]==='string'&&(/^Require cycle: .*node_modules/.test(args[0])||/Use UIManager\\.getViewManagerConfig\\('LottieAnimationView'\\) instead\\./.test(args[0])||/ReactNative\\.NativeModules\\.LottieAnimationView\\.getConstants/.test(args[0]))){return;}originalWarn.apply(console,args);};var originalError=console.error;console.error=function error(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}if(args.length>0&&typeof args[0]==='string'&&/^Warning: .* has been extracted/.test(args[0])){return;}originalError.apply(console,args);};","map":{"version":3,"sources":["../../src/environment/react-native-logs.fx.ts"],"names":[],"mappings":"mEAIA,WAAW,CAMX,GAAM,CAAA,YAAY,CAAG,OAAO,CAAC,IAA7B,CACA,OAAO,CAAC,IAAR,CAAe,QAAS,CAAA,IAAT,EAAqB,+BAAJ,IAAI,0CAAJ,IAAI,wBAClC,GACE,IAAI,CAAC,MAAL,CAAc,CAAd,EACA,MAAO,CAAA,IAAI,CAAC,CAAD,CAAX,GAAmB,QADnB,GAEC,iCAAiC,IAAjC,CAAsC,IAAI,CAAC,CAAD,CAA1C,GACC,yEAAyE,IAAzE,CAA8E,IAAI,CAAC,CAAD,CAAlF,CADD,EAEC,gEAAgE,IAAhE,CAAqE,IAAI,CAAC,CAAD,CAAzE,CAJF,CADF,CAME,CACA,OACD,CACD,YAAY,CAAC,KAAb,CAAmB,OAAnB,CAA4B,IAA5B,EACD,CAXD,CAaA,GAAM,CAAA,aAAa,CAAG,OAAO,CAAC,KAA9B,CACA,OAAO,CAAC,KAAR,CAAgB,QAAS,CAAA,KAAT,EAAsB,gCAAJ,IAAI,+CAAJ,IAAI,0BACpC,GACE,IAAI,CAAC,MAAL,CAAc,CAAd,EACA,MAAO,CAAA,IAAI,CAAC,CAAD,CAAX,GAAmB,QADnB,EAEA,kCAAkC,IAAlC,CAAuC,IAAI,CAAC,CAAD,CAA3C,CAHF,CAIE,CACA,OACD,CACD,aAAa,CAAC,KAAd,CAAoB,OAApB,CAA6B,IAA7B,EACD,CATD","sourcesContent":["// AppRegistry transitively installs YellowBox as a side effect, which overrides various console\n// methods that we need to set up before we override them\nimport { AppRegistry } from 'react-native';\n\nAppRegistry; // eslint-disable-line @babel/no-unused-expressions\n\n// NOTE(2018-10-29): temporarily filter out cyclic dependency warnings here since they are noisy and\n// each warning symbolicates a stack trace, which is slow when there are many warnings\n// NOTE(2019-05-27): temporarily filter out LottieAnimationView warnings triggered by\n// unmaintained react-native-safe-module dependency.\nconst originalWarn = console.warn;\nconsole.warn = function warn(...args) {\n  if (\n    args.length > 0 &&\n    typeof args[0] === 'string' &&\n    (/^Require cycle: .*node_modules/.test(args[0]) ||\n      /Use UIManager\\.getViewManagerConfig\\('LottieAnimationView'\\) instead\\./.test(args[0]) ||\n      /ReactNative\\.NativeModules\\.LottieAnimationView\\.getConstants/.test(args[0]))\n  ) {\n    return;\n  }\n  originalWarn.apply(console, args);\n};\n\nconst originalError = console.error;\nconsole.error = function error(...args) {\n  if (\n    args.length > 0 &&\n    typeof args[0] === 'string' &&\n    /^Warning: .* has been extracted/.test(args[0])\n  ) {\n    return;\n  }\n  originalError.apply(console, args);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}