{"ast":null,"code":"var _window$document;export var isDOMAvailable=typeof window!=='undefined'&&!!((_window$document=window.document)!=null&&_window$document.createElement);export var canUseEventListeners=isDOMAvailable&&!!(window.addEventListener||window.attachEvent);export var canUseViewport=isDOMAvailable&&!!window.screen;export var isAsyncDebugging=false;","map":{"version":3,"sources":["../../src/environment/browser.web.ts"],"names":[],"mappings":"qBASA,MAAO,IAAM,CAAA,cAAc,CAAG,MAAO,CAAA,MAAP,GAAkB,WAAlB,EAAiC,CAAC,oBAAC,MAAM,CAAC,QAAR,SAAC,iBAAiB,aAAlB,CAAzD,CACP,MAAO,IAAM,CAAA,oBAAoB,CAC/B,cAAc,EAAI,CAAC,EAAE,MAAM,CAAC,gBAAP,EAA2B,MAAM,CAAC,WAApC,CADd,CAEP,MAAO,IAAM,CAAA,cAAc,CAAG,cAAc,EAAI,CAAC,CAAC,MAAM,CAAC,MAAlD,CACP,MAAO,IAAM,CAAA,gBAAgB,CAAG,KAAzB","sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}