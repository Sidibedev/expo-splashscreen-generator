{"ast":null,"code":"import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";var Point=_createClass(function Point(x,y){_classCallCheck(this,Point);this.x=x;this.y=y;});var Size=_createClass(function Size(width,height){_classCallCheck(this,Size);this.width=width;this.height=height;});var Rect=_createClass(function Rect(x,y,width,height){_classCallCheck(this,Rect);this.x=x;this.y=y;this.width=width;this.height=height;});var swapSizeDimmensions=function swapSizeDimmensions(size){return new Size(size.height,size.width);};var makeChildlessRect=function makeChildlessRect(_ref){var displayInsets=_ref.displayInsets,windowDims=_ref.windowDims,placement=_ref.placement;switch(placement){case'bottom':return new Rect(windowDims.width/2,displayInsets.top,1,1);case'right':return new Rect(displayInsets.left,windowDims.height/2,1,1);case'left':return new Rect(windowDims.width-displayInsets.right,windowDims.height/2,1,1);case'top':default:return new Rect(windowDims.width/2,windowDims.height-displayInsets.bottom,1,1);}};var computeCenterGeometry=function computeCenterGeometry(_ref2){var childRect=_ref2.childRect,contentSize=_ref2.contentSize,displayInsets=_ref2.displayInsets,windowDims=_ref2.windowDims;var maxWidth=windowDims.width-(displayInsets.left+displayInsets.right);var maxHeight=windowDims.height-(displayInsets.top+displayInsets.bottom);var adjustedContentSize=new Size(contentSize.width>=maxWidth?maxWidth:-1,contentSize.height>=maxHeight?maxHeight:-1);var tooltipOrigin=new Point(adjustedContentSize.width===-1?(maxWidth-contentSize.width)/2+displayInsets.left:displayInsets.left,adjustedContentSize.height===-1?(maxHeight-contentSize.height)/2+displayInsets.top:displayInsets.top);var anchorPoint=new Point(childRect.x+childRect.width/2.0,childRect.y);return{tooltipOrigin:tooltipOrigin,anchorPoint:anchorPoint,placement:'center',adjustedContentSize:adjustedContentSize};};var computeTopGeometry=function computeTopGeometry(_ref3){var childRect=_ref3.childRect,contentSize=_ref3.contentSize,arrowSize=_ref3.arrowSize,displayInsets=_ref3.displayInsets,windowDims=_ref3.windowDims,childContentSpacing=_ref3.childContentSpacing;var maxWidth=windowDims.width-(displayInsets.left+displayInsets.right);var adjustedContentSize=new Size(Math.min(maxWidth,contentSize.width),contentSize.height);var tooltipOrigin=new Point(contentSize.width>=maxWidth?displayInsets.left:Math.max(displayInsets.left,childRect.x+(childRect.width-adjustedContentSize.width)/2),Math.max(displayInsets.top-childContentSpacing,childRect.y-contentSize.height-arrowSize.height-childContentSpacing));var anchorPoint=new Point(childRect.x+childRect.width/2.0,childRect.y-childContentSpacing);if(anchorPoint.x+arrowSize.width>windowDims.width-displayInsets.right){anchorPoint.x=windowDims.width-displayInsets.right-Math.abs(arrowSize.width-arrowSize.height)-8;}else if(anchorPoint.x-arrowSize.width<displayInsets.left){anchorPoint.x=displayInsets.left+Math.abs(arrowSize.width-arrowSize.height)+8;}var topPlacementBottomBound=anchorPoint.y-arrowSize.height;if(tooltipOrigin.y+contentSize.height>topPlacementBottomBound){adjustedContentSize.height=topPlacementBottomBound-tooltipOrigin.y;}if(tooltipOrigin.x+contentSize.width>maxWidth){tooltipOrigin.x=windowDims.width-displayInsets.right-adjustedContentSize.width;}return{tooltipOrigin:tooltipOrigin,anchorPoint:anchorPoint,placement:'top',adjustedContentSize:adjustedContentSize};};var computeBottomGeometry=function computeBottomGeometry(_ref4){var childRect=_ref4.childRect,contentSize=_ref4.contentSize,arrowSize=_ref4.arrowSize,displayInsets=_ref4.displayInsets,windowDims=_ref4.windowDims,childContentSpacing=_ref4.childContentSpacing;var maxWidth=windowDims.width-(displayInsets.left+displayInsets.right);var adjustedContentSize=new Size(Math.min(maxWidth,contentSize.width),contentSize.height);var tooltipOrigin=new Point(contentSize.width>=maxWidth?displayInsets.left:Math.max(displayInsets.left,childRect.x+(childRect.width-adjustedContentSize.width)/2),Math.min(windowDims.height-displayInsets.bottom+childContentSpacing,childRect.y+childRect.height+arrowSize.height+childContentSpacing));var anchorPoint=new Point(childRect.x+childRect.width/2.0,childRect.y+childRect.height+childContentSpacing);if(anchorPoint.x+arrowSize.width>windowDims.width-displayInsets.right){anchorPoint.x=windowDims.width-displayInsets.right-Math.abs(arrowSize.width-arrowSize.height)-8;}else if(anchorPoint.x-arrowSize.width<displayInsets.left){anchorPoint.x=displayInsets.left+Math.abs(arrowSize.width-arrowSize.height)+8;}if(tooltipOrigin.y+contentSize.height>windowDims.height-displayInsets.bottom){adjustedContentSize.height=windowDims.height-displayInsets.bottom-tooltipOrigin.y;}if(tooltipOrigin.x+contentSize.width>maxWidth){tooltipOrigin.x=windowDims.width-displayInsets.right-adjustedContentSize.width;}return{tooltipOrigin:tooltipOrigin,anchorPoint:anchorPoint,placement:'bottom',adjustedContentSize:adjustedContentSize};};var computeLeftGeometry=function computeLeftGeometry(_ref5){var childRect=_ref5.childRect,contentSize=_ref5.contentSize,arrowSize=_ref5.arrowSize,displayInsets=_ref5.displayInsets,windowDims=_ref5.windowDims,childContentSpacing=_ref5.childContentSpacing;var maxHeight=windowDims.height-(displayInsets.top+displayInsets.bottom);var adjustedContentSize=new Size(contentSize.width,Math.min(maxHeight,contentSize.height));var tooltipOrigin=new Point(Math.max(displayInsets.left-childContentSpacing,childRect.x-contentSize.width-arrowSize.width-childContentSpacing),contentSize.height>=maxHeight?displayInsets.top:Math.max(displayInsets.top,childRect.y+(childRect.height-adjustedContentSize.height)/2));var anchorPoint=new Point(childRect.x-childContentSpacing,childRect.y+childRect.height/2.0);if(anchorPoint.y+arrowSize.width>windowDims.height-displayInsets.bottom){anchorPoint.y=windowDims.height-displayInsets.bottom-Math.abs(arrowSize.height-arrowSize.width)-8;}else if(anchorPoint.y-arrowSize.height<displayInsets.top){anchorPoint.y=displayInsets.top+Math.abs(arrowSize.height-arrowSize.width)+8;}var leftPlacementRightBound=anchorPoint.x-arrowSize.width;if(tooltipOrigin.x+contentSize.width>leftPlacementRightBound){adjustedContentSize.width=leftPlacementRightBound-tooltipOrigin.x;}if(tooltipOrigin.y+contentSize.height>maxHeight){tooltipOrigin.y=windowDims.height-displayInsets.bottom-adjustedContentSize.height;}return{tooltipOrigin:tooltipOrigin,anchorPoint:anchorPoint,placement:'left',adjustedContentSize:adjustedContentSize};};var computeRightGeometry=function computeRightGeometry(_ref6){var childRect=_ref6.childRect,contentSize=_ref6.contentSize,arrowSize=_ref6.arrowSize,displayInsets=_ref6.displayInsets,windowDims=_ref6.windowDims,childContentSpacing=_ref6.childContentSpacing;var maxHeight=windowDims.height-(displayInsets.top+displayInsets.bottom);var adjustedContentSize=new Size(contentSize.width,Math.min(maxHeight,contentSize.height));var tooltipOrigin=new Point(Math.min(windowDims.width-displayInsets.right+childContentSpacing,childRect.x+childRect.width+arrowSize.width+childContentSpacing),contentSize.height>=maxHeight?displayInsets.top:Math.max(displayInsets.top,childRect.y+(childRect.height-adjustedContentSize.height)/2));var anchorPoint=new Point(childRect.x+childRect.width+childContentSpacing,childRect.y+childRect.height/2.0);if(anchorPoint.y+arrowSize.width>windowDims.height-displayInsets.bottom){anchorPoint.y=windowDims.height-displayInsets.bottom-Math.abs(arrowSize.height-arrowSize.width)-8;}else if(anchorPoint.y-arrowSize.height<displayInsets.top){anchorPoint.y=displayInsets.top+Math.abs(arrowSize.height-arrowSize.width)+8;}if(tooltipOrigin.x+contentSize.width>windowDims.width-displayInsets.right){adjustedContentSize.width=windowDims.width-displayInsets.right-tooltipOrigin.x;}if(tooltipOrigin.y+contentSize.height>maxHeight){tooltipOrigin.y=windowDims.height-displayInsets.bottom-adjustedContentSize.height;}return{tooltipOrigin:tooltipOrigin,anchorPoint:anchorPoint,placement:'right',adjustedContentSize:adjustedContentSize};};export{Point,Size,Rect,swapSizeDimmensions,makeChildlessRect,computeCenterGeometry,computeTopGeometry,computeBottomGeometry,computeLeftGeometry,computeRightGeometry};","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-walkthrough-tooltip/src/geom.js"],"names":["Point","x","y","Size","width","height","Rect","swapSizeDimmensions","size","makeChildlessRect","displayInsets","windowDims","placement","top","left","right","bottom","computeCenterGeometry","childRect","contentSize","maxWidth","maxHeight","adjustedContentSize","tooltipOrigin","anchorPoint","computeTopGeometry","arrowSize","childContentSpacing","Math","min","max","abs","topPlacementBottomBound","computeBottomGeometry","computeLeftGeometry","leftPlacementRightBound","computeRightGeometry"],"mappings":"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","sourcesContent":["class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nclass Size {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n}\n\nclass Rect {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nconst swapSizeDimmensions = size => new Size(size.height, size.width);\n\nconst makeChildlessRect = ({ displayInsets, windowDims, placement }) => {\n  switch (placement) {\n    case 'bottom':\n      return new Rect(windowDims.width / 2, displayInsets.top, 1, 1);\n\n    case 'right':\n      return new Rect(displayInsets.left, windowDims.height / 2, 1, 1);\n\n    case 'left':\n      return new Rect(\n        windowDims.width - displayInsets.right,\n        windowDims.height / 2,\n        1,\n        1,\n      );\n    case 'top':\n    default:\n      return new Rect(\n        windowDims.width / 2,\n        windowDims.height - displayInsets.bottom,\n        1,\n        1,\n      );\n  }\n};\n\nconst computeCenterGeometry = ({\n  childRect,\n  contentSize,\n  displayInsets,\n  windowDims,\n}) => {\n  const maxWidth =\n    windowDims.width - (displayInsets.left + displayInsets.right);\n  const maxHeight =\n    windowDims.height - (displayInsets.top + displayInsets.bottom);\n\n  const adjustedContentSize = new Size(\n    contentSize.width >= maxWidth ? maxWidth : -1,\n    contentSize.height >= maxHeight ? maxHeight : -1,\n  );\n\n  const tooltipOrigin = new Point(\n    adjustedContentSize.width === -1\n      ? (maxWidth - contentSize.width) / 2 + displayInsets.left\n      : displayInsets.left,\n    adjustedContentSize.height === -1\n      ? (maxHeight - contentSize.height) / 2 + displayInsets.top\n      : displayInsets.top,\n  );\n\n  const anchorPoint = new Point(\n    childRect.x + childRect.width / 2.0,\n    childRect.y,\n  );\n\n  return {\n    tooltipOrigin,\n    anchorPoint,\n    placement: 'center',\n    adjustedContentSize,\n  };\n};\n\nconst computeTopGeometry = ({\n  childRect,\n  contentSize,\n  arrowSize,\n  displayInsets,\n  windowDims,\n  childContentSpacing,\n}) => {\n  const maxWidth =\n    windowDims.width - (displayInsets.left + displayInsets.right);\n\n  const adjustedContentSize = new Size(\n    Math.min(maxWidth, contentSize.width),\n    contentSize.height,\n  );\n\n  const tooltipOrigin = new Point(\n    contentSize.width >= maxWidth\n      ? displayInsets.left\n      : Math.max(\n          displayInsets.left,\n          childRect.x + (childRect.width - adjustedContentSize.width) / 2,\n        ),\n    Math.max(\n      displayInsets.top - childContentSpacing,\n      childRect.y - contentSize.height - arrowSize.height - childContentSpacing,\n    ),\n  );\n\n  const anchorPoint = new Point(\n    childRect.x + childRect.width / 2.0,\n    childRect.y - childContentSpacing,\n  );\n\n  // make sure arrow does not extend beyond displayInsets\n  if (\n    anchorPoint.x + arrowSize.width >\n    windowDims.width - displayInsets.right\n  ) {\n    anchorPoint.x =\n      windowDims.width -\n      displayInsets.right -\n      Math.abs(arrowSize.width - arrowSize.height) -\n      8;\n  } else if (anchorPoint.x - arrowSize.width < displayInsets.left) {\n    anchorPoint.x =\n      displayInsets.left + Math.abs(arrowSize.width - arrowSize.height) + 8;\n  }\n\n  const topPlacementBottomBound = anchorPoint.y - arrowSize.height;\n\n  if (tooltipOrigin.y + contentSize.height > topPlacementBottomBound) {\n    adjustedContentSize.height = topPlacementBottomBound - tooltipOrigin.y;\n  }\n\n  if (tooltipOrigin.x + contentSize.width > maxWidth) {\n    tooltipOrigin.x =\n      windowDims.width - displayInsets.right - adjustedContentSize.width;\n  }\n\n  return {\n    tooltipOrigin,\n    anchorPoint,\n    placement: 'top',\n    adjustedContentSize,\n  };\n};\n\nconst computeBottomGeometry = ({\n  childRect,\n  contentSize,\n  arrowSize,\n  displayInsets,\n  windowDims,\n  childContentSpacing,\n}) => {\n  const maxWidth =\n    windowDims.width - (displayInsets.left + displayInsets.right);\n\n  const adjustedContentSize = new Size(\n    Math.min(maxWidth, contentSize.width),\n    contentSize.height,\n  );\n\n  const tooltipOrigin = new Point(\n    contentSize.width >= maxWidth\n      ? displayInsets.left\n      : Math.max(\n          displayInsets.left,\n          childRect.x + (childRect.width - adjustedContentSize.width) / 2,\n        ),\n    Math.min(\n      windowDims.height - displayInsets.bottom + childContentSpacing,\n      childRect.y + childRect.height + arrowSize.height + childContentSpacing,\n    ),\n  );\n  const anchorPoint = new Point(\n    childRect.x + childRect.width / 2.0,\n    childRect.y + childRect.height + childContentSpacing,\n  );\n\n  // make sure arrow does not extend beyond displayInsets\n  if (\n    anchorPoint.x + arrowSize.width >\n    windowDims.width - displayInsets.right\n  ) {\n    anchorPoint.x =\n      windowDims.width -\n      displayInsets.right -\n      Math.abs(arrowSize.width - arrowSize.height) -\n      8;\n  } else if (anchorPoint.x - arrowSize.width < displayInsets.left) {\n    anchorPoint.x =\n      displayInsets.left + Math.abs(arrowSize.width - arrowSize.height) + 8;\n  }\n\n  if (\n    tooltipOrigin.y + contentSize.height >\n    windowDims.height - displayInsets.bottom\n  ) {\n    adjustedContentSize.height =\n      windowDims.height - displayInsets.bottom - tooltipOrigin.y;\n  }\n\n  if (tooltipOrigin.x + contentSize.width > maxWidth) {\n    tooltipOrigin.x =\n      windowDims.width - displayInsets.right - adjustedContentSize.width;\n  }\n\n  return {\n    tooltipOrigin,\n    anchorPoint,\n    placement: 'bottom',\n    adjustedContentSize,\n  };\n};\n\nconst computeLeftGeometry = ({\n  childRect,\n  contentSize,\n  arrowSize,\n  displayInsets,\n  windowDims,\n  childContentSpacing,\n}) => {\n  const maxHeight =\n    windowDims.height - (displayInsets.top + displayInsets.bottom);\n\n  const adjustedContentSize = new Size(\n    contentSize.width,\n    Math.min(maxHeight, contentSize.height),\n  );\n\n  const tooltipOrigin = new Point(\n    Math.max(\n      displayInsets.left - childContentSpacing,\n      childRect.x - contentSize.width - arrowSize.width - childContentSpacing,\n    ),\n    contentSize.height >= maxHeight\n      ? displayInsets.top\n      : Math.max(\n          displayInsets.top,\n          childRect.y + (childRect.height - adjustedContentSize.height) / 2,\n        ),\n  );\n\n  const anchorPoint = new Point(\n    childRect.x - childContentSpacing,\n    childRect.y + childRect.height / 2.0,\n  );\n\n  // make sure arrow does not extend beyond displayInsets\n  if (\n    anchorPoint.y + arrowSize.width >\n    windowDims.height - displayInsets.bottom\n  ) {\n    anchorPoint.y =\n      windowDims.height -\n      displayInsets.bottom -\n      Math.abs(arrowSize.height - arrowSize.width) -\n      8;\n  } else if (anchorPoint.y - arrowSize.height < displayInsets.top) {\n    anchorPoint.y =\n      displayInsets.top + Math.abs(arrowSize.height - arrowSize.width) + 8;\n  }\n\n  const leftPlacementRightBound = anchorPoint.x - arrowSize.width;\n\n  if (tooltipOrigin.x + contentSize.width > leftPlacementRightBound) {\n    adjustedContentSize.width = leftPlacementRightBound - tooltipOrigin.x;\n  }\n\n  if (tooltipOrigin.y + contentSize.height > maxHeight) {\n    tooltipOrigin.y =\n      windowDims.height - displayInsets.bottom - adjustedContentSize.height;\n  }\n\n  return {\n    tooltipOrigin,\n    anchorPoint,\n    placement: 'left',\n    adjustedContentSize,\n  };\n};\n\nconst computeRightGeometry = ({\n  childRect,\n  contentSize,\n  arrowSize,\n  displayInsets,\n  windowDims,\n  childContentSpacing,\n}) => {\n  const maxHeight =\n    windowDims.height - (displayInsets.top + displayInsets.bottom);\n\n  const adjustedContentSize = new Size(\n    contentSize.width,\n    Math.min(maxHeight, contentSize.height),\n  );\n\n  const tooltipOrigin = new Point(\n    Math.min(\n      windowDims.width - displayInsets.right + childContentSpacing,\n      childRect.x + childRect.width + arrowSize.width + childContentSpacing,\n    ),\n    contentSize.height >= maxHeight\n      ? displayInsets.top\n      : Math.max(\n          displayInsets.top,\n          childRect.y + (childRect.height - adjustedContentSize.height) / 2,\n        ),\n  );\n\n  const anchorPoint = new Point(\n    childRect.x + childRect.width + childContentSpacing,\n    childRect.y + childRect.height / 2.0,\n  );\n\n  // make sure arrow does not extend beyond displayInsets\n  if (\n    anchorPoint.y + arrowSize.width >\n    windowDims.height - displayInsets.bottom\n  ) {\n    anchorPoint.y =\n      windowDims.height -\n      displayInsets.bottom -\n      Math.abs(arrowSize.height - arrowSize.width) -\n      8;\n  } else if (anchorPoint.y - arrowSize.height < displayInsets.top) {\n    anchorPoint.y =\n      displayInsets.top + Math.abs(arrowSize.height - arrowSize.width) + 8;\n  }\n\n  if (\n    tooltipOrigin.x + contentSize.width >\n    windowDims.width - displayInsets.right\n  ) {\n    adjustedContentSize.width =\n      windowDims.width - displayInsets.right - tooltipOrigin.x;\n  }\n\n  if (tooltipOrigin.y + contentSize.height > maxHeight) {\n    tooltipOrigin.y =\n      windowDims.height - displayInsets.bottom - adjustedContentSize.height;\n  }\n\n  return {\n    tooltipOrigin,\n    anchorPoint,\n    placement: 'right',\n    adjustedContentSize,\n  };\n};\n\nexport {\n  Point,\n  Size,\n  Rect,\n  swapSizeDimmensions,\n  makeChildlessRect,\n  computeCenterGeometry,\n  computeTopGeometry,\n  computeBottomGeometry,\n  computeLeftGeometry,\n  computeRightGeometry,\n};\n"]},"metadata":{},"sourceType":"module"}