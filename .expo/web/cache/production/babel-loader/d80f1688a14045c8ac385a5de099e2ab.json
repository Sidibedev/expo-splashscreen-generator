{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import{processColor}from\"./Colors\";import{makeShareable,isConfigured}from\"./core\";import{_updatePropsJS}from\"./js-reanimated\";import{shouldBeUseWeb}from\"./PlatformChecker\";export var colorProps=['backgroundColor','borderBottomColor','borderColor','borderLeftColor','borderRightColor','borderTopColor','borderStartColor','borderEndColor','color','shadowColor','textDecorationColor','tintColor','textShadowColor','overlayColor'];export var ColorProperties=!isConfigured()?[]:makeShareable(colorProps);var updatePropsByPlatform;if(shouldBeUseWeb()){updatePropsByPlatform=function(){var _f=function _f(_,updates,maybeViewRef){if(maybeViewRef){maybeViewRef.items.forEach(function(item,_){_updatePropsJS(updates,item);});}};_f._closure={_updatePropsJS:_updatePropsJS};_f.asString=\"function _f(_,updates,maybeViewRef){const{_updatePropsJS}=jsThis._closure;{if(maybeViewRef){maybeViewRef.items.forEach(function(item,_){_updatePropsJS(updates,item);});}}}\";_f.__workletHash=2597780801718;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/UpdateProps.js (25:28)\";global.__reanimatedWorkletInit(_f);return _f;}();}else{updatePropsByPlatform=function(){var _f=function _f(viewDescriptors,updates,_){for(var key in updates){if(ColorProperties.indexOf(key)!==-1){updates[key]=processColor(updates[key]);}}viewDescriptors.value.forEach(function(viewDescriptor){_updateProps(viewDescriptor.tag,viewDescriptor.name||'RCTView',updates);});};_f._closure={ColorProperties:ColorProperties,processColor:processColor};_f.asString=\"function _f(viewDescriptors,updates,_){const{ColorProperties,processColor}=jsThis._closure;{for(const key in updates){if(ColorProperties.indexOf(key)!==-1){updates[key]=processColor(updates[key]);}}viewDescriptors.value.forEach(function(viewDescriptor){_updateProps(viewDescriptor.tag,viewDescriptor.name||'RCTView',updates);});}}\";_f.__workletHash=5208286904059;_f.__location=\"/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/UpdateProps.js (35:28)\";global.__reanimatedWorkletInit(_f);return _f;}();}export var updateProps=updatePropsByPlatform;export var updatePropsJestWrapper=function updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters){adapters.forEach(function(adapter){adapter(updates);});animatedStyle.current.value=_extends(_extends({},animatedStyle.current.value),updates);updateProps(viewDescriptors,updates,maybeViewRef);};export default updateProps;","map":{"version":3,"sources":["/Users/mas/Documents/perso/expo-splashscreen-generator/node_modules/react-native-reanimated/lib/reanimated2/UpdateProps.js"],"names":["processColor","makeShareable","isConfigured","_updatePropsJS","shouldBeUseWeb","colorProps","ColorProperties","updatePropsByPlatform","_","updates","maybeViewRef","items","forEach","item","viewDescriptors","key","indexOf","value","viewDescriptor","_updateProps","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current"],"mappings":"qDAAA,OAASA,YAAT,gBACA,OAASC,aAAT,CAAwBC,YAAxB,cACA,OAASC,cAAT,uBACA,OAASC,cAAT,yBAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,CACtB,iBADsB,CAEtB,mBAFsB,CAGtB,aAHsB,CAItB,iBAJsB,CAKtB,kBALsB,CAMtB,gBANsB,CAOtB,kBAPsB,CAQtB,gBARsB,CAStB,OATsB,CAUtB,aAVsB,CAWtB,qBAXsB,CAYtB,WAZsB,CAatB,iBAbsB,CActB,cAdsB,CAAnB,CAgBP,MAAO,IAAMC,CAAAA,eAAe,CAAG,CAACJ,YAAY,EAAb,CAAkB,EAAlB,CAAuBD,aAAa,CAACI,UAAD,CAA5D,CACP,GAAIE,CAAAA,qBAAJ,CACA,GAAIH,cAAc,EAAlB,CAAsB,CAClBG,qBAAqB,+BAAIC,CAAJ,CAAOC,OAAP,CAAgBC,YAAhB,CAAiC,CAElD,GAAIA,YAAJ,CAAkB,CACdA,YAAY,CAACC,KAAb,CAAmBC,OAAnB,CAA2B,SAACC,IAAD,CAAOL,CAAP,CAAa,CACpCL,cAAc,CAACM,OAAD,CAAUI,IAAV,CAAd,CACH,CAFD,EAGH,CACJ,CAPoB,6BApBnBV,cAoBmB,8ZAArB,CAQH,CATD,IAUK,CACDI,qBAAqB,+BAAIO,eAAJ,CAAqBL,OAArB,CAA8BD,CAA9B,CAAoC,CAErD,IAAK,GAAMO,CAAAA,GAAX,GAAkBN,CAAAA,OAAlB,CAA2B,CACvB,GAAIH,eAAe,CAACU,OAAhB,CAAwBD,GAAxB,IAAiC,CAAC,CAAtC,CAAyC,CACrCN,OAAO,CAACM,GAAD,CAAP,CAAef,YAAY,CAACS,OAAO,CAACM,GAAD,CAAR,CAA3B,CACH,CACJ,CACDD,eAAe,CAACG,KAAhB,CAAsBL,OAAtB,CAA8B,SAACM,cAAD,CAAoB,CAC9CC,YAAY,CAACD,cAAc,CAACE,GAAhB,CAAqBF,cAAc,CAACG,IAAf,EAAuB,SAA5C,CAAuDZ,OAAvD,CAAZ,CACH,CAFD,EAGH,CAVoB,8BA/BjBH,eA+BiB,cA9BJN,YA8BI,6jBAArB,CAWH,CACD,MAAO,IAAMsB,CAAAA,WAAW,CAAGf,qBAApB,CACP,MAAO,IAAMgB,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACT,eAAD,CAAkBL,OAAlB,CAA2BC,YAA3B,CAAyCc,aAAzC,CAAwDC,QAAxD,CAAqE,CACvGA,QAAQ,CAACb,OAAT,CAAiB,SAACc,OAAD,CAAa,CAC1BA,OAAO,CAACjB,OAAD,CAAP,CACH,CAFD,EAGAe,aAAa,CAACG,OAAd,CAAsBV,KAAtB,CAA8B,SAAc,SAAc,EAAd,CAAkBO,aAAa,CAACG,OAAd,CAAsBV,KAAxC,CAAd,CAA8DR,OAA9D,CAA9B,CACAa,WAAW,CAACR,eAAD,CAAkBL,OAAlB,CAA2BC,YAA3B,CAAX,CACH,CANM,CAOP,cAAeY,CAAAA,WAAf","sourcesContent":["import { processColor } from './Colors';\nimport { makeShareable, isConfigured } from './core';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n    'backgroundColor',\n    'borderBottomColor',\n    'borderColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor',\n    'borderStartColor',\n    'borderEndColor',\n    'color',\n    'shadowColor',\n    'textDecorationColor',\n    'tintColor',\n    'textShadowColor',\n    'overlayColor',\n];\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n    updatePropsByPlatform = (_, updates, maybeViewRef) => {\n        'worklet';\n        if (maybeViewRef) {\n            maybeViewRef.items.forEach((item, _) => {\n                _updatePropsJS(updates, item);\n            });\n        }\n    };\n}\nelse {\n    updatePropsByPlatform = (viewDescriptors, updates, _) => {\n        'worklet';\n        for (const key in updates) {\n            if (ColorProperties.indexOf(key) !== -1) {\n                updates[key] = processColor(updates[key]);\n            }\n        }\n        viewDescriptors.value.forEach((viewDescriptor) => {\n            _updateProps(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n        });\n    };\n}\nexport const updateProps = updatePropsByPlatform;\nexport const updatePropsJestWrapper = (viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) => {\n    adapters.forEach((adapter) => {\n        adapter(updates);\n    });\n    animatedStyle.current.value = Object.assign(Object.assign({}, animatedStyle.current.value), updates);\n    updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;\n"]},"metadata":{},"sourceType":"module"}