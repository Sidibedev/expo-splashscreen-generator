{"version":3,"sources":["constants/colors.js","utils/processImage.ts","constants/fonts.js","Style.js","components/Button.js","components/ColorPicker.js","components/Footer.js","components/SplashscreenConfig.js","components/SplashscreenPreview.js","assets/svg/Empty.js","components/Empty.js","components/SplashscreenContainer.js","hooks/useDimensions.ts","pages/Homescreen.js","App.js"],"names":["COLORS","COLORPICKER_COLORS","loadImageAsync","uri","Promise","resolve","reject","imageSource","Image","crossOrigin","onload","onerror","src","drawImageScaled","img","ctx","canvas","drawImage","width","height","createAppIcon","a","async","color","imageUrl","document","createElement","getContext","fillStyle","fillRect","toDataURL","generateImagesAsync","image","splash","splashB64","imageUri","substring","indexOf","length","zipImagesAsync","content","FileSaver","saveAs","zip","JSZip","file","base64","generateAsync","type","FONTS","medium","semi","bold","FONTSIZE","styles","StyleSheet","create","container","flex","backgroundColor","configContainer","justifyContent","flexDirection","paddingHorizontal","alignItems","config","alignSelf","preview","title","letterSpacing","fontSize","fontFamily","previewTitle","fontWeight","marginBottom","regular","previewContainer","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","downloadButton","paddingVertical","downloadButtonDisabled","opacity","downloadButtonText","subtitle","uploadContainer","marginVertical","padding","dot","marginHorizontal","row","buttonText","logoPlaceholder","borderWidth","borderStyle","borderColor","header","footerContainer","position","bottom","footerText","link","logo","emptyContainer","Button","disabled","onPress","style","TouchableOpacity","Text","ColorView","size","View","ColorPicker","isMobile","onValueChanged","props","React","useState","text","onTextChanged","useMemo","reverse","ScrollView","minHeight","COLOR_SIZE","maxHeight","flexShrink","flexGrow","maxWidth","contentContainerStyle","flexWrap","horizontal","pagingEnabled","map","margin","ColorPickerInput","value","onSubmit","minWidth","overflow","TextInput","autoCapitalize","autoCorrect","replace","onChangeText","hex","lh","String","charAt","tinycolor","isValid","isValidHex","toHex","outlineColor","Footer","goToTwitter","useCallback","window","open","goToGithub","memo","setColor","setLogo","console","log","visibleColorTooltip","setVisibleColorTooltip","openCloseTooltip","ImagePicker","mediaTypes","All","allowsEditing","aspect","quality","result","cancelled","isVisible","closeOnContentInteraction","contentStyle","marginTop","animated","arrowSize","placement","showChildInTooltip","onClose","onDownload","from","scale","animate","transition","resizeMode","source","EmptyIcon","data-name","viewBox","d","transform","fill","x","y","cx","cy","r","points","Empty","textAlign","SplashscreenContainer","Dimensions","get","dims","setDims","useEffect","handleChange","addEventListener","removeEventListener","useDimensions","Analytics","screen","purpose","Homescreen","App","useFonts","Poppins_700Bold","Poppins_500Medium","Poppins_600SemiBold"],"mappings":"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","file":"static/js/app.0cffc780.chunk.js","sourcesContent":["export const COLORS = {\n    primary: \"#0b0b0b\",\n    secondary: \"#1E2024\",\n    tint: \"#808080\",\n    white: \"#ccc\"\n}\n\n\nexport const COLORPICKER_COLORS = [\n    \"#f44336\",\n    \"#e91e63\",\n    \"#EB144C\",\n    \"#9900EF\",\n    \"#9c27b0\",\n    \"#673ab7\",\n    \"#3f51b5\",\n    \"#2196f3\",\n    \"#03a9f4\",\n    \"#00bcd4\",\n    \"#009688\",\n    \"#4caf50\",\n    \"#8bc34a\",\n    \"#7BDCB5\",\n    \"#00D084\",\n    \"#ffeb3b\",\n    \"#ffc107\",\n    \"#ff9800\",\n    \"#ff5722\",\n    \"#607d8b\",\n    \"#999\",\n    \"#ABB8C3\",\n    \"black\",\n    \"white\",\n];\n","import FileSaver from 'file-saver';\nimport JSZip from 'jszip';\n\nfunction loadImageAsync(uri: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imageSource = new Image();\n    imageSource.crossOrigin = 'anonymous';\n    imageSource.onload = () => resolve(imageSource);\n    imageSource.onerror = () => reject(imageSource);\n    imageSource.src = uri;\n  });\n}\n\nfunction drawImageScaled(img: HTMLImageElement, ctx: CanvasRenderingContext2D) {\n  var canvas = ctx.canvas;\n  ctx.drawImage(\n    img,\n    canvas.width / 2 - img.width / 2,\n    canvas.height / 2 - img.height / 2\n  );\n}\n\nexport async function createAppIcon({\n  color,\n  imageUrl,\n  width,\n  height,\n}: {\n  color: string;\n  imageUrl?: string;\n  width: number;\n  height?: number;\n}): Promise<string> {\n  let canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext('2d')!;\n\n  // draw color\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  if (imageUrl) {\n    const imageSource = await loadImageAsync(imageUrl);\n    drawImageScaled(imageSource, ctx);\n  }\n\n  // defaults to PNG with no loss\n  return canvas.toDataURL();\n}\n\nfunction imageUriToBase64(imageUri: string): string {\n  return imageUri.substring(imageUri.indexOf('base64,') + 'base64,'.length);\n}\n\nexport async function generateImagesAsync({\n  image,\n  color,\n}: {\n  emojiId?: string;\n  image?: string;\n  color: string;\n}): Promise<void> {\n  const splash = await createAppIcon({\n    color,\n    imageUrl: image,\n    width: 1242,\n    height: 2436,\n  });\n\n  const splashB64 = imageUriToBase64(splash);\n\n  const content = await zipImagesAsync({\n    splash: splashB64,\n  });\n\n  const folderName = `expo-splashscreen.zip`;\n\n  FileSaver.saveAs(content, folderName);\n}\n\nasync function zipImagesAsync({ splash }: { splash: string }) {\n  const zip = new JSZip();\n  zip.file('splash.png', splash, { base64: true });\n  const content = await zip.generateAsync({ type: 'blob' });\n  return content;\n}\n","export const FONTS = {\n    medium: \"Poppins_500Medium\",\n    semi: \"Poppins_600SemiBold\",\n    bold: \"Poppins_700Bold\",\n}\n\nexport const FONTSIZE = {\n    small: 12,\n    medium: 18,\n    big: 30\n}","import { StyleSheet } from \"react-native\";\nimport { COLORS } from \"./constants/colors\";\nimport { FONTS, FONTSIZE } from \"./constants/fonts\";\n\nexport const styles = StyleSheet.create({\n\n    container: {\n        flex: 1,\n        backgroundColor: COLORS.primary,\n    },\n    configContainer: {\n        flex: 10,\n        backgroundColor: COLORS.primary,\n        justifyContent: 'center',\n        flexDirection: \"column\",\n        paddingHorizontal: 10,\n        alignItems: \"baseline\"\n    },\n    config: {\n        alignSelf: 'center',\n        width: '85%',\n        flex: 1,\n        justifyContent: 'center',\n    },\n    preview: {\n        flex: 6,\n        backgroundColor: COLORS.secondary,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    title: {\n        letterSpacing: -0.5,\n        color: COLORS.white,\n        fontSize: FONTSIZE.big,\n        fontFamily: FONTS.bold\n    },\n    previewTitle: {\n        color: COLORS.white,\n        fontWeight: \"bold\",\n        fontSize: FONTSIZE.medium,\n        marginBottom: 40,\n        fontFamily: FONTS.regular,\n        letterSpacing: -0.8\n    },\n    previewContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"60%\",\n        height: \"70%\",\n        backgroundColor: COLORS.secondary,\n        borderRadius: 20,\n        shadowColor: COLORS.primary,\n        shadowOffset: {\n            width: 5,\n            height: 5,\n\n        },\n        shadowOpacity: 2.0,\n        shadowRadius: 30,\n\n    },\n    downloadButton: {\n        paddingHorizontal: 20,\n        paddingVertical: 10,\n        backgroundColor: COLORS.tint,\n        borderRadius: 15,\n    },\n    downloadButtonDisabled: {\n        paddingHorizontal: 20,\n        paddingVertical: 10,\n        backgroundColor: COLORS.tint,\n        opacity: 0.2,\n        borderRadius: 15,\n    },\n    downloadButtonText: {\n        color: COLORS.primary,\n        fontFamily: FONTS.medium\n    },\n    subtitle: {\n        color: \"gray\",\n        fontFamily: FONTS.regular,\n        fontSize: FONTSIZE.medium, letterSpacing: -0.5, width: \"95%\"\n    },\n    uploadContainer: {\n        width: \"90%\",\n        backgroundColor: COLORS.secondary,\n        height: 100,\n        borderRadius: 15,\n        marginVertical: 20, justifyContent: \"center\",\n        padding: 20\n    },\n    dot: {\n        width: 5, height: \"90%\", marginHorizontal: 10, backgroundColor: COLORS.tint, borderRadius: 100\n    }\n    , row: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        height: \"100%\"\n    }, buttonText: {\n        fontFamily: FONTS.medium\n    },\n    logoPlaceholder: {\n        width: 100, height: 100,\n        borderRadius: 10,\n        borderWidth: 2,\n        borderStyle: \"dashed\",\n        borderColor: \"gray\",\n    },\n    content: {\n        flex: 1,\n        flexDirection: \"row\"\n    },\n    header: {\n        marginBottom: 30\n    },\n    footerContainer: {\n        position: \"absolute\",\n        bottom: 20\n    },\n    footerText: {\n        color: COLORS.white,\n        fontFamily: FONTS.medium,\n        fontSize: FONTSIZE.small\n    },\n    link: {\n        color: COLORS.tint,\n        fontFamily: FONTS.medium\n    },\n    logo: { width: 100, height: 100 },\n    emptyContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: \"center\"\n    }\n})\n","import { View, Text, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport { styles } from '../Style'\n\nexport default function Button({ title, disabled, onPress, style }) {\n    return (\n        <TouchableOpacity\n            disabled={disabled}\n            onPress={onPress}\n            style={[\n                disabled ? styles.downloadButtonDisabled : styles.downloadButton,\n                style\n            ]}\n        >\n            <Text style={styles.downloadButtonText}>{title}</Text>\n        </TouchableOpacity>\n    )\n}","import React from \"react\";\nimport {\n    ScrollView,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    View,\n} from \"react-native\";\nimport tinycolor from \"tinycolor2\";\nimport { COLORPICKER_COLORS } from \"../constants/colors\";\n\nexport const toState = (data, oldHue) => {\n    const color = data.hex ? tinycolor(data.hex) : tinycolor(data);\n    const hsl = color.toHsl();\n    const hsv = color.toHsv();\n    const rgb = color.toRgb();\n    const hex = color.toHex();\n    if (hsl.s === 0) {\n        hsl.h = oldHue || 0;\n        hsv.h = oldHue || 0;\n    }\n    const transparent = hex === \"000000\" && rgb.a === 0;\n\n    return {\n        hsl,\n        hex: transparent ? \"transparent\" : `#${hex}`,\n        rgb,\n        hsv,\n        oldHue: data.h || oldHue || hsl.h,\n        source: data.source,\n    };\n};\n\nexport const getContrastingColor = (data) => {\n    if (!data) {\n        return \"#fff\";\n    }\n    const col = toState(data);\n    if (col.hex === \"transparent\") {\n        return \"rgba(0,0,0,0.4)\";\n    }\n    const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n    return yiq >= 128 ? \"#000\" : \"#fff\";\n};\n\nexport const isValidHex = (hex) => {\n    if (hex === \"transparent\") {\n        return true;\n    }\n    // disable hex4 and hex8\n    const lh = String(hex).charAt(0) === \"#\" ? 1 : 0;\n    return (\n        hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor(hex).isValid()\n    );\n};\n\nfunction ColorView({ size, color, style }) {\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    borderRadius: size / 2,\n                    borderColor: \"white\",\n                    borderWidth: 2,\n                    backgroundColor: color,\n                },\n                style,\n            ]}\n        />\n    );\n}\n\nexport function ColorPicker({\n    isMobile,\n    onValueChanged,\n    ...props\n}) {\n\n    const [text, onTextChanged] = React.useState(\"FFFFFF\");\n    const COLOR_SIZE = 24;\n    const PADDING = 12;\n    const SCROLL_HEIGHT = COLOR_SIZE + PADDING * 2;\n    const COLORS = React.useMemo(() => COLORPICKER_COLORS.reverse(), []);\n    return (\n        <ScrollView\n            {...props}\n            style={[\n                isMobile\n                    ? { minHeight: SCROLL_HEIGHT, maxHeight: SCROLL_HEIGHT }\n                    : { flexShrink: 1, flexGrow: 0, maxWidth: 300 },\n                props.style,\n            ]}\n            contentContainerStyle={[\n                { paddingVertical: PADDING },\n                !isMobile && {\n                    width: \"100%\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                },\n                props.contentContainerStyle,\n            ]}\n            horizontal={isMobile}\n            pagingEnabled\n        >\n            {COLORS.map((color) => (\n                <TouchableOpacity key={color} onPress={() => onValueChanged(color)}>\n                    <ColorView\n                        size={COLOR_SIZE}\n                        color={color}\n                        style={{ margin: isMobile ? 12 : 6 }}\n                    />\n                </TouchableOpacity>\n            ))}\n            <ColorPickerInput\n                size={COLOR_SIZE}\n\n                value={text}\n                onValueChanged={onTextChanged}\n                onSubmit={(value) => {\n                    onValueChanged(value);\n                }}\n            />\n        </ScrollView>\n    );\n}\n\nfunction ColorPickerInput({ size, value, onValueChanged, onSubmit }) {\n    return (\n        <View\n            style={[\n                {\n                    height: size,\n                    flex: 1,\n                    minWidth: 275,\n                    margin: 6,\n                    borderRadius: size / 2,\n                    borderWidth: 2,\n                    flexDirection: \"row\",\n                    overflow: \"hidden\",\n                },\n                {\n                    borderColor: \"gray\",\n                    backgroundColor: \"gray\",\n                },\n            ]}\n        >\n            <View\n                style={{\n                    width: size,\n                    height: size - 4,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Text\n                    style={{ alignSelf: \"center\", color: \"#98A1A4\" }}\n                >\n                    #\n                </Text>\n            </View>\n            <TextInput\n                autoCapitalize={\"none\"}\n                autoCorrect={false}\n                value={value.replace(\"#\", \"\")}\n                onChangeText={(value) => {\n                    onValueChanged(value);\n\n                    if (isValidHex(value)) {\n                        onSubmit(\"#\" + tinycolor(value).toHex());\n                    }\n                }}\n                style={{\n                    flex: 1,\n                    paddingHorizontal: 4,\n                    color: \"#fff\",\n                    outlineColor: \"transparent\",\n                }}\n            />\n        </View>\n    );\n}\n\n\n","import { View, Text } from 'react-native';\nimport React from 'react';\nimport { styles } from '../Style';\n\nconst Footer = () => {\n    const goToTwitter = React.useCallback(() => {\n        window.open('https://twitter.com/mouhamedaly01');\n    }, []);\n    const goToGithub = React.useCallback(() => {\n        window.open('https://github.com/Sidibedev/expo-splashscreen-generator');\n    }, []);\n    return (\n        <View style={styles.footerContainer}>\n            <Text style={styles.footerText}>\n                Made with expo by\n                <Text style={styles.link} onPress={goToTwitter}>\n                    {' '}\n                    @mouhamedaly\n                </Text>\n                {'  | '}\n                <Text style={styles.link} onPress={goToGithub}>\n                    Github Project\n                </Text>\n            </Text>\n        </View>\n    );\n};\n\nexport default Footer;\n","import { StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\nimport { styles } from '../Style';\nimport Button from './Button';\nimport * as ImagePicker from 'expo-image-picker';\nimport Tooltip from 'react-native-walkthrough-tooltip';\nimport { ColorPicker } from './ColorPicker';\nimport Footer from './Footer';\n\nconst SplashscreenConfig = ({ setColor, setLogo }) => {\n    console.log('setLogo: ');\n    const [visibleColorTooltip, setVisibleColorTooltip] = React.useState(false);\n    const openCloseTooltip = () => setVisibleColorTooltip(!visibleColorTooltip);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!result.cancelled) {\n            setLogo(result.uri);\n        }\n    };\n    return (\n        <View style={styles.configContainer}>\n            <View style={styles.config}>\n                <View style={styles.header}>\n                    <Text style={styles.title}>Generate your Expo SplashScreen</Text>\n                    <Text style={styles.subtitle}>\n                        Upload your awesome logo, select your color and download your\n                        splashscreen in PNG format and with good dimensions\n                    </Text>\n                </View>\n\n                <View style={styles.uploadContainer}>\n                    <View style={[styles.row, { justifyContent: 'space-between' }]}>\n                        <View style={styles.row}>\n                            <View style={styles.dot}></View>\n                            <Text style={styles.subtitle}>Upload your logo</Text>\n                        </View>\n                        <Button title=\"Upload\" onPress={pickImage} />\n                    </View>\n                </View>\n\n                <View style={styles.uploadContainer}>\n                    <View style={[styles.row, { justifyContent: 'space-between' }]}>\n                        <View style={styles.row}>\n                            <View style={styles.dot}></View>\n                            <Text style={styles.subtitle}>Select your background color</Text>\n                        </View>\n                        <Tooltip\n                            isVisible={visibleColorTooltip}\n                            content={<ColorPicker onValueChanged={setColor} />}\n                            closeOnContentInteraction={false}\n                            backgroundColor=\"rgba(0,0,0,0)\"\n                            contentStyle={{ backgroundColor: '#F2F2F2', marginTop: 10 }}\n                            animated={true}\n                            arrowSize={{ width: 16, height: 8 }}\n                            placement=\"bottom\"\n                            showChildInTooltip={false}\n                            onClose={openCloseTooltip}\n                        >\n                            <Button\n                                title=\"Select color\"\n                                onPress={openCloseTooltip}\n                            />\n                        </Tooltip>\n                    </View>\n                </View>\n\n                <Footer />\n            </View>\n        </View>\n    );\n};\n\nexport default React.memo(SplashscreenConfig)\n","import { Text, View, Image } from 'react-native';\nimport React from 'react';\nimport { styles } from '../Style';\nimport Button from './Button';\nimport { View as MotiView } from 'moti';\n\nconst SplashscreenPreview = ({ logo, onDownload, backgroundColor }) => {\n    return (\n        <View style={styles.preview}>\n            <Text style={styles.previewTitle}>Your awesome SplashScreen</Text>\n\n            <MotiView\n                style={[styles.previewContainer, { backgroundColor }]}\n                from={{\n                    scale: 0.3,\n                    opacity: 0,\n                }}\n                animate={{\n                    scale: 1,\n                    opacity: 1,\n\n                }}\n\n                transition={{\n                    type: 'spring',\n                }}\n            >\n                {logo ? (\n                    <Image\n                        resizeMode=\"contain\"\n                        source={{ uri: logo }}\n                        style={styles.logo}\n                    />\n                ) : (\n                    <View style={styles.logoPlaceholder} />\n                )}\n            </MotiView>\n            <Button\n                style={{ marginTop: 40 }}\n                title=\"Download SplashScreen\"\n                onPress={onDownload}\n                disabled={!logo}\n            />\n        </View>\n    );\n};\n\nexport default React.memo(SplashscreenPreview);\n","import * as React from 'react';\nimport Svg, { Circle, Path, Polygon, Rect } from 'react-native-svg';\n\nexport default function EmptyIcon(props) {\n  return (\n    <Svg data-name=\"Layer 1\" width=\"300.12956\" height=\"200.70146\" viewBox=\"0 0 743.12956 477.70146\">\n      <Path d=\"M856.58507,452.44486l.96659,123.00988a6.50753,6.50753,0,0,1-6.44873,6.55087l-14.75882.116a6.50752,6.50752,0,0,1-6.55087-6.44872L828.82665,452.663a6.50753,6.50753,0,0,1,6.44873-6.55087l14.75882-.116A6.50752,6.50752,0,0,1,856.58507,452.44486Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#808080\" />\n      <Rect x=\"419.09695\" y=\"475.46074\" width=\"324.03261\" height=\"2.24072\" fill=\"#3f3d56\" />\n      <Path d=\"M803.69878,687.86319H788.9395a6.50753,6.50753,0,0,1-6.5-6.5V558.34951a6.50753,6.50753,0,0,1,6.5-6.5h14.75928a6.50753,6.50753,0,0,1,6.5,6.5V681.36319A6.50753,6.50753,0,0,1,803.69878,687.86319Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#2f2e41\" />\n      <Path d=\"M832.89116,687.86319H818.1314a6.50753,6.50753,0,0,1-6.5-6.5V558.34951a6.50753,6.50753,0,0,1,6.5-6.5h14.75976a6.50753,6.50753,0,0,1,6.5,6.5V681.36319A6.50753,6.50753,0,0,1,832.89116,687.86319Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#2f2e41\" />\n      <Circle cx=\"582.48011\" cy=\"145.40278\" r=\"53.51916\" fill=\"#808080\" />\n      <Path d=\"M803.03978,376.388l.05566-2c-3.7207-.10352-7.001-.33692-9.46582-2.1377a6.148,6.148,0,0,1-2.38135-4.52832,3.51437,3.51437,0,0,1,1.15283-2.89453c1.63623-1.38184,4.269-.93457,6.188-.05469l1.65479.75879-3.17334-23.19043-1.98145.27148,2.69922,19.72657c-2.60742-.7666-5.02344-.43653-6.67822.96093a5.471,5.471,0,0,0-1.86035,4.49219,8.13266,8.13266,0,0,0,3.20019,6.07324C795.61692,376.18,799.73265,376.29526,803.03978,376.388Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#2f2e41\" />\n      <Rect x=\"546.08307\" y=\"133.16455\" width=\"10.77148\" height=\"2\" fill=\"#2f2e41\" />\n      <Rect x=\"580.08307\" y=\"133.16455\" width=\"10.77148\" height=\"2\" fill=\"#2f2e41\" />\n      <Path d=\"M864.83678,490.04139h-44v-49a22,22,0,0,1,44,0Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#ccc\" />\n      <Path d=\"M783.15233,459.30577l-92.07449,81.576a6.50752,6.50752,0,0,1-9.17563-.55473l-9.78756-11.04717a6.50753,6.50753,0,0,1,.55473-9.17564l92.0745-81.57605a6.50752,6.50752,0,0,1,9.17563.55474l9.78756,11.04717A6.50752,6.50752,0,0,1,783.15233,459.30577Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#808080\" />\n      <Path d=\"M760.24006,490.235,731.32131,457.0732l36.9302-32.205A22,22,0,0,1,797.17026,458.03Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#ccc\" />\n      <Rect width=\"233.59252\" height=\"157\" fill=\"#808080\" /><Polygon points=\"2 8.349 4 8.349 4 3.349 9 3.349 9 1.349 2 1.349 2 8.349\" fill=\"#ccc\" />\n      <Rect x=\"219.9934\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"170.34789\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"195.17064\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"269.63891\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"294.46166\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"244.81615\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"46.23412\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"21.41137\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"71.05688\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"120.70238\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"95.87963\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"145.52514\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"319.28441\" y=\"1.34863\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Polygon points=\"344.107 1.349 344.107 3.349 349.107 3.349 349.107 8.349 351.107 8.349 351.107 1.349 344.107 1.349\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"170.2002\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"145.2998\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"95.49902\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"45.69922\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"70.59961\" width=\"2\" height=\"12.44922\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"120.39941\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"195.09961\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"349.10717\" y=\"20.79883\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Polygon points=\"349.107 225 344.107 225 344.107 227 351.107 227 351.107 220 349.107 220 349.107 225\" fill=\"#ccc\" />\n      <Rect x=\"294.46166\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"95.87963\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"46.23412\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"71.05688\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"21.41137\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"219.9934\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"269.63891\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"244.81615\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"319.28441\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"170.34789\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"145.52514\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"120.70238\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Rect x=\"195.17064\" y=\"225\" width=\"12.41162\" height=\"2\" fill=\"#ccc\" />\n      <Polygon points=\"4 220 2 220 2 227 9 227 9 225 4 225 4 220\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"70.59863\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"95.49902\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"20.79883\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"45.69824\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"195.09961\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"170.19922\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"145.2998\" width=\"2\" height=\"12.44922\" fill=\"#ccc\" />\n      <Rect x=\"1.99975\" y=\"120.39941\" width=\"2\" height=\"12.4502\" fill=\"#ccc\" />\n      <Polygon points=\"399.14 258.684 397.148 258.881 397.98 267.23 302.732 183.27 311.12 183.048 311.065 181.047 299.058 181.366 300.249 193.317 302.241 193.12 301.407 184.767 396.66 268.733 388.269 268.953 388.323 270.954 400.329 270.636 399.14 258.684\" fill=\"#3f3d56\" />\n      <Circle cx=\"349.69488\" cy=\"225.99973\" r=\"11\" fill=\"#3f3d56\" />\n      <Circle cx=\"371.07435\" cy=\"244.84564\" r=\"6\" fill=\"#ccc\" />\n      <Circle cx=\"327.56525\" cy=\"206.49257\" r=\"6\" fill=\"#ccc\" />\n      <Path d=\"M844.22828,574.72958h-67.0625a6.50753,6.50753,0,0,1-6.5-6.5V425.754a6.50753,6.50753,0,0,1,6.5-6.5h67.0625a6.50753,6.50753,0,0,1,6.5,6.5V568.22958A6.50753,6.50753,0,0,1,844.22828,574.72958Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#ccc\" />\n      <Path d=\"M843.9071,374.86791c-4.897-1.91065-7.64882-6.70422-9.02856-11.53447-1.6362-5.72811-1.38033-11.58447-1.31279-17.4745.07474-6.51776-.13724-13.34152-3.24274-19.23871-2.83114-5.3762-7.886-9.03221-13.45915-11.18755-13.58354-5.25325-28.43928-.81943-42.51253-2.22417-6.53215-.652-13.31322-2.49529-18.54993-6.61568-4.54114-3.5731-8.20364-8.94839-8.76615-14.80981-1.23536-12.87251,12.566-21.09281,24.1399-19.50049a1.55423,1.55423,0,0,0,1.84518-1.04766,1.50916,1.50916,0,0,0-1.04766-1.84517c-10.86982-1.49546-23.54241,3.9721-27.13485,14.9841-1.91765,5.87825-.53507,12.32936,2.702,17.47a29.68339,29.68339,0,0,0,15.05358,11.80562c6.651,2.477,13.91244,3.01812,20.95445,2.872,8.193-.17,16.4724-1.36718,24.64368-.22255,6.11995.85728,12.3733,3.20219,16.67624,7.78942,4.76791,5.08291,5.63553,12.1406,5.70462,18.81765.06614,6.39191-.48046,12.773.87812,19.07741,1.145,5.3133,3.55991,10.625,8.07158,13.88574a15.91838,15.91838,0,0,0,3.58754,1.89165c1.79944.70209,2.57929-2.19764.79751-2.89284Z\" transform=\"translate(-228.43522 -211.14927)\" fill=\"#2f2e41\" />\n    </Svg>\n  );\n}","import { View, Text } from 'react-native'\nimport React from 'react'\nimport { styles } from '../Style'\nimport EmptyIcon from '../assets/svg/Empty'\n\nconst Empty = () => {\n    return (\n        <View style={styles.emptyContainer}>\n            <EmptyIcon />\n            <Text style={[styles.title, { textAlign: 'center', width: \"80%\", marginTop: 30 }]}>Not yet available on mobile or tablet</Text>\n            <Text style={[styles.subtitle, { textAlign: 'center' }]}>Instead use your computer to download your splashscreen and include it into your expo project </Text>\n        </View>\n    )\n}\n\nexport default Empty","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport { COLORS } from '../constants/colors';\nimport useDimensions from '../hooks/useDimensions';\nimport { generateImagesAsync } from '../utils/processImage';\nimport SplashscreenConfig from './SplashscreenConfig';\nimport SplashscreenPreview from './SplashscreenPreview';\nimport { styles } from '../Style';\nimport Empty from './Empty';\nimport * as Analytics from 'expo-firebase-analytics';\n\n\nconst SplashscreenContainer = () => {\n    const [color, setColor] = React.useState(COLORS.secondary);\n    const [logo, setLogo] = React.useState(null);\n    const { width } = useDimensions();\n\n    const isMobile = React.useMemo(() => width < 1000, [width])\n\n    const downloadSplash = async () => {\n\n        await generateImagesAsync({ image: logo, color });\n\n        Analytics.logEvent('DOWNLOAD_SPLASHSCREEN', {\n            screen: 'home',\n            purpose: 'Download splashscreen',\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            {isMobile ? <Empty /> :\n                <View style={styles.content}>\n                    <SplashscreenConfig setColor={setColor} setLogo={setLogo} />\n                    <SplashscreenPreview\n                        logo={logo}\n                        onDownload={downloadSplash}\n                        backgroundColor={color}\n                    />\n                </View>}\n        </View>\n    );\n}\n\nexport default SplashscreenContainer\n\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Dimensions, ScaledSize } from 'react-native';\nimport { useEffect, useState } from 'react';\n\nexport default function useDimensions(): ScaledSize {\n  const [dims, setDims] = useState<ScaledSize>(() => Dimensions.get('window'));\n  useEffect(() => {\n    function handleChange({ window }: { window: ScaledSize }) {\n      setDims(window);\n    }\n    Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}\n","import React from 'react';\nimport SplashscreenContainer from '../components/SplashscreenContainer';\n\n\nconst Homescreen = () => <SplashscreenContainer />;\n\nexport default Homescreen\n","\nimport { useFonts, Poppins_500Medium, Poppins_600SemiBold, Poppins_700Bold } from '@expo-google-fonts/poppins';\nimport AppLoading from 'expo-app-loading';\nimport Homescreen from './pages/Homescreen';\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    Poppins_700Bold,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n  return <Homescreen />;\n}\n"],"sourceRoot":""}